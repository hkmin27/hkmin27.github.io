shadow$provide.module$node_modules$mathjs$lib$cjs$utils$collection=function(global,require,module,exports){function deepForEach(array,callback){(0,_is.isMatrix)(array)&&(array=array.valueOf());for(var i=0,ii=array.length;i<ii;i++){var value=array[i];Array.isArray(value)?deepForEach(value,callback):callback(value)}}function deepMap(array,callback,skipZeros){return array&&"function"===typeof array.map?array.map(function(x){return deepMap(x,callback,skipZeros)}):callback(array)}function _reduce(mat,
dim,callback){if(0>=dim){if(Array.isArray(mat[0])){var i=mat.length;var ret=mat[0].length;var i$jscomp$0,j,ret$jscomp$0=[];for(j=0;j<ret;j++){var tmp=[];for(i$jscomp$0=0;i$jscomp$0<i;i$jscomp$0++)tmp.push(mat[i$jscomp$0][j]);ret$jscomp$0.push(tmp)}ret=[];for(i=0;i<ret$jscomp$0.length;i++)ret[i]=_reduce(ret$jscomp$0[i],dim-1,callback);return ret}dim=mat[0];for(i=1;i<mat.length;i++)dim=callback(dim,mat[i]);return dim}ret=[];for(i=0;i<mat.length;i++)ret[i]=_reduce(mat[i],dim-1,callback);return ret}Object.defineProperty(exports,
"__esModule",{value:!0});exports.containsCollections=function(array){for(var i=0;i<array.length;i++)if((0,_is.isCollection)(array[i]))return!0;return!1};exports.deepForEach=deepForEach;exports.deepMap=deepMap;exports.reduce=function(mat,dim,callback){var size=Array.isArray(mat)?(0,_array.arraySize)(mat):mat.size();if(0>dim||dim>=size.length)throw new _IndexError.IndexError(dim,size.length);return(0,_is.isMatrix)(mat)?mat.create(_reduce(mat.valueOf(),dim,callback)):_reduce(mat,dim,callback)};exports.scatter=
function(a,j,w,x,u,mark,cindex,f,inverse,update,value){var avalues=a._values,aindex=a._index,aptr=a._ptr;if(x)for(a=aptr[j],j=aptr[j+1];a<j;a++)aptr=aindex[a],w[aptr]!==mark?(w[aptr]=mark,cindex.push(aptr),update?(x[aptr]=inverse?f(avalues[a],value):f(value,avalues[a]),u[aptr]=mark):x[aptr]=avalues[a]):(x[aptr]=inverse?f(avalues[a],x[aptr]):f(x[aptr],avalues[a]),u[aptr]=mark);else for(a=aptr[j],j=aptr[j+1];a<j;a++)aptr=aindex[a],w[aptr]!==mark?(w[aptr]=mark,cindex.push(aptr)):u[aptr]=mark};var _is=
require("module$node_modules$mathjs$lib$cjs$utils$is"),_IndexError=require("module$node_modules$mathjs$lib$cjs$error$IndexError"),_array=require("module$node_modules$mathjs$lib$cjs$utils$array")}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$utils$collection.js.map
