{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$type$complex$Complex.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/type/complex/Complex.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$type$complex$Complex\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createComplexClass = void 0;\n\nvar _complex = _interopRequireDefault(require(\"complex.js\"));\n\nvar _number = require(\"../../utils/number.js\");\n\nvar _is = require(\"../../utils/is.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar name = 'Complex';\nvar dependencies = [];\nvar createComplexClass = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function () {\n  /**\n   * Attach type information\n   */\n  _complex[\"default\"].prototype.type = 'Complex';\n  _complex[\"default\"].prototype.isComplex = true;\n  /**\n   * Get a JSON representation of the complex number\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Complex\", \"re\": 2, \"im\": 3}`\n   */\n\n  _complex[\"default\"].prototype.toJSON = function () {\n    return {\n      mathjs: 'Complex',\n      re: this.re,\n      im: this.im\n    };\n  };\n  /*\n   * Return the value of the complex number in polar notation\n   * The angle phi will be set in the interval of [-pi, pi].\n   * @return {{r: number, phi: number}} Returns and object with properties r and phi.\n   */\n\n\n  _complex[\"default\"].prototype.toPolar = function () {\n    return {\n      r: this.abs(),\n      phi: this.arg()\n    };\n  };\n  /**\n   * Get a string representation of the complex number,\n   * with optional formatting options.\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @return {string} str\n   */\n\n\n  _complex[\"default\"].prototype.format = function (options) {\n    var str = '';\n    var im = this.im;\n    var re = this.re;\n    var strRe = (0, _number.format)(this.re, options);\n    var strIm = (0, _number.format)(this.im, options); // round either re or im when smaller than the configured precision\n\n    var precision = (0, _is.isNumber)(options) ? options : options ? options.precision : null;\n\n    if (precision !== null) {\n      var epsilon = Math.pow(10, -precision);\n\n      if (Math.abs(re / im) < epsilon) {\n        re = 0;\n      }\n\n      if (Math.abs(im / re) < epsilon) {\n        im = 0;\n      }\n    }\n\n    if (im === 0) {\n      // real value\n      str = strRe;\n    } else if (re === 0) {\n      // purely complex value\n      if (im === 1) {\n        str = 'i';\n      } else if (im === -1) {\n        str = '-i';\n      } else {\n        str = strIm + 'i';\n      }\n    } else {\n      // complex value\n      if (im < 0) {\n        if (im === -1) {\n          str = strRe + ' - i';\n        } else {\n          str = strRe + ' - ' + strIm.substring(1) + 'i';\n        }\n      } else {\n        if (im === 1) {\n          str = strRe + ' + i';\n        } else {\n          str = strRe + ' + ' + strIm + 'i';\n        }\n      }\n    }\n\n    return str;\n  };\n  /**\n   * Create a complex number from polar coordinates\n   *\n   * Usage:\n   *\n   *     Complex.fromPolar(r: number, phi: number) : Complex\n   *     Complex.fromPolar({r: number, phi: number}) : Complex\n   *\n   * @param {*} args...\n   * @return {Complex}\n   */\n\n\n  _complex[\"default\"].fromPolar = function (args) {\n    switch (arguments.length) {\n      case 1:\n        {\n          var arg = arguments[0];\n\n          if (_typeof(arg) === 'object') {\n            return (0, _complex[\"default\"])(arg);\n          } else {\n            throw new TypeError('Input has to be an object with r and phi keys.');\n          }\n        }\n\n      case 2:\n        {\n          var r = arguments[0];\n          var phi = arguments[1];\n\n          if ((0, _is.isNumber)(r)) {\n            if ((0, _is.isUnit)(phi) && phi.hasBase('ANGLE')) {\n              // convert unit to a number in radians\n              phi = phi.toNumber('rad');\n            }\n\n            if ((0, _is.isNumber)(phi)) {\n              return new _complex[\"default\"]({\n                r: r,\n                phi: phi\n              });\n            }\n\n            throw new TypeError('Phi is not a number nor an angle unit.');\n          } else {\n            throw new TypeError('Radius r is not a number.');\n          }\n        }\n\n      default:\n        throw new SyntaxError('Wrong number of arguments in function fromPolar');\n    }\n  };\n\n  _complex[\"default\"].prototype.valueOf = _complex[\"default\"].prototype.toString;\n  /**\n   * Create a Complex number from a JSON object\n   * @param {Object} json  A JSON Object structured as\n   *                       {\"mathjs\": \"Complex\", \"re\": 2, \"im\": 3}\n   *                       All properties are optional, default values\n   *                       for `re` and `im` are 0.\n   * @return {Complex} Returns a new Complex number\n   */\n\n  _complex[\"default\"].fromJSON = function (json) {\n    return new _complex[\"default\"](json);\n  };\n  /**\n   * Compare two complex numbers, `a` and `b`:\n   *\n   * - Returns 1 when the real part of `a` is larger than the real part of `b`\n   * - Returns -1 when the real part of `a` is smaller than the real part of `b`\n   * - Returns 1 when the real parts are equal\n   *   and the imaginary part of `a` is larger than the imaginary part of `b`\n   * - Returns -1 when the real parts are equal\n   *   and the imaginary part of `a` is smaller than the imaginary part of `b`\n   * - Returns 0 when both real and imaginary parts are equal.\n   *\n   * @params {Complex} a\n   * @params {Complex} b\n   * @returns {number} Returns the comparison result: -1, 0, or 1\n   */\n\n\n  _complex[\"default\"].compare = function (a, b) {\n    if (a.re > b.re) {\n      return 1;\n    }\n\n    if (a.re < b.re) {\n      return -1;\n    }\n\n    if (a.im > b.im) {\n      return 1;\n    }\n\n    if (a.im < b.im) {\n      return -1;\n    }\n\n    return 0;\n  };\n\n  return _complex[\"default\"];\n}, {\n  isClass: true\n});\nexports.createComplexClass = createComplexClass;\n};"],
"names":["shadow$provide","global","require","module","exports","_typeof","obj","Symbol","iterator","constructor","prototype","Object","defineProperty","value","createComplexClass","_complex","_interopRequireDefault","__esModule","_number","_is","_factory","factory","name","dependencies","type","isComplex","toJSON","mathjs","re","im","toPolar","r","abs","phi","arg","format","options","strRe","strIm","precision","isNumber","epsilon","Math","pow","str","substring","fromPolar","args","arguments","length","TypeError","isUnit","hasBase","toNumber","SyntaxError","valueOf","toString","fromJSON","json","compare","a","b","isClass"]
}
