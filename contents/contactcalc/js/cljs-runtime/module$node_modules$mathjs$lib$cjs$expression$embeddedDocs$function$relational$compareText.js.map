{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$relational$compareText.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,0FAAA,CAA+G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGvJC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,eAAR,CARsBA,CACpBC,KAAM,aADcD,CAEpBE,SAAU,YAFUF,CAGpBG,OAAQ,CAAC,mBAAD,CAHYH,CAIpBI,YAAa,kIAJOJ,CAKpBK,SAAU,wLAAA,CAAA,KAAA,CAAA,GAAA,CALUL;AAMpBM,QAAS,CAAC,SAAD,CAAY,gBAAZ,CANWN,CAPiI;",
"sources":["node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/relational/compareText.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$relational$compareText\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compareTextDocs = void 0;\nvar compareTextDocs = {\n  name: 'compareText',\n  category: 'Relational',\n  syntax: ['compareText(x, y)'],\n  description: 'Compare two strings lexically. Comparison is case sensitive. ' + 'Returns 1 when x > y, -1 when x < y, and 0 when x == y.',\n  examples: ['compareText(\"B\", \"A\")', 'compareText(\"A\", \"B\")', 'compareText(\"A\", \"A\")', 'compareText(\"2\", \"10\")', 'compare(\"2\", \"10\")', 'compare(2, 10)', 'compareNatural(\"2\", \"10\")', 'compareText(\"B\", [\"A\", \"B\", \"C\"])'],\n  seealso: ['compare', 'compareNatural']\n};\nexports.compareTextDocs = compareTextDocs;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","compareTextDocs","name","category","syntax","description","examples","seealso"]
}
