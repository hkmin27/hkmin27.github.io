shadow$provide.module$node_modules$mathjs$lib$cjs$function$geometry$intersect=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createIntersect=void 0;var _is=require("module$node_modules$mathjs$lib$cjs$utils$is");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("intersect","typed config abs add addScalar matrix multiply multiplyScalar divideScalar subtract smaller equalScalar".split(" "),function(_ref){function _isNumeric(a){return"number"===
typeof a||(0,_is.isBigNumber)(a)}function _2d(x){return 2===x.length&&_isNumeric(x[0])&&_isNumeric(x[1])}function _3d(x){return 3===x.length&&_isNumeric(x[0])&&_isNumeric(x[1])&&_isNumeric(x[2])}function _intersect3dHelper(a,b,c,d,e,f,g,h,i,j,k,l){a=multiplyScalar(subtract(a,b),subtract(c,d));e=multiplyScalar(subtract(e,f),subtract(g,h));i=multiplyScalar(subtract(i,j),subtract(k,l));return addScalar(addScalar(a,e),i)}var typed=_ref.typed,config=_ref.config,abs=_ref.abs,add=_ref.add,addScalar=_ref.addScalar,
matrix=_ref.matrix,multiply=_ref.multiply,multiplyScalar=_ref.multiplyScalar,divideScalar=_ref.divideScalar,subtract=_ref.subtract,smaller=_ref.smaller,equalScalar=_ref.equalScalar;return typed("intersect",{"Array, Array, Array":function(x$jscomp$0,y$jscomp$0,plane){if(!_3d(x$jscomp$0))throw new TypeError("Array with 3 numbers or BigNumbers expected for first argument");if(!_3d(y$jscomp$0))throw new TypeError("Array with 3 numbers or BigNumbers expected for second argument");if(!(4===plane.length&&
_isNumeric(plane[0])&&_isNumeric(plane[1])&&_isNumeric(plane[2])&&_isNumeric(plane[3])))throw new TypeError("Array with 4 numbers expected as third argument");var x1=x$jscomp$0[0],y1=x$jscomp$0[1];x$jscomp$0=x$jscomp$0[2];var x2=y$jscomp$0[0],y2=y$jscomp$0[1];y$jscomp$0=y$jscomp$0[2];var x=plane[0],y=plane[1],z=plane[2];plane=plane[3];var x1x=multiplyScalar(x1,x);x=multiplyScalar(x2,x);var y1y=multiplyScalar(y1,y);y=multiplyScalar(y2,y);var z1z=multiplyScalar(x$jscomp$0,z);z=multiplyScalar(y$jscomp$0,
z);z=divideScalar(subtract(subtract(subtract(plane,x1x),y1y),z1z),subtract(subtract(subtract(addScalar(addScalar(x,y),z),x1x),y1y),z1z));x1=addScalar(x1,multiplyScalar(z,subtract(x2,x1)));y1=addScalar(y1,multiplyScalar(z,subtract(y2,y1)));x$jscomp$0=addScalar(x$jscomp$0,multiplyScalar(z,subtract(y$jscomp$0,x$jscomp$0)));return[x1,y1,x$jscomp$0]},"Array, Array, Array, Array":function(w,x,y,z){if(2===w.length){if(!_2d(w))throw new TypeError("Array with 2 numbers or BigNumbers expected for first argument");
if(!_2d(x))throw new TypeError("Array with 2 numbers or BigNumbers expected for second argument");if(!_2d(y))throw new TypeError("Array with 2 numbers or BigNumbers expected for third argument");if(!_2d(z))throw new TypeError("Array with 2 numbers or BigNumbers expected for fourth argument");var d1=subtract(w,x),d2=subtract(y,z),det=subtract(multiplyScalar(d1[0],d2[1]),multiplyScalar(d2[0],d1[1]));if(smaller(abs(det),config.epsilon))w=null;else{x=multiplyScalar(d2[0],w[1]);var d21o10=multiplyScalar(d2[1],
w[0]);z=multiplyScalar(d2[0],y[1]);y=multiplyScalar(d2[1],y[0]);y=divideScalar(addScalar(subtract(subtract(x,d21o10),z),y),det);w=add(multiply(d1,y),w)}return w}if(3===w.length){if(!_3d(w))throw new TypeError("Array with 3 numbers or BigNumbers expected for first argument");if(!_3d(x))throw new TypeError("Array with 3 numbers or BigNumbers expected for second argument");if(!_3d(y))throw new TypeError("Array with 3 numbers or BigNumbers expected for third argument");if(!_3d(z))throw new TypeError("Array with 3 numbers or BigNumbers expected for fourth argument");
d2=w[0];d1=w[1];det=w[2];var x2=x[0],y2=x[1],z2=x[2];x=y[0];w=y[1];y=y[2];var x4=z[0];d21o10=z[1];z=z[2];var d1343=_intersect3dHelper(d2,x,x4,x,d1,w,d21o10,w,det,y,z,y),d4321=_intersect3dHelper(x4,x,x2,d2,d21o10,w,y2,d1,z,y,z2,det),d1321=_intersect3dHelper(d2,x,x2,d2,d1,w,y2,d1,det,y,z2,det),d4343=_intersect3dHelper(x4,x,x4,x,d21o10,w,d21o10,w,z,y,z,y),d2121=_intersect3dHelper(x2,d2,x2,d2,y2,d1,y2,d1,z2,det,z2,det);d1321=divideScalar(subtract(multiplyScalar(d1343,d4321),multiplyScalar(d1321,d4343)),
subtract(multiplyScalar(d2121,d4343),multiplyScalar(d4321,d4321)));d1343=divideScalar(addScalar(d1343,multiplyScalar(d1321,d4321)),d4343);d2=addScalar(d2,multiplyScalar(d1321,subtract(x2,d2)));d1=addScalar(d1,multiplyScalar(d1321,subtract(y2,d1)));det=addScalar(det,multiplyScalar(d1321,subtract(z2,det)));x=addScalar(x,multiplyScalar(d1343,subtract(x4,x)));w=addScalar(w,multiplyScalar(d1343,subtract(d21o10,w)));y=addScalar(y,multiplyScalar(d1343,subtract(z,y)));w=equalScalar(d2,x)&&equalScalar(d1,
w)&&equalScalar(det,y)?[d2,d1,det]:null;return w}throw new TypeError("Arrays with two or thee dimensional points expected");},"Matrix, Matrix, Matrix":function(x,y,plane){return matrix(this(x.valueOf(),y.valueOf(),plane.valueOf()))},"Matrix, Matrix, Matrix, Matrix":function(w,x,y,z){return matrix(this(w.valueOf(),x.valueOf(),y.valueOf(),z.valueOf()))}})});exports.createIntersect=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$geometry$intersect.js.map
