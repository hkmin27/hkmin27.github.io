shadow$provide.module$node_modules$mathjs$lib$cjs$function$arithmetic$nthRoots=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createNthRoots=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("nthRoots",["config","typed","divideScalar","Complex"],function(_ref){function _nthComplexRoots(a,root){if(0>root)throw Error("Root must be greater than zero");if(0===root)throw Error("Root must be non-zero");
if(0!==root%1)throw Error("Root must be an integer");if(0===a||0===a.abs())return[new Complex(0,0)];var aIsNumeric="number"===typeof a;if(aIsNumeric||0===a.re||0===a.im)var offset=aIsNumeric?2*+(0>a):0===a.im?2*+(0>a.re):2*+(0>a.im)+1;aIsNumeric=a.arg();var abs=a.abs();a=[];abs=Math.pow(abs,1/root);for(var k=0;k<root;k++){var halfPiFactor=(offset+4*k)/root;halfPiFactor===Math.round(halfPiFactor)?a.push(_calculateExactResult[halfPiFactor%4](abs)):a.push(new Complex({r:abs,phi:(aIsNumeric+2*Math.PI*
k)/root}))}return a}var typed=_ref.typed,Complex=_ref.Complex,_calculateExactResult=[function(val){return new Complex(val,0)},function(val){return new Complex(0,val)},function(val){return new Complex(-val,0)},function(val){return new Complex(0,-val)}];return typed("nthRoots",{Complex:function(x){return _nthComplexRoots(x,2)},"Complex, number":_nthComplexRoots})});exports.createNthRoots=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$arithmetic$nthRoots.js.map
