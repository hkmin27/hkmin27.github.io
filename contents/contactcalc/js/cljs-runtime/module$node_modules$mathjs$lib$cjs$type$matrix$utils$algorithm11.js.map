{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm11.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/type/matrix/utils/algorithm11.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm11\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAlgorithm11 = void 0;\n\nvar _factory = require(\"../../../utils/factory.js\");\n\nvar name = 'algorithm11';\nvar dependencies = ['typed', 'equalScalar'];\nvar createAlgorithm11 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      equalScalar = _ref.equalScalar;\n\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).\n   * Callback function invoked NZ times (number of nonzero items in S).\n   *\n   *\n   *          \u250c  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = \u2524\n   *          \u2514  0          ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  return function algorithm11(s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype; // sparse matrix cannot be a Pattern matrix\n\n    if (!avalues) {\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // convert b to the same datatype\n\n      b = typed.convert(b, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // initialize ptr\n      cptr[j] = cindex.length; // values in j\n\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = aindex[k]; // invoke callback\n\n        var v = inverse ? cf(b, avalues[k]) : cf(avalues[k], b); // check value is zero\n\n        if (!eq(v, zero)) {\n          // push index & value\n          cindex.push(i);\n          cvalues.push(v);\n        }\n      }\n    } // update ptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return s.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\nexports.createAlgorithm11 = createAlgorithm11;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createAlgorithm11","_factory","factory","name","dependencies","_ref","typed","equalScalar","algorithm11","s","b","callback","inverse","avalues","_values","aindex","_index","aptr","_ptr","asize","_size","adt","_datatype","Error","rows","columns","eq","zero","cf","dt","find","convert","cvalues","cindex","cptr","j","length","k1","k","k0","i","v","push","createSparseMatrix","values","index","ptr","size","datatype"]
}
