{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$matrix$ones.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,UAAR,CAAqB,IAAK,EAE1B,KAAIC,IAAMP,OAAA,CAAQ,6CAAR,CAAV,CAEIQ,QAAUR,OAAA,CAAQ,iDAAR,CAFd,CAIIS,OAAST,OAAA,CAAQ,gDAAR,CAETU,OAAAA,CAAWV,OAAA,CAAQ,kDAAR,CAIXM,OAAAA,CAA4B,CAAC,CAAA,CAAGI,MAASC,CAAAA,OAAb,EAFrBC,MAEqB,CADbC,CAAC,OAADA,CAAU,QAAVA;AAAoB,QAApBA,CAA8B,WAA9BA,CACa,CAA0C,QAAS,CAACC,IAAD,CAAO,CA0ExFC,QAASA,MAAK,CAACC,IAAD,CAAOC,MAAP,CAAe,CAG3B,IAAIC,aAFgBC,UAAAC,CAAWJ,IAAXI,CAED,CAAgB,IAAIC,SAAJ,CAAc,CAAd,CAAhB,CAAmC,CAEtDC,UAAA,CAAUN,IAAV,CAEA,IAAIC,MAAJ,CAIE,MAFIM,OAEJ,CAFQC,MAAA,CAAOP,MAAP,CAER,CAAkB,CAAlB,CAAID,IAAKS,CAAAA,MAAT,CACSF,MAAEG,CAAAA,MAAF,CAASV,IAAT,CAAeE,YAAf,CADT,CAIOK,MAGHI,OAAAA,CAAM,EAEV,OAAkB,EAAlB,CAAIX,IAAKS,CAAAA,MAAT,CACS,CAAC,CAAA,CAAGhB,MAAOiB,CAAAA,MAAX,EAAmBC,MAAnB,CAAwBX,IAAxB,CAA8BE,YAA9B,CADT,CAIOS,MAxBkB,CA6B7BR,QAASA,WAAU,CAACH,IAAD,CAAO,CACxB,IAAII,cAAgB,CAAA,CACpBJ,KAAKY,CAAAA,OAAL,CAAa,QAAS,CAACvB,KAAD,CAAQwB,KAAR,CAAeF,GAAf,CAAoB,CACpC,CAAC,CAAA,CAAGpB,GAAIuB,CAAAA,WAAR,EAAqBzB,KAArB,CAAJ,GACEe,aACA,CADgB,CAAA,CAChB,CAAAO,GAAA,CAAIE,KAAJ,CAAA,CAAaxB,KAAM0B,CAAAA,QAAN,EAFf,CADwC,CAA1C,CAMA,OAAOX,cARiB,CAY1BE,QAASA,UAAS,CAACN,IAAD,CAAO,CACvBA,IAAKY,CAAAA,OAAL,CAAa,QAAS,CAACvB,KAAD,CAAQ,CAC5B,GAAqB,QAArB;AAAI,MAAOA,MAAX,EAAiC,CAAC,CAAC,CAAA,CAAGG,OAAQwB,CAAAA,SAAZ,EAAuB3B,KAAvB,CAAlC,EAA2E,CAA3E,CAAmEA,KAAnE,CACE,KAAU4B,MAAJ,CAAU,uDAAV,CAAN,CAF0B,CAA9B,CADuB,CAnH+D,IACpFC,MAAQpB,IAAKoB,CAAAA,KADuE,CAEpFC,OAASrB,IAAKqB,CAAAA,MAFsE,CAGpFX,OAASV,IAAKU,CAAAA,MAHsE,CAIpFH,UAAYP,IAAKO,CAAAA,SAmCrB,OAAOa,MAAA,CAAM,MAAN,CAAc,CACnB,GAAIE,QAAU,EAAG,CACf,MAAyB,OAAlB,GAAAD,MAAOX,CAAAA,MAAP,CAA4BT,KAAA,CAAM,EAAN,CAA5B,CAAwCA,KAAA,CAAM,EAAN,CAAU,SAAV,CADhC,CADE,CAMnB,iCAAkCsB,QAA8B,CAACrB,IAAD,CAAO,CAGrE,GAAoB,QAApB,GAAI,MAFOA,KAAAsB,CAAKtB,IAAKS,CAAAA,MAAVa,CAAmB,CAAnBA,CAEX,CAA8B,CAC5B,IAAIrB,OAASD,IAAKuB,CAAAA,GAAL,EACb,OAAOxB,MAAA,CAAMC,IAAN,CAAYC,MAAZ,CAFqB,CAGvB,MAAsB,OAAtB,GAAIkB,MAAOX,CAAAA,MAAX,CACET,KAAA,CAAMC,IAAN,CADF,CAGED,KAAA,CAAMC,IAAN,CAAY,SAAZ,CAT4D,CANpD;AAkBnBwB,MAAOzB,KAlBY,CAmBnB0B,OAAQA,QAAe,CAACzB,IAAD,CAAO,CAC5B,IAAIC,OAASD,IAAK0B,CAAAA,OAAL,EACb,OAAO3B,MAAA,CAAMC,IAAK2B,CAAAA,OAAL,EAAN,CAAsB1B,MAAtB,CAFqB,CAnBX,CAuBnB,yBAA0B2B,QAA0B,CAAC5B,IAAD,CAAOC,MAAP,CAAe,CACjE,MAAOF,MAAA,CAAMC,IAAK2B,CAAAA,OAAL,EAAN,CAAsB1B,MAAtB,CAD0D,CAvBhD,CAAd,CAvCiF,CAA1D,CA2HhCf,QAAQI,CAAAA,UAAR,CAAqBA,MA7I+F;",
"sources":["node_modules/mathjs/lib/cjs/function/matrix/ones.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$matrix$ones\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createOnes = void 0;\n\nvar _is = require(\"../../utils/is.js\");\n\nvar _number = require(\"../../utils/number.js\");\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'ones';\nvar dependencies = ['typed', 'config', 'matrix', 'BigNumber'];\nvar createOnes = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      matrix = _ref.matrix,\n      BigNumber = _ref.BigNumber;\n\n  /**\n   * Create a matrix filled with ones. The created matrix can have one or\n   * multiple dimensions.\n   *\n   * Syntax:\n   *\n   *    math.ones(m)\n   *    math.ones(m, format)\n   *    math.ones(m, n)\n   *    math.ones(m, n, format)\n   *    math.ones([m, n])\n   *    math.ones([m, n], format)\n   *    math.ones([m, n, p, ...])\n   *    math.ones([m, n, p, ...], format)\n   *\n   * Examples:\n   *\n   *    math.ones(3)                   // returns [1, 1, 1]\n   *    math.ones(3, 2)                // returns [[1, 1], [1, 1], [1, 1]]\n   *    math.ones(3, 2, 'dense')       // returns Dense Matrix [[1, 1], [1, 1], [1, 1]]\n   *\n   *    const A = [[1, 2, 3], [4, 5, 6]]\n   *    math.ones(math.size(A))       // returns [[1, 1, 1], [1, 1, 1]]\n   *\n   * See also:\n   *\n   *    zeros, identity, size, range\n   *\n   * @param {...number | Array} size    The size of each dimension of the matrix\n   * @param {string} [format]           The Matrix storage format\n   *\n   * @return {Array | Matrix | number}  A matrix filled with ones\n   */\n  return typed('ones', {\n    '': function _() {\n      return config.matrix === 'Array' ? _ones([]) : _ones([], 'default');\n    },\n    // math.ones(m, n, p, ..., format)\n    // TODO: more accurate signature '...number | BigNumber, string' as soon as typed-function supports this\n    '...number | BigNumber | string': function numberBigNumberString(size) {\n      var last = size[size.length - 1];\n\n      if (typeof last === 'string') {\n        var format = size.pop();\n        return _ones(size, format);\n      } else if (config.matrix === 'Array') {\n        return _ones(size);\n      } else {\n        return _ones(size, 'default');\n      }\n    },\n    Array: _ones,\n    Matrix: function Matrix(size) {\n      var format = size.storage();\n      return _ones(size.valueOf(), format);\n    },\n    'Array | Matrix, string': function ArrayMatrixString(size, format) {\n      return _ones(size.valueOf(), format);\n    }\n  });\n  /**\n   * Create an Array or Matrix with ones\n   * @param {Array} size\n   * @param {string} [format='default']\n   * @return {Array | Matrix}\n   * @private\n   */\n\n  function _ones(size, format) {\n    var hasBigNumbers = _normalize(size);\n\n    var defaultValue = hasBigNumbers ? new BigNumber(1) : 1;\n\n    _validate(size);\n\n    if (format) {\n      // return a matrix\n      var m = matrix(format);\n\n      if (size.length > 0) {\n        return m.resize(size, defaultValue);\n      }\n\n      return m;\n    } else {\n      // return an Array\n      var arr = [];\n\n      if (size.length > 0) {\n        return (0, _array.resize)(arr, size, defaultValue);\n      }\n\n      return arr;\n    }\n  } // replace BigNumbers with numbers, returns true if size contained BigNumbers\n\n\n  function _normalize(size) {\n    var hasBigNumbers = false;\n    size.forEach(function (value, index, arr) {\n      if ((0, _is.isBigNumber)(value)) {\n        hasBigNumbers = true;\n        arr[index] = value.toNumber();\n      }\n    });\n    return hasBigNumbers;\n  } // validate arguments\n\n\n  function _validate(size) {\n    size.forEach(function (value) {\n      if (typeof value !== 'number' || !(0, _number.isInteger)(value) || value < 0) {\n        throw new Error('Parameters in function ones must be positive integers');\n      }\n    });\n  }\n});\nexports.createOnes = createOnes;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createOnes","_is","_number","_array","_factory","factory","name","dependencies","_ref","_ones","size","format","defaultValue","_normalize","hasBigNumbers","BigNumber","_validate","m","matrix","length","resize","arr","forEach","index","isBigNumber","toNumber","isInteger","Error","typed","config","_","numberBigNumberString","last","pop","Array","Matrix","storage","valueOf","ArrayMatrixString"]
}
