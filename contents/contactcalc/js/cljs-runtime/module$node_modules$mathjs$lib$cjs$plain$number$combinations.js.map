{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$plain$number$combinations.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,4DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYzHC,QAASA,mBAAkB,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAChC,GAAI,CAAC,CAAC,CAAA,CAAGC,OAAQC,CAAAA,SAAZ,EAAuBH,CAAvB,CAAL,EAAsC,CAAtC,CAAkCA,CAAlC,CACE,KAAM,KAAII,SAAJ,CAAc,0DAAd,CAAN,CAGF,GAAI,CAAC,CAAC,CAAA,CAAGF,OAAQC,CAAAA,SAAZ,EAAuBF,CAAvB,CAAL,EAAsC,CAAtC,CAAkCA,CAAlC,CACE,KAAM,KAAIG,SAAJ,CAAc,0DAAd,CAAN,CAGF,GAAIH,CAAJ,CAAQD,CAAR,CACE,KAAM,KAAII,SAAJ,CAAc,mCAAd,CAAN,CAGF,IAAIC,QAAUL,CAAVK,CAAcJ,CAGlB,IAAIA,CAAJ,CAAQI,OAAR,CAEE,MADAC,EACO,CADK,CAAC,CAAA,CAAGC,QAASC,CAAAA,OAAb,EAAsBH,OAAtB;AAAgC,CAAhC,CAAmCL,CAAnC,CACL,CAAAM,CAAA,CAAY,CAAC,CAAA,CAAGC,QAASC,CAAAA,OAAb,EAAsB,CAAtB,CAAyBP,CAAzB,CAGrBK,EAAA,CAAY,CAAC,CAAA,CAAGC,QAASC,CAAAA,OAAb,EAAsBP,CAAtB,CAA0B,CAA1B,CAA6BD,CAA7B,CACZ,OAAOM,EAAP,CAAmB,CAAC,CAAA,CAAGC,QAASC,CAAAA,OAAb,EAAsB,CAAtB,CAAyBH,OAAzB,CAtBa,CATlCI,MAAOC,CAAAA,cAAP,CAAsBZ,OAAtB,CAA+B,YAA/B,CAA6C,CAC3Ca,MAAO,CAAA,CADoC,CAA7C,CAGAb,QAAQC,CAAAA,kBAAR,CAA6BA,kBAE7B,KAAIG,QAAUN,OAAA,CAAQ,iDAAR,CAAd,CAEIW,SAAWX,OAAA,CAAQ,kDAAR,CA2BfG,mBAAmBa,CAAAA,SAAnB,CAA+B,gBArC0F;",
"sources":["node_modules/mathjs/lib/cjs/plain/number/combinations.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$plain$number$combinations\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.combinationsNumber = combinationsNumber;\n\nvar _number = require(\"../../utils/number.js\");\n\nvar _product = require(\"../../utils/product.js\");\n\nfunction combinationsNumber(n, k) {\n  if (!(0, _number.isInteger)(n) || n < 0) {\n    throw new TypeError('Positive integer value expected in function combinations');\n  }\n\n  if (!(0, _number.isInteger)(k) || k < 0) {\n    throw new TypeError('Positive integer value expected in function combinations');\n  }\n\n  if (k > n) {\n    throw new TypeError('k must be less than or equal to n');\n  }\n\n  var nMinusk = n - k;\n  var prodrange;\n\n  if (k < nMinusk) {\n    prodrange = (0, _product.product)(nMinusk + 1, n);\n    return prodrange / (0, _product.product)(1, k);\n  }\n\n  prodrange = (0, _product.product)(k + 1, n);\n  return prodrange / (0, _product.product)(1, nMinusk);\n}\n\ncombinationsNumber.signature = 'number, number';\n};"],
"names":["shadow$provide","global","require","module","exports","combinationsNumber","n","k","_number","isInteger","TypeError","nMinusk","prodrange","_product","product","Object","defineProperty","value","signature"]
}
