shadow$provide.module$node_modules$mathjs$lib$cjs$function$combinatorics$composition=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createComposition=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("composition","typed addScalar combinations isNegative isPositive isInteger larger".split(" "),function(_ref){var typed=_ref.typed,addScalar=_ref.addScalar,combinations=_ref.combinations,isPositive=
_ref.isPositive,isInteger=_ref.isInteger,larger=_ref.larger;return typed("composition",{"number | BigNumber, number | BigNumber":function(n,k){if(!(isInteger(n)&&isPositive(n)&&isInteger(k)&&isPositive(k)))throw new TypeError("Positive integer value expected in function composition");if(larger(k,n))throw new TypeError("k must be less than or equal to n in function composition");return combinations(addScalar(n,-1),addScalar(k,-1))}})});exports.createComposition=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$combinatorics$composition.js.map
