{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$transform$range_transform.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,uEAAA,CAA4F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,oBAAR,CAA+B,IAAK,EAEhCC,OAAAA,CAAWP,OAAA,CAAQ,kDAAR,CAEf,KAAIQ,OAASR,OAAA,CAAQ,0DAAR,CAITM,QAAAA,CAAsC,CAAC,CAAA,CAAGC,MAASE,CAAAA,OAAb,EAF/BC,OAE+B,CADvBC,mEAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CACuB,CAA0C,QAAS,CAACC,IAAD,CAAO,CAAA,IAC9FC;AAAQD,IAAKC,CAAAA,KADiF,CAE9FC,OAASF,IAAKE,CAAAA,MAFgF,CAG9FC,OAASH,IAAKG,CAAAA,MAHgF,CAI9FC,UAAYJ,IAAKI,CAAAA,SAJ6E,CAK9FC,QAAUL,IAAKK,CAAAA,OAL+E,CAM9FC,UAAYN,IAAKM,CAAAA,SAN6E,CAO9FC,OAASP,IAAKO,CAAAA,MACdC,KAAAA,CAAWR,IAAKQ,CAAAA,QACpB,KAAIC,MAAQ,CAAC,CAAA,CAAGb,MAAOc,CAAAA,WAAX,EAAwB,CAClCT,MAAOA,KAD2B,CAElCC,OAAQA,MAF0B,CAGlCC,OAAQA,MAH0B,CAIlCC,UAAWA,SAJuB,CAKlCC,QAASA,OALyB,CAMlCC,UAAWA,SANuB,CAOlCC,OAAQA,MAP0B,CAQlCC,SAAUA,IARwB,CAAxB,CAiBZ,OAAOP,MAAA,CAAM,OAAN,CAAe,CACpB,SAAUU,QAAY,CAACC,IAAD,CAAO,CAIP,SAApB,GAAI,MAFOA,KAAAC,CADKD,IAAKE,CAAAA,MACVD,CADmB,CACnBA,CAEX,EAEED,IAAKG,CAAAA,IAAL,CAAU,CAAA,CAAV,CAGF,OAAON,MAAMO,CAAAA,KAAN,CAAY,IAAZ,CAAkBJ,IAAlB,CAToB,CADT,CAAf,CA1B2F,CAA1D,CAuCvC,CACDK,oBAAqB,CAAA,CADpB,CAvCuC,CA0C1C3B,QAAQI,CAAAA,oBAAR;AAA+BA,OAxDqG;",
"sources":["node_modules/mathjs/lib/cjs/expression/transform/range.transform.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$transform$range_transform\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRangeTransform = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _range = require(\"../../function/matrix/range.js\");\n\nvar name = 'range';\nvar dependencies = ['typed', 'config', '?matrix', '?bignumber', 'smaller', 'smallerEq', 'larger', 'largerEq'];\nvar createRangeTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      matrix = _ref.matrix,\n      bignumber = _ref.bignumber,\n      smaller = _ref.smaller,\n      smallerEq = _ref.smallerEq,\n      larger = _ref.larger,\n      largerEq = _ref.largerEq;\n  var range = (0, _range.createRange)({\n    typed: typed,\n    config: config,\n    matrix: matrix,\n    bignumber: bignumber,\n    smaller: smaller,\n    smallerEq: smallerEq,\n    larger: larger,\n    largerEq: largerEq\n  });\n  /**\n   * Attach a transform function to math.range\n   * Adds a property transform containing the transform function.\n   *\n   * This transform creates a range which includes the end value\n   */\n\n  return typed('range', {\n    '...any': function any(args) {\n      var lastIndex = args.length - 1;\n      var last = args[lastIndex];\n\n      if (typeof last !== 'boolean') {\n        // append a parameter includeEnd=true\n        args.push(true);\n      }\n\n      return range.apply(null, args);\n    }\n  });\n}, {\n  isTransformFunction: true\n});\nexports.createRangeTransform = createRangeTransform;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createRangeTransform","_factory","_range","factory","name","dependencies","_ref","typed","config","matrix","bignumber","smaller","smallerEq","larger","largerEq","range","createRange","any","args","last","length","push","apply","isTransformFunction"]
}
