shadow$provide.module$node_modules$mathjs$lib$cjs$function$set$setPowerset=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createSetPowerset=void 0;var _array=require("module$node_modules$mathjs$lib$cjs$utils$array");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("setPowerset",["typed","size","subset","compareNatural","Index"],function(_ref){var typed=_ref.typed,size=_ref.size,subset=_ref.subset,compareNatural=
_ref.compareNatural,Index=_ref.Index;return typed("setPowerset",{"Array | Matrix":function(a){if(0===subset(size(a),new Index(0)))return[];var b=(0,_array.flatten)(Array.isArray(a)?a:a.toArray()).sort(compareNatural);a=[];for(var number=0;number.toString(2).length<=b.length;){for(var JSCompiler_temp_const=a,JSCompiler_temp_const$jscomp$0=JSCompiler_temp_const.push,array=b,bitarray=number.toString(2).split("").reverse(),result=[],i=0;i<bitarray.length;i++)"1"===bitarray[i]&&result.push(array[i]);JSCompiler_temp_const$jscomp$0.call(JSCompiler_temp_const,
result);number++}for(number=a.length-1;0<number;number--)for(JSCompiler_temp_const=0;JSCompiler_temp_const<number;JSCompiler_temp_const++)a[JSCompiler_temp_const].length>a[JSCompiler_temp_const+1].length&&(b=a[JSCompiler_temp_const],a[JSCompiler_temp_const]=a[JSCompiler_temp_const+1],a[JSCompiler_temp_const+1]=b);return a}})});exports.createSetPowerset=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$set$setPowerset.js.map
