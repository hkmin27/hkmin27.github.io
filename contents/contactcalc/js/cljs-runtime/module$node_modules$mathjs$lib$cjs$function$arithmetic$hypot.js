shadow$provide.module$node_modules$mathjs$lib$cjs$function$arithmetic$hypot=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createHypot=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _array=require("module$node_modules$mathjs$lib$cjs$utils$array");require=(0,global.factory)("hypot","typed abs addScalar divideScalar multiplyScalar sqrt smaller isPositive".split(" "),function(_ref){var typed=_ref.typed,abs=_ref.abs,
addScalar=_ref.addScalar,divideScalar=_ref.divideScalar,multiplyScalar=_ref.multiplyScalar,sqrt=_ref.sqrt,smaller=_ref.smaller,isPositive=_ref.isPositive;return typed("hypot",{"... number | BigNumber":function(args){for(var result=0,largest=0,i=0;i<args.length;i++){var value=abs(args[i]);smaller(largest,value)?(result=multiplyScalar(result,multiplyScalar(divideScalar(largest,value),divideScalar(largest,value))),result=addScalar(result,1),largest=value):result=addScalar(result,isPositive(value)?multiplyScalar(divideScalar(value,
largest),divideScalar(value,largest)):value)}return multiplyScalar(largest,sqrt(result))},Array:function(x){return this.apply(this,(0,_array.flatten)(x))},Matrix:function(x){return this.apply(this,(0,_array.flatten)(x.toArray()))}})});exports.createHypot=require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$arithmetic$hypot.js.map
