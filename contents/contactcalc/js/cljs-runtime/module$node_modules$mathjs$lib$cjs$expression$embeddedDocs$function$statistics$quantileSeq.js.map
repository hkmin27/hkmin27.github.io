{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$statistics$quantileSeq.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,0FAAA,CAA+G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGvJC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,eAAR,CARsBA,CACpBC,KAAM,aADcD,CAEpBE,SAAU,YAFUF,CAGpBG,OAAQ,CAAC,gCAAD,CAAmC,+CAAnC,CAAoF,6BAApF,CAHYH,CAIpBI,YAAa,qWAJOJ;AAKpBK,SAAU,CAAC,iCAAD,CAAoC,wCAApC,CAA8E,+BAA9E,CAA+G,uCAA/G,CALUL,CAMpBM,QAAS,2CAAA,CAAA,KAAA,CAAA,GAAA,CANWN,CAPiI;",
"sources":["node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/statistics/quantileSeq.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$statistics$quantileSeq\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.quantileSeqDocs = void 0;\nvar quantileSeqDocs = {\n  name: 'quantileSeq',\n  category: 'Statistics',\n  syntax: ['quantileSeq(A, prob[, sorted])', 'quantileSeq(A, [prob1, prob2, ...][, sorted])', 'quantileSeq(A, N[, sorted])'],\n  description: 'Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \\n\\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.',\n  examples: ['quantileSeq([3, -1, 5, 7], 0.5)', 'quantileSeq([3, -1, 5, 7], [1/3, 2/3])', 'quantileSeq([3, -1, 5, 7], 2)', 'quantileSeq([-1, 3, 5, 7], 0.5, true)'],\n  seealso: ['mean', 'median', 'min', 'max', 'prod', 'std', 'sum', 'variance']\n};\nexports.quantileSeqDocs = quantileSeqDocs;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","quantileSeqDocs","name","category","syntax","description","examples","seealso"]
}
