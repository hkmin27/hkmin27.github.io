{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$set$setUnion.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,gFAAA,CAAqG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7IC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,YAAR,CARmBA,CACjBC,KAAM,UADWD,CAEjBE,SAAU,KAFOF,CAGjBG,OAAQ,CAAC,sBAAD,CAHSH,CAIjBI,YAAa,gIAJIJ,CAKjBK,SAAU,CAAC,sCAAD,CAAyC,8CAAzC,CALOL;AAMjBM,QAAS,CAAC,cAAD,CAAiB,eAAjB,CANQN,CAP0H;",
"sources":["node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/set/setUnion.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$set$setUnion\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setUnionDocs = void 0;\nvar setUnionDocs = {\n  name: 'setUnion',\n  category: 'Set',\n  syntax: ['setUnion(set1, set2)'],\n  description: 'Create the union of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.',\n  examples: ['setUnion([1, 2, 3, 4], [3, 4, 5, 6])', 'setUnion([[1, 2], [3, 4]], [[3, 4], [5, 6]])'],\n  seealso: ['setIntersect', 'setDifference']\n};\nexports.setUnionDocs = setUnionDocs;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","setUnionDocs","name","category","syntax","description","examples","seealso"]
}
