shadow$provide.module$node_modules$mathjs$lib$cjs$expression$node$RelationalNode=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createRelationalNode=void 0;var _operators=require("module$node_modules$mathjs$lib$cjs$expression$operators"),_string=require("module$node_modules$mathjs$lib$cjs$utils$string"),_customs=require("module$node_modules$mathjs$lib$cjs$utils$customs"),_latex=require("module$node_modules$mathjs$lib$cjs$utils$latex");global=
require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("RelationalNode",["Node"],function(_ref){function RelationalNode(conditionals,params){if(!(this instanceof RelationalNode))throw new SyntaxError("Constructor must be called with the new operator");if(!Array.isArray(conditionals))throw new TypeError("Parameter conditionals must be an array");if(!Array.isArray(params))throw new TypeError("Parameter params must be an array");if(conditionals.length!==params.length-1)throw new TypeError("Parameter params must contain exactly one more element than parameter conditionals");
this.conditionals=conditionals;this.params=params}RelationalNode.prototype=new _ref.Node;RelationalNode.prototype.type="RelationalNode";RelationalNode.prototype.isRelationalNode=!0;RelationalNode.prototype._compile=function(math,argNames){var self=this,compiled=this.params.map(function(p){return p._compile(math,argNames)});return function(scope,args,context){for(var evalLhs,evalRhs=compiled[0](scope,args,context),i=0;i<self.conditionals.length;i++)if(evalLhs=evalRhs,evalRhs=compiled[i+1](scope,args,
context),!(0,_customs.getSafeProperty)(math,self.conditionals[i])(evalLhs,evalRhs))return!1;return!0}};RelationalNode.prototype.forEach=function(callback){var _this=this;this.params.forEach(function(n,i){return callback(n,"params["+i+"]",_this)},this)};RelationalNode.prototype.map=function(callback){var _this2=this;return new RelationalNode(this.conditionals.slice(),this.params.map(function(n,i){return _this2._ifNode(callback(n,"params["+i+"]",_this2))},this))};RelationalNode.prototype.clone=function(){return new RelationalNode(this.conditionals,
this.params)};RelationalNode.prototype._toString=function(options){for(var parenthesis=options&&options.parenthesis?options.parenthesis:"keep",precedence=(0,_operators.getPrecedence)(this,parenthesis),paramStrings=this.params.map(function(p,index){index=(0,_operators.getPrecedence)(p,parenthesis);return"all"===parenthesis||null!==index&&index<=precedence?"("+p.toString(options)+")":p.toString(options)}),operatorMap={equal:"\x3d\x3d",unequal:"!\x3d",smaller:"\x3c",larger:"\x3e",smallerEq:"\x3c\x3d",
largerEq:"\x3e\x3d"},ret=paramStrings[0],i=0;i<this.conditionals.length;i++)ret+=" "+operatorMap[this.conditionals[i]]+" "+paramStrings[i+1];return ret};RelationalNode.prototype.toJSON=function(){return{mathjs:"RelationalNode",conditionals:this.conditionals,params:this.params}};RelationalNode.fromJSON=function(json){return new RelationalNode(json.conditionals,json.params)};RelationalNode.prototype.toHTML=function(options){for(var parenthesis=options&&options.parenthesis?options.parenthesis:"keep",
precedence=(0,_operators.getPrecedence)(this,parenthesis),paramStrings=this.params.map(function(p,index){index=(0,_operators.getPrecedence)(p,parenthesis);return"all"===parenthesis||null!==index&&index<=precedence?'\x3cspan class\x3d"math-parenthesis math-round-parenthesis"\x3e(\x3c/span\x3e'+p.toHTML(options)+'\x3cspan class\x3d"math-parenthesis math-round-parenthesis"\x3e)\x3c/span\x3e':p.toHTML(options)}),operatorMap={equal:"\x3d\x3d",unequal:"!\x3d",smaller:"\x3c",larger:"\x3e",smallerEq:"\x3c\x3d",
largerEq:"\x3e\x3d"},ret=paramStrings[0],i=0;i<this.conditionals.length;i++)ret+='\x3cspan class\x3d"math-operator math-binary-operator math-explicit-binary-operator"\x3e'+(0,_string.escape)(operatorMap[this.conditionals[i]])+"\x3c/span\x3e"+paramStrings[i+1];return ret};RelationalNode.prototype._toTex=function(options){for(var parenthesis=options&&options.parenthesis?options.parenthesis:"keep",precedence=(0,_operators.getPrecedence)(this,parenthesis),paramStrings=this.params.map(function(p,index){index=
(0,_operators.getPrecedence)(p,parenthesis);return"all"===parenthesis||null!==index&&index<=precedence?"\\left("+p.toTex(options)+"\right)":p.toTex(options)}),ret=paramStrings[0],i=0;i<this.conditionals.length;i++)ret+=_latex.latexOperators[this.conditionals[i]]+paramStrings[i+1];return ret};return RelationalNode},{isClass:!0,isNode:!0});exports.createRelationalNode=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$expression$node$RelationalNode.js.map
