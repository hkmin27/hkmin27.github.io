{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$matrix$eigs.js",
"lineCount":13,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/function/matrix/eigs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$matrix$eigs\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createEigs = void 0;\n\nvar _object = require(\"../../utils/object.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _string = require(\"../../utils/string.js\");\n\nvar name = 'eigs';\nvar dependencies = ['config', 'typed', 'matrix', 'addScalar', 'equal', 'subtract', 'abs', 'atan', 'cos', 'sin', 'multiplyScalar', 'inv', 'bignumber', 'multiply', 'add'];\nvar createEigs = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var config = _ref.config,\n      typed = _ref.typed,\n      matrix = _ref.matrix,\n      addScalar = _ref.addScalar,\n      subtract = _ref.subtract,\n      equal = _ref.equal,\n      abs = _ref.abs,\n      atan = _ref.atan,\n      cos = _ref.cos,\n      sin = _ref.sin,\n      multiplyScalar = _ref.multiplyScalar,\n      inv = _ref.inv,\n      bignumber = _ref.bignumber,\n      multiply = _ref.multiply,\n      add = _ref.add;\n\n  /**\n   * Compute eigenvalue and eigenvector of a real symmetric matrix.\n   * Only applicable to two dimensional symmetric matrices. Uses Jacobi\n   * Algorithm. Matrix containing mixed type ('number', 'bignumber', 'fraction')\n   * of elements are not supported. Input matrix or 2D array should contain all elements\n   * of either 'number', 'bignumber' or 'fraction' type. For 'number' and 'fraction', the\n   * eigenvalues are of 'number' type. For 'bignumber' the eigenvalues are of ''bignumber' type.\n   * Eigenvectors are always of 'number' type.\n   *\n   * Syntax:\n   *\n   *     math.eigs(x)\n   *\n   * Examples:\n   *\n   *     const H = [[5, 2.3], [2.3, 1]]\n   *     const ans = math.eigs(H) // returns {values: [E1,E2...sorted], vectors: [v1,v2.... corresponding vectors as columns]}\n   *     const E = ans.values\n   *     const U = ans.vectors\n   *     math.multiply(H, math.column(U, 0)) // returns math.multiply(E[0], math.column(U, 0))\n   *     const UTxHxU = math.multiply(math.transpose(U), H, U) // rotates H to the eigen-representation\n   *     E[0] == UTxHxU[0][0]  // returns true\n   * See also:\n   *\n   *     inv\n   *\n   * @param {Array | Matrix} x  Matrix to be diagonalized\n   * @return {{values: Array, vectors: Array} | {values: Matrix, vectors: Matrix}} Object containing eigenvalues (Array or Matrix) and eigenvectors (2D Array/Matrix with eigenvectors as columns).\n   */\n  return typed('eigs', {\n    Array: function Array(x) {\n      // check array size\n      var mat = matrix(x);\n      var size = mat.size();\n\n      if (size.length !== 2 || size[0] !== size[1]) {\n        throw new RangeError('Matrix must be square ' + '(size: ' + (0, _string.format)(size) + ')');\n      } // use dense 2D matrix implementation\n\n\n      var ans = checkAndSubmit(mat, size[0]);\n      return {\n        values: ans[0],\n        vectors: ans[1]\n      };\n    },\n    Matrix: function Matrix(x) {\n      // use dense 2D array implementation\n      // dense matrix\n      var size = x.size();\n\n      if (size.length !== 2 || size[0] !== size[1]) {\n        throw new RangeError('Matrix must be square ' + '(size: ' + (0, _string.format)(size) + ')');\n      }\n\n      var ans = checkAndSubmit(x, size[0]);\n      return {\n        values: matrix(ans[0]),\n        vectors: matrix(ans[1])\n      };\n    }\n  }); // Is the matrix\n  // symmetric ?\n\n  function isSymmetric(x, n) {\n    for (var i = 0; i < n; i++) {\n      for (var j = i; j < n; j++) {\n        // not symmtric\n        if (!equal(x[i][j], x[j][i])) {\n          throw new TypeError('Input matrix is not symmetric');\n        }\n      }\n    }\n  } // check input for possible problems\n  // and perform diagonalization efficiently for\n  // specific type of number\n\n\n  function checkAndSubmit(x, n) {\n    var type = x.datatype(); // type check\n\n    if (type === undefined) {\n      type = x.getDataType();\n    }\n\n    if (type !== 'number' && type !== 'BigNumber' && type !== 'Fraction') {\n      if (type === 'mixed') {\n        throw new TypeError('Mixed matrix element type is not supported');\n      } else {\n        throw new TypeError('Matrix element type not supported (' + type + ')');\n      }\n    } else {\n      isSymmetric(x.toArray(), n);\n    } // perform efficient calculation for 'numbers'\n\n\n    if (type === 'number') {\n      return diag(x.toArray());\n    } else if (type === 'Fraction') {\n      var xArr = x.toArray(); // convert fraction to numbers\n\n      for (var i = 0; i < n; i++) {\n        for (var j = i; j < n; j++) {\n          xArr[i][j] = xArr[i][j].valueOf();\n          xArr[j][i] = xArr[i][j];\n        }\n      }\n\n      return diag(x.toArray());\n    } else if (type === 'BigNumber') {\n      return diagBig(x.toArray());\n    }\n  } // diagonalization implementation for number (efficient)\n\n\n  function diag(x) {\n    var N = x.length;\n    var e0 = Math.abs(config.epsilon / N);\n    var psi;\n    var Sij = new Array(N); // Sij is Identity Matrix\n\n    for (var i = 0; i < N; i++) {\n      Sij[i] = createArray(N, 0);\n      Sij[i][i] = 1.0;\n    } // initial error\n\n\n    var Vab = getAij(x);\n\n    while (Math.abs(Vab[1]) >= Math.abs(e0)) {\n      var _i = Vab[0][0];\n      var j = Vab[0][1];\n      psi = getTheta(x[_i][_i], x[j][j], x[_i][j]);\n      x = x1(x, psi, _i, j);\n      Sij = Sij1(Sij, psi, _i, j);\n      Vab = getAij(x);\n    }\n\n    var Ei = createArray(N, 0); // eigenvalues\n\n    for (var _i2 = 0; _i2 < N; _i2++) {\n      Ei[_i2] = x[_i2][_i2];\n    }\n\n    return sorting((0, _object.clone)(Ei), (0, _object.clone)(Sij));\n  } // diagonalization implementation for bigNumber\n\n\n  function diagBig(x) {\n    var N = x.length;\n    var e0 = abs(config.epsilon / N);\n    var psi;\n    var Sij = new Array(N); // Sij is Identity Matrix\n\n    for (var i = 0; i < N; i++) {\n      Sij[i] = createArray(N, 0);\n      Sij[i][i] = 1.0;\n    } // initial error\n\n\n    var Vab = getAijBig(x);\n\n    while (abs(Vab[1]) >= abs(e0)) {\n      var _i3 = Vab[0][0];\n      var j = Vab[0][1];\n      psi = getThetaBig(x[_i3][_i3], x[j][j], x[_i3][j]);\n      x = x1Big(x, psi, _i3, j);\n      Sij = Sij1Big(Sij, psi, _i3, j);\n      Vab = getAijBig(x);\n    }\n\n    var Ei = createArray(N, 0); // eigenvalues\n\n    for (var _i4 = 0; _i4 < N; _i4++) {\n      Ei[_i4] = x[_i4][_i4];\n    } // return [clone(Ei), clone(Sij)]\n\n\n    return sorting((0, _object.clone)(Ei), (0, _object.clone)(Sij));\n  } // get angle\n\n\n  function getTheta(aii, ajj, aij) {\n    var denom = ajj - aii;\n\n    if (Math.abs(denom) <= config.epsilon) {\n      return Math.PI / 4;\n    } else {\n      return 0.5 * Math.atan(2 * aij / (ajj - aii));\n    }\n  } // get angle\n\n\n  function getThetaBig(aii, ajj, aij) {\n    var denom = subtract(ajj, aii);\n\n    if (abs(denom) <= config.epsilon) {\n      return bignumber(-1).acos().div(4);\n    } else {\n      return multiplyScalar(0.5, atan(multiply(2, aij, inv(denom))));\n    }\n  } // update eigvec\n\n\n  function Sij1(Sij, theta, i, j) {\n    var N = Sij.length;\n    var c = Math.cos(theta);\n    var s = Math.sin(theta);\n    var Ski = createArray(N, 0);\n    var Skj = createArray(N, 0);\n\n    for (var k = 0; k < N; k++) {\n      Ski[k] = c * Sij[k][i] - s * Sij[k][j];\n      Skj[k] = s * Sij[k][i] + c * Sij[k][j];\n    }\n\n    for (var _k = 0; _k < N; _k++) {\n      Sij[_k][i] = Ski[_k];\n      Sij[_k][j] = Skj[_k];\n    }\n\n    return Sij;\n  } // update eigvec for overlap\n\n\n  function Sij1Big(Sij, theta, i, j) {\n    var N = Sij.length;\n    var c = cos(theta);\n    var s = sin(theta);\n    var Ski = createArray(N, bignumber(0));\n    var Skj = createArray(N, bignumber(0));\n\n    for (var k = 0; k < N; k++) {\n      Ski[k] = subtract(multiplyScalar(c, Sij[k][i]), multiplyScalar(s, Sij[k][j]));\n      Skj[k] = addScalar(multiplyScalar(s, Sij[k][i]), multiplyScalar(c, Sij[k][j]));\n    }\n\n    for (var _k2 = 0; _k2 < N; _k2++) {\n      Sij[_k2][i] = Ski[_k2];\n      Sij[_k2][j] = Skj[_k2];\n    }\n\n    return Sij;\n  } // update matrix\n\n\n  function x1Big(Hij, theta, i, j) {\n    var N = Hij.length;\n    var c = bignumber(cos(theta));\n    var s = bignumber(sin(theta));\n    var c2 = multiplyScalar(c, c);\n    var s2 = multiplyScalar(s, s);\n    var Aki = createArray(N, bignumber(0));\n    var Akj = createArray(N, bignumber(0)); // 2cs Hij\n\n    var csHij = multiply(bignumber(2), c, s, Hij[i][j]); //  Aii\n\n    var Aii = addScalar(subtract(multiplyScalar(c2, Hij[i][i]), csHij), multiplyScalar(s2, Hij[j][j]));\n    var Ajj = add(multiplyScalar(s2, Hij[i][i]), csHij, multiplyScalar(c2, Hij[j][j])); // 0  to i\n\n    for (var k = 0; k < N; k++) {\n      Aki[k] = subtract(multiplyScalar(c, Hij[i][k]), multiplyScalar(s, Hij[j][k]));\n      Akj[k] = addScalar(multiplyScalar(s, Hij[i][k]), multiplyScalar(c, Hij[j][k]));\n    } // Modify Hij\n\n\n    Hij[i][i] = Aii;\n    Hij[j][j] = Ajj;\n    Hij[i][j] = bignumber(0);\n    Hij[j][i] = bignumber(0); // 0  to i\n\n    for (var _k3 = 0; _k3 < N; _k3++) {\n      if (_k3 !== i && _k3 !== j) {\n        Hij[i][_k3] = Aki[_k3];\n        Hij[_k3][i] = Aki[_k3];\n        Hij[j][_k3] = Akj[_k3];\n        Hij[_k3][j] = Akj[_k3];\n      }\n    }\n\n    return Hij;\n  } // update matrix\n\n\n  function x1(Hij, theta, i, j) {\n    var N = Hij.length;\n    var c = Math.cos(theta);\n    var s = Math.sin(theta);\n    var c2 = c * c;\n    var s2 = s * s;\n    var Aki = createArray(N, 0);\n    var Akj = createArray(N, 0); //  Aii\n\n    var Aii = c2 * Hij[i][i] - 2 * c * s * Hij[i][j] + s2 * Hij[j][j];\n    var Ajj = s2 * Hij[i][i] + 2 * c * s * Hij[i][j] + c2 * Hij[j][j]; // 0  to i\n\n    for (var k = 0; k < N; k++) {\n      Aki[k] = c * Hij[i][k] - s * Hij[j][k];\n      Akj[k] = s * Hij[i][k] + c * Hij[j][k];\n    } // Modify Hij\n\n\n    Hij[i][i] = Aii;\n    Hij[j][j] = Ajj;\n    Hij[i][j] = 0;\n    Hij[j][i] = 0; // 0  to i\n\n    for (var _k4 = 0; _k4 < N; _k4++) {\n      if (_k4 !== i && _k4 !== j) {\n        Hij[i][_k4] = Aki[_k4];\n        Hij[_k4][i] = Aki[_k4];\n        Hij[j][_k4] = Akj[_k4];\n        Hij[_k4][j] = Akj[_k4];\n      }\n    }\n\n    return Hij;\n  } // get max off-diagonal value from Upper Diagonal\n\n\n  function getAij(Mij) {\n    var N = Mij.length;\n    var maxMij = 0;\n    var maxIJ = [0, 1];\n\n    for (var i = 0; i < N; i++) {\n      for (var j = i + 1; j < N; j++) {\n        if (Math.abs(maxMij) < Math.abs(Mij[i][j])) {\n          maxMij = Math.abs(Mij[i][j]);\n          maxIJ = [i, j];\n        }\n      }\n    }\n\n    return [maxIJ, maxMij];\n  } // get max off-diagonal value from Upper Diagonal\n\n\n  function getAijBig(Mij) {\n    var N = Mij.length;\n    var maxMij = 0;\n    var maxIJ = [0, 1];\n\n    for (var i = 0; i < N; i++) {\n      for (var j = i + 1; j < N; j++) {\n        if (abs(maxMij) < abs(Mij[i][j])) {\n          maxMij = abs(Mij[i][j]);\n          maxIJ = [i, j];\n        }\n      }\n    }\n\n    return [maxIJ, maxMij];\n  } // sort results\n\n\n  function sorting(E, S) {\n    var N = E.length;\n    var Ef = Array(N);\n    var Sf = Array(N);\n\n    for (var k = 0; k < N; k++) {\n      Sf[k] = Array(N);\n    }\n\n    for (var i = 0; i < N; i++) {\n      var minID = 0;\n      var minE = E[0];\n\n      for (var j = 0; j < E.length; j++) {\n        if (E[j] < minE) {\n          minID = j;\n          minE = E[minID];\n        }\n      }\n\n      Ef[i] = E.splice(minID, 1)[0];\n\n      for (var _k5 = 0; _k5 < N; _k5++) {\n        Sf[_k5][i] = S[_k5][minID];\n\n        S[_k5].splice(minID, 1);\n      }\n    }\n\n    return [(0, _object.clone)(Ef), (0, _object.clone)(Sf)];\n  }\n  /**\n   * Create an array of a certain size and fill all items with an initial value\n   * @param {number} size\n   * @param {number} value\n   * @return {number[]}\n   */\n\n\n  function createArray(size, value) {\n    // TODO: as soon as all browsers support Array.fill, use that instead (IE doesn't support it)\n    var array = new Array(size);\n\n    for (var i = 0; i < size; i++) {\n      array[i] = value;\n    }\n\n    return array;\n  }\n});\nexports.createEigs = createEigs;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createEigs","_object","_factory","_string","factory","name","dependencies","_ref","checkAndSubmit","x","n","type","datatype","undefined","getDataType","TypeError","toArray","i","j","equal","diag","xArr","valueOf","N","length","e0","abs","config","epsilon","Sij","Array","createArray","Vab","getAijBig","_i3","denom","subtract","ajj","aii","psi","bignumber","acos","div","multiplyScalar","atan","multiply","aij","inv","Hij","c","cos","theta","s","sin","c2","s2","Aki","Akj","csHij","Aii","addScalar","Ajj","add","k","_k3","Ski","Skj","_k2","Ei","_i4","sorting","clone","Math","getAij","_i","PI","_k4","_k","_i2","Mij","maxMij","maxIJ","E","S","Ef","Sf","minID","minE","splice","_k5","size","array","typed","matrix","mat","RangeError","format","ans","values","vectors","Matrix"]
}
