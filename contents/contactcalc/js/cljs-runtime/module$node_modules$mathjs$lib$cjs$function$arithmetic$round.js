shadow$provide.module$node_modules$mathjs$lib$cjs$function$arithmetic$round=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){var value=source[key];key in target?Object.defineProperty(target,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):target[key]=value}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}Object.defineProperty(exports,
"__esModule",{value:!0});exports.createRoundNumber=exports.createRound=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _collection=require("module$node_modules$mathjs$lib$cjs$utils$collection"),_number=require("module$node_modules$mathjs$lib$cjs$utils$number"),_algorithm=require("module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm11"),_algorithm2=require("module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm12"),_algorithm3=require("module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm14"),
_index=require("module$node_modules$mathjs$lib$cjs$plain$number$index");require=(0,global.factory)("round","typed matrix equalScalar zeros BigNumber DenseMatrix".split(" "),function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,zeros=_ref.zeros,BigNumber=_ref.BigNumber;_ref=_ref.DenseMatrix;var algorithm11=(0,_algorithm.createAlgorithm11)({typed:typed,equalScalar:equalScalar}),algorithm12=(0,_algorithm2.createAlgorithm12)({typed:typed,DenseMatrix:_ref}),algorithm14=(0,
_algorithm3.createAlgorithm14)({typed:typed});return typed("round",_objectSpread(_objectSpread({},roundNumberSignatures),{},{Complex:function(x){return x.round()},"Complex, number":function(x,n){if(n%1)throw new TypeError("Number of decimals in function round must be an integer");return x.round(n)},"Complex, BigNumber":function(x,n){if(!n.isInteger())throw new TypeError("Number of decimals in function round must be an integer");n=n.toNumber();return x.round(n)},"number, BigNumber":function(x,n){if(!n.isInteger())throw new TypeError("Number of decimals in function round must be an integer");
return(new BigNumber(x)).toDecimalPlaces(n.toNumber())},BigNumber:function(x){return x.toDecimalPlaces(0)},"BigNumber, BigNumber":function(x,n){if(!n.isInteger())throw new TypeError("Number of decimals in function round must be an integer");return x.toDecimalPlaces(n.toNumber())},Fraction:function(x){return x.round()},"Fraction, number":function(x,n){if(n%1)throw new TypeError("Number of decimals in function round must be an integer");return x.round(n)},"Array | Matrix":function(x){return(0,_collection.deepMap)(x,
this,!0)},"SparseMatrix, number | BigNumber":function(x,y){return algorithm11(x,y,this,!1)},"DenseMatrix, number | BigNumber":function(x,y){return algorithm14(x,y,this,!1)},"number | Complex | BigNumber, SparseMatrix":function(x,y){return equalScalar(x,0)?zeros(y.size(),y.storage()):algorithm12(y,x,this,!0)},"number | Complex | BigNumber, DenseMatrix":function(x,y){return equalScalar(x,0)?zeros(y.size(),y.storage()):algorithm14(y,x,this,!0)},"Array, number | BigNumber":function(x,y){return algorithm14(matrix(x),
y,this,!1).valueOf()},"number | Complex | BigNumber, Array":function(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}}))});exports.createRound=require;var roundNumberSignatures={number:_index.roundNumber,"number, number":function(x,n){if(!(0,_number.isInteger)(n))throw new TypeError("Number of decimals in function round must be an integer");if(0>n||15<n)throw Error("Number of decimals in function round must be in te range of 0-15");return(0,_index.roundNumber)(x,n)}};require=(0,global.factory)("round",
["typed"],function(_ref2){_ref2=_ref2.typed;return _ref2("round",roundNumberSignatures)});exports.createRoundNumber=require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$arithmetic$round.js.map
