{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$type$chain$Chain.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/type/chain/Chain.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$type$chain$Chain\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createChainClass = void 0;\n\nvar _is = require(\"../../utils/is.js\");\n\nvar _string = require(\"../../utils/string.js\");\n\nvar _object = require(\"../../utils/object.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'Chain';\nvar dependencies = ['?on', 'math'];\nvar createChainClass = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var on = _ref.on,\n      math = _ref.math;\n\n  /**\n   * @constructor Chain\n   * Wrap any value in a chain, allowing to perform chained operations on\n   * the value.\n   *\n   * All methods available in the math.js library can be called upon the chain,\n   * and then will be evaluated with the value itself as first argument.\n   * The chain can be closed by executing chain.done(), which will return\n   * the final value.\n   *\n   * The Chain has a number of special functions:\n   * - done()             Finalize the chained operation and return the\n   *                      chain's value.\n   * - valueOf()          The same as done()\n   * - toString()         Returns a string representation of the chain's value.\n   *\n   * @param {*} [value]\n   */\n  function Chain(value) {\n    if (!(this instanceof Chain)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if ((0, _is.isChain)(value)) {\n      this.value = value.value;\n    } else {\n      this.value = value;\n    }\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Chain.prototype.type = 'Chain';\n  Chain.prototype.isChain = true;\n  /**\n   * Close the chain. Returns the final value.\n   * Does the same as method valueOf()\n   * @returns {*} value\n   */\n\n  Chain.prototype.done = function () {\n    return this.value;\n  };\n  /**\n   * Close the chain. Returns the final value.\n   * Does the same as method done()\n   * @returns {*} value\n   */\n\n\n  Chain.prototype.valueOf = function () {\n    return this.value;\n  };\n  /**\n   * Get a string representation of the value in the chain\n   * @returns {string}\n   */\n\n\n  Chain.prototype.toString = function () {\n    return (0, _string.format)(this.value);\n  };\n  /**\n   * Get a JSON representation of the chain\n   * @returns {Object}\n   */\n\n\n  Chain.prototype.toJSON = function () {\n    return {\n      mathjs: 'Chain',\n      value: this.value\n    };\n  };\n  /**\n   * Instantiate a Chain from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"Chain\", value: ...}`,\n   *                       where mathjs is optional\n   * @returns {Chain}\n   */\n\n\n  Chain.fromJSON = function (json) {\n    return new Chain(json.value);\n  };\n  /**\n   * Create a proxy method for the chain\n   * @param {string} name\n   * @param {Function} fn      The function to be proxied\n   *                           If fn is no function, it is silently ignored.\n   * @private\n   */\n\n\n  function createProxy(name, fn) {\n    if (typeof fn === 'function') {\n      Chain.prototype[name] = chainify(fn);\n    }\n  }\n  /**\n   * Create a proxy method for the chain\n   * @param {string} name\n   * @param {function} resolver   The function resolving with the\n   *                              function to be proxied\n   * @private\n   */\n\n\n  function createLazyProxy(name, resolver) {\n    (0, _object.lazy)(Chain.prototype, name, function outerResolver() {\n      var fn = resolver();\n\n      if (typeof fn === 'function') {\n        return chainify(fn);\n      }\n\n      return undefined; // if not a function, ignore\n    });\n  }\n  /**\n   * Make a function chainable\n   * @param {function} fn\n   * @return {Function} chain function\n   * @private\n   */\n\n\n  function chainify(fn) {\n    return function () {\n      var args = [this.value]; // `this` will be the context of a Chain instance\n\n      for (var i = 0; i < arguments.length; i++) {\n        args[i + 1] = arguments[i];\n      }\n\n      return new Chain(fn.apply(fn, args));\n    };\n  }\n  /**\n   * Create a proxy for a single method, or an object with multiple methods.\n   * Example usage:\n   *\n   *   Chain.createProxy('add', function add (x, y) {...})\n   *   Chain.createProxy({\n   *     add:      function add (x, y) {...},\n   *     subtract: function subtract (x, y) {...}\n   *   }\n   *\n   * @param {string | Object} arg0   A name (string), or an object with\n   *                                 functions\n   * @param {*} [arg1]               A function, when arg0 is a name\n   */\n\n\n  Chain.createProxy = function (arg0, arg1) {\n    if (typeof arg0 === 'string') {\n      // createProxy(name, value)\n      createProxy(arg0, arg1);\n    } else {\n      var _loop = function _loop(_name) {\n        if ((0, _object.hasOwnProperty)(arg0, _name) && excludedNames[_name] === undefined) {\n          createLazyProxy(_name, function () {\n            return arg0[_name];\n          });\n        }\n      };\n\n      // createProxy(values)\n      for (var _name in arg0) {\n        _loop(_name);\n      }\n    }\n  };\n\n  var excludedNames = {\n    expression: true,\n    docs: true,\n    type: true,\n    classes: true,\n    json: true,\n    error: true,\n    isChain: true // conflicts with the property isChain of a Chain instance\n\n  }; // create proxy for everything that is in math.js\n\n  Chain.createProxy(math); // register on the import event, automatically add a proxy for every imported function.\n\n  if (on) {\n    on('import', function (name, resolver, path) {\n      if (!path) {\n        // an imported function (not a data type or something special)\n        createLazyProxy(name, resolver);\n      }\n    });\n  }\n\n  return Chain;\n}, {\n  isClass: true\n});\nexports.createChainClass = createChainClass;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createChainClass","_is","_string","_object","_factory","factory","name","dependencies","_ref","Chain","SyntaxError","isChain","createLazyProxy","resolver","lazy","prototype","outerResolver","fn","chainify","args","i","arguments","length","apply","on","math","type","done","Chain.prototype.done","valueOf","Chain.prototype.valueOf","toString","Chain.prototype.toString","format","toJSON","Chain.prototype.toJSON","mathjs","fromJSON","Chain.fromJSON","json","createProxy","Chain.createProxy","arg0","arg1","_loop","_name","hasOwnProperty","undefined","excludedNames","expression","docs","classes","error","path","isClass"]
}
