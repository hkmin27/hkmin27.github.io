shadow$provide.module$node_modules$mathjs$lib$cjs$function$probability$pickRandom=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createPickRandom=void 0;var _array=require("module$node_modules$mathjs$lib$cjs$utils$array");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _is=require("module$node_modules$mathjs$lib$cjs$utils$is"),_seededRNG=require("module$node_modules$mathjs$lib$cjs$function$probability$util$seededRNG");
require=(0,global.factory)("pickRandom",["typed","config","?on"],function(_ref){function _pickRandom(possibles,_ref2){var number=_ref2.number,weights=_ref2.weights;_ref2=_ref2.elementWise;var elementWise=void 0===_ref2?!0:_ref2;(_ref2="undefined"===typeof number)&&(number=1);var createMatrix=(0,_is.isMatrix)(possibles)?possibles.create:(0,_is.isMatrix)(weights)?weights.create:null;possibles=possibles.valueOf();weights&&(weights=weights.valueOf());!0===elementWise&&(possibles=(0,_array.flatten)(possibles),
weights=(0,_array.flatten)(weights));elementWise=0;if("undefined"!==typeof weights){if(weights.length!==possibles.length)throw Error("Weights must have the same length as possibles");for(var i=0,len=weights.length;i<len;i++){if(!(0,_is.isNumber)(weights[i])||0>weights[i])throw Error("Weights must be an array of positive numbers");elementWise+=weights[i]}}i=possibles.length;len=[];for(var pick;len.length<number;){if("undefined"===typeof weights)pick=possibles[Math.floor(rng()*i)];else for(var randKey=
rng()*elementWise,_i=0,_len=possibles.length;_i<_len;_i++)if(randKey-=weights[_i],0>randKey){pick=possibles[_i];break}len.push(pick)}return _ref2?len[0]:createMatrix?createMatrix(len):len}var typed=_ref.typed,config=_ref.config;_ref=_ref.on;var rng=(0,_seededRNG.createRng)(config.randomSeed);_ref&&_ref("config",function(curr,prev){curr.randomSeed!==prev.randomSeed&&(rng=(0,_seededRNG.createRng)(curr.randomSeed))});return typed({"Array | Matrix":function(possibles){return _pickRandom(possibles,{})},
"Array | Matrix, Object":function(possibles,options){return _pickRandom(possibles,options)},"Array | Matrix, number":function(possibles,number){return _pickRandom(possibles,{number:number})},"Array | Matrix, Array | Matrix":function(possibles,weights){return _pickRandom(possibles,{weights:weights})},"Array | Matrix, Array | Matrix, number":function(possibles,weights,number){return _pickRandom(possibles,{number:number,weights:weights})},"Array | Matrix, number, Array | Matrix":function(possibles,number,
weights){return _pickRandom(possibles,{number:number,weights:weights})}})});exports.createPickRandom=require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$probability$pickRandom.js.map
