{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$complex$conj.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,gFAAA,CAAqG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7IC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,QAAR,CAReA,CACbC,KAAM,MADOD,CAEbE,SAAU,SAFGF,CAGbG,OAAQ,CAAC,SAAD,CAHKH,CAIbI,YAAa,kGAJAJ,CAKbK,SAAU,CAAC,cAAD,CAAiB,cAAjB,CAAiC,aAAjC,CALGL,CAMbM,QAAS,CAAC,IAAD,CAAO,IAAP,CAAa,KAAb,CAAoB,KAApB,CANIN,CAP8H;",
"sources":["node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/complex/conj.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$complex$conj\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.conjDocs = void 0;\nvar conjDocs = {\n  name: 'conj',\n  category: 'Complex',\n  syntax: ['conj(x)'],\n  description: 'Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.',\n  examples: ['conj(2 + 3i)', 'conj(2 - 3i)', 'conj(-5.2i)'],\n  seealso: ['re', 'im', 'abs', 'arg']\n};\nexports.conjDocs = conjDocs;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","conjDocs","name","category","syntax","description","examples","seealso"]
}
