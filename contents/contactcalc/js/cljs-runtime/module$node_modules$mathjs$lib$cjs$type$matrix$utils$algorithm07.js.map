{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm07.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/type/matrix/utils/algorithm07.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm07\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAlgorithm07 = void 0;\n\nvar _factory = require(\"../../../utils/factory.js\");\n\nvar _DimensionError = require(\"../../../error/DimensionError.js\");\n\nvar name = 'algorithm07';\nvar dependencies = ['typed', 'DenseMatrix'];\nvar createAlgorithm07 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      DenseMatrix = _ref.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B items (zero and nonzero) and invokes the callback function f(Aij, Bij).\n   * Callback function invoked MxN times.\n   *\n   * C(i,j) = f(Aij, Bij)\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  return function algorithm07(a, b, callback) {\n    // sparse matrix arrays\n    var asize = a._size;\n    var adt = a._datatype; // sparse matrix arrays\n\n    var bsize = b._size;\n    var bdt = b._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _DimensionError.DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // vars\n\n\n    var i, j; // result arrays\n\n    var cdata = []; // initialize c\n\n    for (i = 0; i < rows; i++) {\n      cdata[i] = [];\n    } // workspaces\n\n\n    var xa = [];\n    var xb = []; // marks indicating we have a value in x for a given column\n\n    var wa = [];\n    var wb = []; // loop columns\n\n    for (j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1; // scatter the values of A(:,j) into workspace\n\n      _scatter(a, j, wa, xa, mark); // scatter the values of B(:,j) into workspace\n\n\n      _scatter(b, j, wb, xb, mark); // loop rows\n\n\n      for (i = 0; i < rows; i++) {\n        // matrix values @ i,j\n        var va = wa[i] === mark ? xa[i] : zero;\n        var vb = wb[i] === mark ? xb[i] : zero; // invoke callback\n\n        cdata[i][j] = cf(va, vb);\n      }\n    } // return dense matrix\n\n\n    return new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n\n  function _scatter(m, j, w, x, mark) {\n    // a arrays\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr; // loop values in column j\n\n    for (var k = ptr[j], k1 = ptr[j + 1]; k < k1; k++) {\n      // row\n      var i = index[k]; // update workspace\n\n      w[i] = mark;\n      x[i] = values[k];\n    }\n  }\n});\nexports.createAlgorithm07 = createAlgorithm07;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createAlgorithm07","_factory","_DimensionError","factory","name","dependencies","_ref","_scatter","m","j","w","x","mark","values","_values","index","_index","ptr","_ptr","k","k1","i","typed","DenseMatrix","algorithm07","a","b","callback","asize","_size","adt","_datatype","bsize","bdt","length","DimensionError","RangeError","rows","columns","zero","cf","dt","convert","find","cdata","xa","xb","wa","wb","va","vb","data","size","datatype"]
}
