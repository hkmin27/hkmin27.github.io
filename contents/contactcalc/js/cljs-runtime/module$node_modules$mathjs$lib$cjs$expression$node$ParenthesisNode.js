shadow$provide.module$node_modules$mathjs$lib$cjs$expression$node$ParenthesisNode=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createParenthesisNode=void 0;var _is=require("module$node_modules$mathjs$lib$cjs$utils$is");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("ParenthesisNode",["Node"],function(_ref){function ParenthesisNode(content){if(!(this instanceof ParenthesisNode))throw new SyntaxError("Constructor must be called with the new operator");
if(!(0,_is.isNode)(content))throw new TypeError('Node expected for parameter "content"');this.content=content}ParenthesisNode.prototype=new _ref.Node;ParenthesisNode.prototype.type="ParenthesisNode";ParenthesisNode.prototype.isParenthesisNode=!0;ParenthesisNode.prototype._compile=function(math,argNames){return this.content._compile(math,argNames)};ParenthesisNode.prototype.getContent=function(){return this.content.getContent()};ParenthesisNode.prototype.forEach=function(callback){callback(this.content,
"content",this)};ParenthesisNode.prototype.map=function(callback){callback=callback(this.content,"content",this);return new ParenthesisNode(callback)};ParenthesisNode.prototype.clone=function(){return new ParenthesisNode(this.content)};ParenthesisNode.prototype._toString=function(options){return!options||options&&!options.parenthesis||options&&"keep"===options.parenthesis?"("+this.content.toString(options)+")":this.content.toString(options)};ParenthesisNode.prototype.toJSON=function(){return{mathjs:"ParenthesisNode",
content:this.content}};ParenthesisNode.fromJSON=function(json){return new ParenthesisNode(json.content)};ParenthesisNode.prototype.toHTML=function(options){return!options||options&&!options.parenthesis||options&&"keep"===options.parenthesis?'\x3cspan class\x3d"math-parenthesis math-round-parenthesis"\x3e(\x3c/span\x3e'+this.content.toHTML(options)+'\x3cspan class\x3d"math-parenthesis math-round-parenthesis"\x3e)\x3c/span\x3e':this.content.toHTML(options)};ParenthesisNode.prototype._toTex=function(options){return!options||
options&&!options.parenthesis||options&&"keep"===options.parenthesis?"\\left(".concat(this.content.toTex(options),"\\right)"):this.content.toTex(options)};return ParenthesisNode},{isClass:!0,isNode:!0});exports.createParenthesisNode=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$expression$node$ParenthesisNode.js.map
