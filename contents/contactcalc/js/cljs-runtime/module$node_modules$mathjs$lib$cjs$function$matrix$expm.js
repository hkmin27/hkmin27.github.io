shadow$provide.module$node_modules$mathjs$lib$cjs$function$matrix$expm=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createExpm=void 0;var _is=require("module$node_modules$mathjs$lib$cjs$utils$is"),_string=require("module$node_modules$mathjs$lib$cjs$utils$string");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("expm","typed abs add identity inv multiply".split(" "),function(_ref){var typed=_ref.typed,
abs=_ref.abs,add=_ref.add,identity=_ref.identity,inv=_ref.inv,multiply=_ref.multiply;return typed("expm",{Matrix:function(A){var size=A.size();if(2!==size.length||size[0]!==size[1])throw new RangeError("Matrix must be square (size: "+(0,_string.format)(size)+")");size=size[0];for(var infNorm,n=A.size()[0],i=infNorm=0;i<n;i++){for(var rowSum=0,j=0;j<n;j++)rowSum+=abs(A.get([i,j]));infNorm=Math.max(rowSum,infNorm)}a:{for(i=0;30>i;i++)for(rowSum=0;rowSum<=i;rowSum++){n=i-rowSum;j=1;for(var i$jscomp$0=
2;i$jscomp$0<=rowSum;i$jscomp$0++)j*=i$jscomp$0;i$jscomp$0=j;for(var _i2=rowSum+1;_i2<=2*rowSum;_i2++)i$jscomp$0*=_i2;if(1E-15>8*Math.pow(infNorm/Math.pow(2,n),2*rowSum)*j*j/(i$jscomp$0*i$jscomp$0*(2*rowSum+1)))break a}throw Error("Could not find acceptable parameters to compute the matrix exponential (try increasing maxSearchSize in expm.js)");}infNorm=rowSum;i=multiply(A,Math.pow(2,-n));rowSum=identity(size);size=identity(size);j=1;i$jscomp$0=i;_i2=-1;for(var i$jscomp$1=1;i$jscomp$1<=infNorm;i$jscomp$1++)1<
i$jscomp$1&&(i$jscomp$0=multiply(i$jscomp$0,i),_i2=-_i2),j=j*(infNorm-i$jscomp$1+1)/((2*infNorm-i$jscomp$1+1)*i$jscomp$1),rowSum=add(rowSum,multiply(j,i$jscomp$0)),size=add(size,multiply(j*_i2,i$jscomp$0));size=multiply(inv(size),rowSum);for(infNorm=0;infNorm<n;infNorm++)size=multiply(size,size);return(0,_is.isSparseMatrix)(A)?A.createSparseMatrix(size):size}})});exports.createExpm=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$matrix$expm.js.map
