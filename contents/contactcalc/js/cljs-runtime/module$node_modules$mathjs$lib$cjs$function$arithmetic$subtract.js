shadow$provide.module$node_modules$mathjs$lib$cjs$function$arithmetic$subtract=function(global,require,module,exports){function checkEqualDimensions(x,y){x=x.size();y=y.size();if(x.length!==y.length)throw new _DimensionError.DimensionError(x.length,y.length);}Object.defineProperty(exports,"__esModule",{value:!0});exports.createSubtract=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _DimensionError=require("module$node_modules$mathjs$lib$cjs$error$DimensionError"),_algorithm=
require("module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm01"),_algorithm2=require("module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm03"),_algorithm3=require("module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm05"),_algorithm4=require("module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm10"),_algorithm5=require("module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm13"),_algorithm6=require("module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm14");
require=(0,global.factory)("subtract","typed matrix equalScalar addScalar unaryMinus DenseMatrix".split(" "),function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,addScalar=_ref.addScalar,unaryMinus=_ref.unaryMinus;_ref=_ref.DenseMatrix;var algorithm01=(0,_algorithm.createAlgorithm01)({typed:typed}),algorithm03=(0,_algorithm2.createAlgorithm03)({typed:typed}),algorithm05=(0,_algorithm3.createAlgorithm05)({typed:typed,equalScalar:equalScalar}),algorithm10=(0,_algorithm4.createAlgorithm10)({typed:typed,
DenseMatrix:_ref}),algorithm13=(0,_algorithm5.createAlgorithm13)({typed:typed}),algorithm14=(0,_algorithm6.createAlgorithm14)({typed:typed});return typed("subtract",{"number, number":function(x,y){return x-y},"Complex, Complex":function(x,y){return x.sub(y)},"BigNumber, BigNumber":function(x,y){return x.minus(y)},"Fraction, Fraction":function(x,y){return x.sub(y)},"Unit, Unit":function(x,y){if(null===x.value)throw Error("Parameter x contains a unit with undefined value");if(null===y.value)throw Error("Parameter y contains a unit with undefined value");
if(!x.equalBase(y))throw Error("Units do not match");x=x.clone();x.value=this(x.value,y.value);x.fixPrefix=!1;return x},"SparseMatrix, SparseMatrix":function(x,y){checkEqualDimensions(x,y);return algorithm05(x,y,this)},"SparseMatrix, DenseMatrix":function(x,y){checkEqualDimensions(x,y);return algorithm03(y,x,this,!0)},"DenseMatrix, SparseMatrix":function(x,y){checkEqualDimensions(x,y);return algorithm01(x,y,this,!1)},"DenseMatrix, DenseMatrix":function(x,y){checkEqualDimensions(x,y);return algorithm13(x,
y,this)},"Array, Array":function(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function(x,y){return this(matrix(x),y)},"Matrix, Array":function(x,y){return this(x,matrix(y))},"SparseMatrix, any":function(x,y){return algorithm10(x,unaryMinus(y),addScalar)},"DenseMatrix, any":function(x,y){return algorithm14(x,y,this)},"any, SparseMatrix":function(x,y){return algorithm10(y,x,this,!0)},"any, DenseMatrix":function(x,y){return algorithm14(y,x,this,!0)},"Array, any":function(x,y){return algorithm14(matrix(x),
y,this,!1).valueOf()},"any, Array":function(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})});exports.createSubtract=require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$arithmetic$subtract.js.map
