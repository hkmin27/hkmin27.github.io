{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$transform$std_transform.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,qEAAA,CAA0F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,kBAAR,CAA6B,IAAK,EAE9BC,OAAAA,CAAWP,OAAA,CAAQ,kDAAR,CAEf,KAAIQ,KAAOR,OAAA,CAAQ,4DAAR,CAAX,CAEIS,gBAAkBT,OAAA,CAAQ,8EAAR,CAFtB,CAIIU,mBAAqBV,OAAA,CAAQ,iFAAR,CAYrBM;OAAAA,CAAoC,CAAC,CAAA,CAAGC,MAASI,CAAAA,OAAb,EAV7BC,KAU6B,CATrBC,CAAC,OAADA,CAAU,MAAVA,CAAkB,UAAlBA,CASqB,CAA0C,QAAS,CAACC,IAAD,CAAO,CAAA,IAC5FC,MAAQD,IAAKC,CAAAA,KAD+E,CAE5FC,KAAOF,IAAKE,CAAAA,IACZC,KAAAA,CAAWH,IAAKG,CAAAA,QACpB,KAAIC,IAAM,CAAC,CAAA,CAAGV,IAAKW,CAAAA,SAAT,EAAoB,CAC5BJ,MAAOA,KADqB,CAE5BC,KAAMA,IAFsB,CAG5BC,SAAUA,IAHkB,CAApB,CAKV,OAAOF,MAAA,CAAM,KAAN,CAAa,CAClB,SAAUK,QAAY,CAACC,IAAD,CAAO,CAC3BA,IAAA,CAAO,CAAC,CAAA,CAAGX,kBAAmBY,CAAAA,iBAAvB,EAA0CD,IAA1C,CAEP,IAAI,CACF,MAAOH,IAAIK,CAAAA,KAAJ,CAAU,IAAV,CAAgBF,IAAhB,CADL,CAEF,MAAOG,GAAP,CAAY,CACZ,KAAM,CAAC,CAAA,CAAGf,eAAgBgB,CAAAA,cAApB,EAAoCD,GAApC,CAAN,CADY,CALa,CADX,CAAb,CATyF,CAA1D,CAoBrC,CACDE,oBAAqB,CAAA,CADpB,CApBqC,CAuBxCxB,QAAQI,CAAAA,kBAAR,CAA6BA,OAjDqG;",
"sources":["node_modules/mathjs/lib/cjs/expression/transform/std.transform.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$transform$std_transform\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStdTransform = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _std = require(\"../../function/statistics/std.js\");\n\nvar _errorTransform = require(\"./utils/errorTransform.js\");\n\nvar _lastDimToZeroBase = require(\"./utils/lastDimToZeroBase.js\");\n\nvar name = 'std';\nvar dependencies = ['typed', 'sqrt', 'variance'];\n/**\n * Attach a transform function to math.std\n * Adds a property transform containing the transform function.\n *\n * This transform changed the `dim` parameter of function std\n * from one-based to zero based\n */\n\nvar createStdTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      sqrt = _ref.sqrt,\n      variance = _ref.variance;\n  var std = (0, _std.createStd)({\n    typed: typed,\n    sqrt: sqrt,\n    variance: variance\n  });\n  return typed('std', {\n    '...any': function any(args) {\n      args = (0, _lastDimToZeroBase.lastDimToZeroBase)(args);\n\n      try {\n        return std.apply(null, args);\n      } catch (err) {\n        throw (0, _errorTransform.errorTransform)(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});\nexports.createStdTransform = createStdTransform;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createStdTransform","_factory","_std","_errorTransform","_lastDimToZeroBase","factory","name","dependencies","_ref","typed","sqrt","variance","std","createStd","any","args","lastDimToZeroBase","apply","err","errorTransform","isTransformFunction"]
}
