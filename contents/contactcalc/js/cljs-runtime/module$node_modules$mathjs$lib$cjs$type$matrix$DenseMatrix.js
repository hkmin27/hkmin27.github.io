shadow$provide.module$node_modules$mathjs$lib$cjs$type$matrix$DenseMatrix=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createDenseMatrixClass=void 0;var _is=require("module$node_modules$mathjs$lib$cjs$utils$is"),_array=require("module$node_modules$mathjs$lib$cjs$utils$array"),_string=require("module$node_modules$mathjs$lib$cjs$utils$string"),_number=require("module$node_modules$mathjs$lib$cjs$utils$number"),_object=require("module$node_modules$mathjs$lib$cjs$utils$object"),
_DimensionError=require("module$node_modules$mathjs$lib$cjs$error$DimensionError");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("DenseMatrix",["Matrix"],function(_ref){function DenseMatrix(data,datatype){if(!(this instanceof DenseMatrix))throw new SyntaxError("Constructor must be called with the new operator");if(datatype&&!(0,_is.isString)(datatype))throw Error("Invalid datatype: "+datatype);if((0,_is.isMatrix)(data))"DenseMatrix"===data.type?(this._data=
(0,_object.clone)(data._data),this._size=(0,_object.clone)(data._size)):(this._data=data.toArray(),this._size=data.size()),this._datatype=datatype||data._datatype;else if(data&&(0,_is.isArray)(data.data)&&(0,_is.isArray)(data.size))this._data=data.data,this._size=data.size,(0,_array.validate)(this._data,this._size),this._datatype=datatype||data.datatype;else{if((0,_is.isArray)(data))this._data=preprocess(data),this._size=(0,_array.arraySize)(this._data),(0,_array.validate)(this._data,this._size);
else{if(data)throw new TypeError("Unsupported type of data ("+(0,_is.typeOf)(data)+")");this._data=[];this._size=[0]}this._datatype=datatype}}function _getSubmatrix(data,index,dims,dim){var last=dim===dims-1,range=index.dimension(dim);return last?range.map(function(i){(0,_array.validateIndex)(i,data.length);return data[i]}).valueOf():range.map(function(i){(0,_array.validateIndex)(i,data.length);return _getSubmatrix(data[i],index,dims,dim+1)}).valueOf()}function _set(matrix,index,submatrix,defaultValue){if(!index||
!0!==index.isIndex)throw new TypeError("Invalid index");var iSize=index.size(),isScalar=index.isScalar();if((0,_is.isMatrix)(submatrix)){var sSize=submatrix.size();submatrix=submatrix.valueOf()}else sSize=(0,_array.arraySize)(submatrix);if(isScalar){if(0!==sSize.length)throw new TypeError("Scalar expected");matrix.set(index.min(),submatrix,defaultValue)}else{if(iSize.length<matrix._size.length)throw new _DimensionError.DimensionError(iSize.length,matrix._size.length,"\x3c");if(sSize.length<iSize.length){for(var outer=
isScalar=0;1===iSize[isScalar]&&1===sSize[isScalar];)isScalar++;for(;1===iSize[isScalar];)outer++,isScalar++;submatrix=(0,_array.unsqueeze)(submatrix,iSize.length,outer,sSize)}if(!(0,_object.deepStrictEqual)(iSize,sSize))throw new _DimensionError.DimensionError(iSize,sSize,"\x3e");sSize=index.max().map(function(i){return i+1});_fit(matrix,sSize,defaultValue);_setSubmatrix(matrix._data,index,submatrix,iSize.length,0)}return matrix}function _setSubmatrix(data,index,submatrix,dims,dim){var last=dim===
dims-1,range=index.dimension(dim);last?range.forEach(function(dataIndex,subIndex){(0,_array.validateIndex)(dataIndex);data[dataIndex]=submatrix[subIndex[0]]}):range.forEach(function(dataIndex,subIndex){(0,_array.validateIndex)(dataIndex);_setSubmatrix(data[dataIndex],index,submatrix[subIndex[0]],dims,dim+1)})}function _resize(matrix,size,defaultValue){if(0===size.length){for(matrix=matrix._data;(0,_is.isArray)(matrix);)matrix=matrix[0];return matrix}matrix._size=size.slice(0);matrix._data=(0,_array.resize)(matrix._data,
matrix._size,defaultValue);return matrix}function _fit(matrix,size,defaultValue){for(var newSize=matrix._size.slice(0),changed=!1;newSize.length<size.length;)newSize.push(0),changed=!0;for(var i=0,ii=size.length;i<ii;i++)size[i]>newSize[i]&&(newSize[i]=size[i],changed=!0);changed&&_resize(matrix,newSize,defaultValue)}function preprocess(data){for(var i=0,ii=data.length;i<ii;i++){var elem=data[i];(0,_is.isArray)(elem)?data[i]=preprocess(elem):elem&&!0===elem.isMatrix&&(data[i]=preprocess(elem.valueOf()))}return data}
DenseMatrix.prototype=new _ref.Matrix;DenseMatrix.prototype.createDenseMatrix=function(data,datatype){return new DenseMatrix(data,datatype)};DenseMatrix.prototype.type="DenseMatrix";DenseMatrix.prototype.isDenseMatrix=!0;DenseMatrix.prototype.getDataType=function(){return(0,_array.getArrayDataType)(this._data,_is.typeOf)};DenseMatrix.prototype.storage=function(){return"dense"};DenseMatrix.prototype.datatype=function(){return this._datatype};DenseMatrix.prototype.create=function(data,datatype){return new DenseMatrix(data,
datatype)};DenseMatrix.prototype.subset=function(index,replacement,defaultValue){switch(arguments.length){case 1:if(!(0,_is.isIndex)(index))throw new TypeError("Invalid index");if(index.isScalar())var JSCompiler_inline_result=this.get(index.min());else{JSCompiler_inline_result=index.size();if(JSCompiler_inline_result.length!==this._size.length)throw new _DimensionError.DimensionError(JSCompiler_inline_result.length,this._size.length);for(var min=index.min(),max=index.max(),i=0,ii=this._size.length;i<
ii;i++)(0,_array.validateIndex)(min[i],this._size[i]),(0,_array.validateIndex)(max[i],this._size[i]);JSCompiler_inline_result=new DenseMatrix(_getSubmatrix(this._data,index,JSCompiler_inline_result.length,0),this._datatype)}return JSCompiler_inline_result;case 2:case 3:return _set(this,index,replacement,defaultValue);default:throw new SyntaxError("Wrong number of arguments");}};DenseMatrix.prototype.get=function(index){if(!(0,_is.isArray)(index))throw new TypeError("Array expected");if(index.length!==
this._size.length)throw new _DimensionError.DimensionError(index.length,this._size.length);for(var x=0;x<index.length;x++)(0,_array.validateIndex)(index[x],this._size[x]);x=this._data;for(var i=0,ii=index.length;i<ii;i++){var indexI=index[i];(0,_array.validateIndex)(indexI,x.length);x=x[indexI]}return x};DenseMatrix.prototype.set=function(index,value,defaultValue){if(!(0,_is.isArray)(index))throw new TypeError("Array expected");if(index.length<this._size.length)throw new _DimensionError.DimensionError(index.length,
this._size.length,"\x3c");var ii=index.map(function(i){return i+1});_fit(this,ii,defaultValue);var data=this._data;defaultValue=0;for(ii=index.length-1;defaultValue<ii;defaultValue++){var indexI=index[defaultValue];(0,_array.validateIndex)(indexI,data.length);data=data[indexI]}indexI=index[index.length-1];(0,_array.validateIndex)(indexI,data.length);data[indexI]=value;return this};DenseMatrix.prototype.resize=function(size,defaultValue,copy){if(!(0,_is.isCollection)(size))throw new TypeError("Array or Matrix expected");
size=size.valueOf().map(function(value){return Array.isArray(value)&&1===value.length?value[0]:value});copy=copy?this.clone():this;return _resize(copy,size,defaultValue)};DenseMatrix.prototype.reshape=function(size$jscomp$0,copy){copy=copy?this.clone():this;copy._data=(0,_array.reshape)(copy._data,size$jscomp$0);var currentLength=copy._size.reduce(function(length,size){return length*size});copy._size=(0,_array.processSizesWildcard)(size$jscomp$0,currentLength);return copy};DenseMatrix.prototype.clone=
function(){return new DenseMatrix({data:(0,_object.clone)(this._data),size:(0,_object.clone)(this._size),datatype:this._datatype})};DenseMatrix.prototype.size=function(){return this._size.slice(0)};DenseMatrix.prototype.map=function(callback){var me=this,data=function recurse(value,index){return(0,_is.isArray)(value)?value.map(function(child,i){return recurse(child,index.concat(i))}):callback(value,index,me)}(this._data,[]),datatype=void 0!==this._datatype?(0,_array.getArrayDataType)(data,_is.typeOf):
void 0;return new DenseMatrix(data,datatype)};DenseMatrix.prototype.forEach=function(callback){var me=this;(function recurse(value,index){(0,_is.isArray)(value)?value.forEach(function(child,i){recurse(child,index.concat(i))}):callback(value,index,me)})(this._data,[])};DenseMatrix.prototype.toArray=function(){return(0,_object.clone)(this._data)};DenseMatrix.prototype.valueOf=function(){return this._data};DenseMatrix.prototype.format=function(options){return(0,_string.format)(this._data,options)};DenseMatrix.prototype.toString=
function(){return(0,_string.format)(this._data)};DenseMatrix.prototype.toJSON=function(){return{mathjs:"DenseMatrix",data:this._data,size:this._size,datatype:this._datatype}};DenseMatrix.prototype.diagonal=function(k){if(k){if((0,_is.isBigNumber)(k)&&(k=k.toNumber()),!(0,_is.isNumber)(k)||!(0,_number.isInteger)(k))throw new TypeError("The parameter k must be an integer number");}else k=0;var kSuper=0<k?k:0;k=0>k?-k:0;for(var n=Math.min(this._size[0]-k,this._size[1]-kSuper),data=[],i=0;i<n;i++)data[i]=
this._data[i+k][i+kSuper];return new DenseMatrix({data:data,size:[n],datatype:this._datatype})};DenseMatrix.diagonal=function(size,value,k,defaultValue){if(!(0,_is.isArray)(size))throw new TypeError("Array expected, size parameter");if(2!==size.length)throw Error("Only two dimensions matrix are supported");size=size.map(function(s){(0,_is.isBigNumber)(s)&&(s=s.toNumber());if(!(0,_is.isNumber)(s)||!(0,_number.isInteger)(s)||1>s)throw Error("Size values must be positive integers");return s});if(k){if((0,
_is.isBigNumber)(k)&&(k=k.toNumber()),!(0,_is.isNumber)(k)||!(0,_number.isInteger)(k))throw new TypeError("The parameter k must be an integer number");}else k=0;var kSuper=0<k?k:0;k=0>k?-k:0;var rows=size[0],columns=size[1],n=Math.min(rows-k,columns-kSuper);if((0,_is.isArray)(value)){if(value.length!==n)throw Error("Invalid value array length");var _value=function(i){return value[i]}}else if((0,_is.isMatrix)(value)){_value=value.size();if(1!==_value.length||_value[0]!==n)throw Error("Invalid matrix length");
_value=function(i){return value.get([i])}}else _value=function(){return value};defaultValue||(defaultValue=(0,_is.isBigNumber)(_value(0))?_value(0).mul(0):0);var data=[];if(0<size.length)for(data=(0,_array.resize)(data,size,defaultValue),size=0;size<n;size++)data[size+k][size+kSuper]=_value(size);return new DenseMatrix({data:data,size:[rows,columns]})};DenseMatrix.fromJSON=function(json){return new DenseMatrix(json)};DenseMatrix.prototype.swapRows=function(i,j){if(!((0,_is.isNumber)(i)&&(0,_number.isInteger)(i)&&
(0,_is.isNumber)(j)&&(0,_number.isInteger)(j)))throw Error("Row index must be positive integers");if(2!==this._size.length)throw Error("Only two dimensional matrix is supported");(0,_array.validateIndex)(i,this._size[0]);(0,_array.validateIndex)(j,this._size[0]);DenseMatrix._swapRows(i,j,this._data);return this};DenseMatrix._swapRows=function(i,j,data){var vi=data[i];data[i]=data[j];data[j]=vi};return DenseMatrix},{isClass:!0});exports.createDenseMatrixClass=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$type$matrix$DenseMatrix.js.map
