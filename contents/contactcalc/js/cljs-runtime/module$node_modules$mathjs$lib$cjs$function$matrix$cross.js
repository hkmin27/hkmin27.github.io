shadow$provide.module$node_modules$mathjs$lib$cjs$function$matrix$cross=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createCross=void 0;var _array=require("module$node_modules$mathjs$lib$cjs$utils$array");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("cross",["typed","matrix","subtract","multiply"],function(_ref){function _cross(x,y){var highestDimension=Math.max((0,_array.arraySize)(x).length,
(0,_array.arraySize)(y).length);x=(0,_array.squeeze)(x);y=(0,_array.squeeze)(y);var xSize=(0,_array.arraySize)(x),ySize=(0,_array.arraySize)(y);if(1!==xSize.length||1!==ySize.length||3!==xSize[0]||3!==ySize[0])throw new RangeError("Vectors with length 3 expected (Size A \x3d ["+xSize.join(", ")+"], B \x3d ["+ySize.join(", ")+"])");x=[subtract(multiply(x[1],y[2]),multiply(x[2],y[1])),subtract(multiply(x[2],y[0]),multiply(x[0],y[2])),subtract(multiply(x[0],y[1]),multiply(x[1],y[0]))];return 1<highestDimension?
[x]:x}var typed=_ref.typed,matrix=_ref.matrix,subtract=_ref.subtract,multiply=_ref.multiply;return typed("cross",{"Matrix, Matrix":function(x,y){return matrix(_cross(x.toArray(),y.toArray()))},"Matrix, Array":function(x,y){return matrix(_cross(x.toArray(),y))},"Array, Matrix":function(x,y){return matrix(_cross(x,y.toArray()))},"Array, Array":_cross})});exports.createCross=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$matrix$cross.js.map
