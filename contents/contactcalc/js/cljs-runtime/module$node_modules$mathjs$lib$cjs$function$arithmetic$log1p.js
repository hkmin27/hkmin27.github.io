shadow$provide.module$node_modules$mathjs$lib$cjs$function$arithmetic$log1p=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createLog1p=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _collection=require("module$node_modules$mathjs$lib$cjs$utils$collection"),_number=require("module$node_modules$mathjs$lib$cjs$utils$number");require=(0,global.factory)("log1p",["typed","config","divideScalar","log","Complex"],function(_ref){function _log1pComplex(x){var xRe1p=
x.re+1;return new Complex(Math.log(Math.sqrt(xRe1p*xRe1p+x.im*x.im)),Math.atan2(x.im,xRe1p))}var typed=_ref.typed,config=_ref.config,divideScalar=_ref.divideScalar,log=_ref.log,Complex=_ref.Complex;return typed("log1p",{number:function(x){return-1<=x||config.predictable?(0,_number.log1p)(x):_log1pComplex(new Complex(x,0))},Complex:_log1pComplex,BigNumber:function(x){var y=x.plus(1);return!y.isNegative()||config.predictable?y.ln():_log1pComplex(new Complex(x.toNumber(),0))},"Array | Matrix":function(x){return(0,
_collection.deepMap)(x,this)},"any, any":function(x,base){return divideScalar(this(x),log(base))}})});exports.createLog1p=require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$arithmetic$log1p.js.map
