shadow$provide.module$node_modules$mathjs$lib$cjs$function$algebra$solver$usolve=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createUsolve=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _solveValidation=require("module$node_modules$mathjs$lib$cjs$function$algebra$solver$utils$solveValidation");require=(0,global.factory)("usolve","typed matrix divideScalar multiplyScalar subtract equalScalar DenseMatrix".split(" "),
function(_ref){function _denseBackwardSubstitution(m,b){b=solveValidation(m,b,!0);b=b._data;var rows=m._size[0],x=[],mdata=m._data;for(m=m._size[1]-1;0<=m;m--){var bj=b[m][0]||0;if(equalScalar(bj,0))bj=0;else{var vjj=mdata[m][m];if(equalScalar(vjj,0))throw Error("Linear system cannot be solved since matrix is singular");bj=divideScalar(bj,vjj);for(vjj=m-1;0<=vjj;vjj--)b[vjj]=[subtract(b[vjj][0]||0,multiplyScalar(bj,mdata[vjj][m]))]}x[m]=[bj]}return new DenseMatrix({data:x,size:[rows,1]})}var typed=
_ref.typed,matrix=_ref.matrix,divideScalar=_ref.divideScalar,multiplyScalar=_ref.multiplyScalar,subtract=_ref.subtract,equalScalar=_ref.equalScalar,DenseMatrix=_ref.DenseMatrix,solveValidation=(0,_solveValidation.createSolveValidation)({DenseMatrix:DenseMatrix});return typed("usolve",{"SparseMatrix, Array | Matrix":function(m,b){b=solveValidation(m,b,!0);b=b._data;var rows=m._size[0],values=m._values,index=m._index,ptr=m._ptr,x=[];for(m=m._size[1]-1;0<=m;m--){var bj=b[m][0]||0;if(equalScalar(bj,0))x[m]=
[0];else{for(var vjj=0,jValues=[],jIndices=[],firstIndex=ptr[m],k=ptr[m+1]-1;k>=firstIndex;k--){var i=index[k];i===m?vjj=values[k]:i<m&&(jValues.push(values[k]),jIndices.push(i))}if(equalScalar(vjj,0))throw Error("Linear system cannot be solved since matrix is singular");bj=divideScalar(bj,vjj);vjj=0;for(firstIndex=jIndices.length;vjj<firstIndex;vjj++)k=jIndices[vjj],b[k]=[subtract(b[k][0],multiplyScalar(bj,jValues[vjj]))];x[m]=[bj]}}return new DenseMatrix({data:x,size:[rows,1]})},"DenseMatrix, Array | Matrix":function(m,
b){return _denseBackwardSubstitution(m,b)},"Array, Array | Matrix":function(a,b){a=matrix(a);return _denseBackwardSubstitution(a,b).valueOf()}})});exports.createUsolve=require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$algebra$solver$usolve.js.map
