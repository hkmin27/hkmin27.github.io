{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$matrix$forEach.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,0DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA0DvHC,QAASA,SAAQ,CAACC,KAAD,CAAQC,QAAR,CAAkB,CAEjC,IAAIC,KAAO,CAAC,CAAA,CAAGC,SAAUC,CAAAA,gBAAd,EAAgCH,QAAhC,CAEGI,UAASA,QAAO,CAACC,KAAD,CAAQC,KAAR,CAAe,CACvCC,KAAMC,CAAAA,OAAN,CAAcH,KAAd,CAAJ,CACE,CAAC,CAAA,CAAGI,MAAOC,CAAAA,OAAX,EAAoBL,KAApB,CAA2B,QAAS,CAACM,KAAD,CAAQC,CAAR,CAAW,CAE7CR,OAAA,CAAQO,KAAR,CAAeL,KAAMO,CAAAA,MAAN,CAAaD,CAAb,CAAf,CAF6C,CAA/C,CADF,CAOe,CAAb,GAAIX,IAAJ,CACED,QAAA,CAASK,KAAT,CADF,CAEoB,CAAb,GAAIJ,IAAJ,CACLD,QAAA,CAASK,KAAT,CAAgBC,KAAhB,CADK,CAILN,QAAA,CAASK,KAAT,CAAgBC,KAAhB,CAAuBP,KAAvB,CAduC,CAA/BK,CAmBd,CAAQL,KAAR,CAAe,EAAf,CAvBiC,CAvDnCe,MAAOC,CAAAA,cAAP,CAAsBlB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CQ,MAAO,CAAA,CADoC,CAA7C,CAGAR,QAAQmB,CAAAA,aAAR,CAAwB,IAAK,EAE7B;IAAId,UAAYP,OAAA,CAAQ,mDAAR,CAAhB,CAEIc,OAASd,OAAA,CAAQ,gDAAR,CAETsB,OAAAA,CAAWtB,OAAA,CAAQ,kDAAR,CAIXqB,OAAAA,CAA+B,CAAC,CAAA,CAAGC,MAASC,CAAAA,OAAb,EAFxBC,SAEwB,CADhBC,CAAC,OAADA,CACgB,CAA0C,QAAS,CAACC,IAAD,CAAO,CACvFC,IAAAA,CAAQD,IAAKC,CAAAA,KAyBjB,OAAOA,KAAA,CA5BEH,SA4BF,CAAY,CACjB,kBAAmBrB,QADF,CAEjB,mBAAoByB,QAAuB,CAACC,CAAD,CAAIxB,QAAJ,CAAc,CACvD,MAAOwB,EAAEd,CAAAA,OAAF,CAAUV,QAAV,CADgD,CAFxC,CAAZ,CA1BoF,CAA1D,CAwCnCH,QAAQmB,CAAAA,aAAR,CAAwBA,MAxD+F;",
"sources":["node_modules/mathjs/lib/cjs/function/matrix/forEach.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$matrix$forEach\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createForEach = void 0;\n\nvar _function = require(\"../../utils/function.js\");\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'forEach';\nvar dependencies = ['typed'];\nvar createForEach = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Iterate over all elements of a matrix/array, and executes the given callback function.\n   *\n   * Syntax:\n   *\n   *    math.forEach(x, callback)\n   *\n   * Examples:\n   *\n   *    math.forEach([1, 2, 3], function(value) {\n   *      console.log(value)\n   *    })\n   *    // outputs 1, 2, 3\n   *\n   * See also:\n   *\n   *    filter, map, sort\n   *\n   * @param {Matrix | Array} x    The matrix to iterate on.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix/array being traversed.\n   */\n  return typed(name, {\n    'Array, function': _forEach,\n    'Matrix, function': function MatrixFunction(x, callback) {\n      return x.forEach(callback);\n    }\n  });\n});\n/**\n * forEach for a multi dimensional array\n * @param {Array} array\n * @param {Function} callback\n * @private\n */\n\nexports.createForEach = createForEach;\n\nfunction _forEach(array, callback) {\n  // figure out what number of arguments the callback function expects\n  var args = (0, _function.maxArgumentCount)(callback);\n\n  var recurse = function recurse(value, index) {\n    if (Array.isArray(value)) {\n      (0, _array.forEach)(value, function (child, i) {\n        // we create a copy of the index array and append the new index value\n        recurse(child, index.concat(i));\n      });\n    } else {\n      // invoke the callback function with the right number of arguments\n      if (args === 1) {\n        callback(value);\n      } else if (args === 2) {\n        callback(value, index);\n      } else {\n        // 3 or -1\n        callback(value, index, array);\n      }\n    }\n  };\n\n  recurse(array, []);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_forEach","array","callback","args","_function","maxArgumentCount","recurse","value","index","Array","isArray","_array","forEach","child","i","concat","Object","defineProperty","createForEach","_factory","factory","name","dependencies","_ref","typed","MatrixFunction","x"]
}
