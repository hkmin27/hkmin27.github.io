{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$algebra$sparse$csFkeep.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,kEAAA,CAAuF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAiBAA,QAAgB,CAACC,CAAD,CAAIC,QAAJ,CAAcC,KAAd,CAAqB,CAEnC,IAAIC,QAAUH,CAAEI,CAAAA,OAAhB,CACIC,OAASL,CAAEM,CAAAA,MADf,CAEIC,KAAOP,CAAEQ,CAAAA,IAGTC,EAAAA,CAFQT,CAAEU,CAAAA,KAEN,CAAM,CAAN,CAIR,KAFA,IAAIC,GAAK,CAAT,CAESC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBH,CAApB,CAAuBG,CAAA,EAAvB,CAA4B,CAE1B,IAAIC,EAAIN,IAAA,CAAKK,CAAL,CAIR,KAFAL,IAAA,CAAKK,CAAL,CAEA,CAFUD,EAEV,CAAOE,CAAP,CAAWN,IAAA,CAAKK,CAAL,CAAS,CAAT,CAAX,CAAwBC,CAAA,EAAxB,CAEMZ,QAAA,CAASI,MAAA,CAAOQ,CAAP,CAAT,CAAoBD,CAApB,CAAuBT,OAAA,CAAUA,OAAA,CAAQU,CAAR,CAAV,CAAuB,CAA9C,CAAiDX,KAAjD,CAAJ,GAEEG,MAAA,CAAOM,EAAP,CAOA,CAPaN,MAAA,CAAOQ,CAAP,CAOb,CALIV,OAKJ,GAJEA,OAAA,CAAQQ,EAAR,CAIF,CAJgBR,OAAA,CAAQU,CAAR,CAIhB,EAAAF,EAAA,EATF,CARwB,CAuB5BJ,IAAA,CAAKE,CAAL,CAAA,CAAUE,EAEVN,OAAOS,CAAAA,MAAP,CAAcH,EAAd,CAAkBN,MAAOU,CAAAA,MAAzB;AAAkCJ,EAAlC,CAEIR,QAAJ,EACEA,OAAQW,CAAAA,MAAR,CAAeH,EAAf,CAAmBR,OAAQY,CAAAA,MAA3B,CAAoCJ,EAApC,CAIF,OAAOA,GA3C4B,CAvB0F;",
"sources":["node_modules/mathjs/lib/cjs/function/algebra/sparse/csFkeep.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$algebra$sparse$csFkeep\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.csFkeep = csFkeep;\n\n/**\n * Keeps entries in the matrix when the callback function returns true, removes the entry otherwise\n *\n * @param {Matrix}   a              The sparse matrix\n * @param {function} callback       The callback function, function will be invoked with the following args:\n *                                    - The entry row\n *                                    - The entry column\n *                                    - The entry value\n *                                    - The state parameter\n * @param {any}      other          The state\n *\n * @return                          The number of nonzero elements in the matrix\n *\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n */\nfunction csFkeep(a, callback, other) {\n  // a arrays\n  var avalues = a._values;\n  var aindex = a._index;\n  var aptr = a._ptr;\n  var asize = a._size; // columns\n\n  var n = asize[1]; // nonzero items\n\n  var nz = 0; // loop columns\n\n  for (var j = 0; j < n; j++) {\n    // get current location of col j\n    var p = aptr[j]; // record new location of col j\n\n    aptr[j] = nz;\n\n    for (; p < aptr[j + 1]; p++) {\n      // check we need to keep this item\n      if (callback(aindex[p], j, avalues ? avalues[p] : 1, other)) {\n        // keep A(i,j)\n        aindex[nz] = aindex[p]; // check we need to process values (pattern only)\n\n        if (avalues) {\n          avalues[nz] = avalues[p];\n        } // increment nonzero items\n\n\n        nz++;\n      }\n    }\n  } // finalize A\n\n\n  aptr[n] = nz; // trim arrays\n\n  aindex.splice(nz, aindex.length - nz); // check we need to process values (pattern only)\n\n  if (avalues) {\n    avalues.splice(nz, avalues.length - nz);\n  } // return number of nonzero items\n\n\n  return nz;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","csFkeep","a","callback","other","avalues","_values","aindex","_index","aptr","_ptr","n","_size","nz","j","p","splice","length"]
}
