{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$arithmetic$unaryMinus.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,yFAAA,CAA8G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGtJC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,cAAR,CARqBA,CACnBC,KAAM,YADaD,CAEnBE,SAAU,WAFSF,CAGnBG,OAAQ,CAAC,IAAD,CAAO,eAAP,CAHWH,CAInBI,YAAa,wEAJMJ,CAKnBK,SAAU,CAAC,MAAD,CAAS,SAAT,CAAoB,OAApB,CALSL,CAMnBM,QAAS,CAAC,KAAD,CAAQ,UAAR,CAAoB,WAApB,CANUN,CAPiI;",
"sources":["node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/arithmetic/unaryMinus.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$arithmetic$unaryMinus\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unaryMinusDocs = void 0;\nvar unaryMinusDocs = {\n  name: 'unaryMinus',\n  category: 'Operators',\n  syntax: ['-x', 'unaryMinus(x)'],\n  description: 'Inverse the sign of a value. Converts booleans and strings to numbers.',\n  examples: ['-4.5', '-(-5.6)', '-\"22\"'],\n  seealso: ['add', 'subtract', 'unaryPlus']\n};\nexports.unaryMinusDocs = unaryMinusDocs;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","unaryMinusDocs","name","category","syntax","description","examples","seealso"]
}
