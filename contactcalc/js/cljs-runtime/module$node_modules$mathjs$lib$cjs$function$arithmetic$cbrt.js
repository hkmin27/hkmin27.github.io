shadow$provide.module$node_modules$mathjs$lib$cjs$function$arithmetic$cbrt=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createCbrt=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _is=require("module$node_modules$mathjs$lib$cjs$utils$is"),_collection=require("module$node_modules$mathjs$lib$cjs$utils$collection"),_index=require("module$node_modules$mathjs$lib$cjs$plain$number$index");require=(0,global.factory)("cbrt",
"config typed isNegative unaryMinus matrix Complex BigNumber Fraction".split(" "),function(_ref){function _cbrtComplex(x,allRoots){var arg3=x.arg()/3;x=x.abs();var principal=(new Complex((0,_index.cbrtNumber)(x),0)).mul((new Complex(0,arg3)).exp());return allRoots?(allRoots=[principal,(new Complex((0,_index.cbrtNumber)(x),0)).mul((new Complex(0,arg3+2*Math.PI/3)).exp()),(new Complex((0,_index.cbrtNumber)(x),0)).mul((new Complex(0,arg3-2*Math.PI/3)).exp())],"Array"===config.matrix?allRoots:matrix(allRoots)):
principal}var config=_ref.config,typed=_ref.typed,isNegative=_ref.isNegative,unaryMinus=_ref.unaryMinus,matrix=_ref.matrix,Complex=_ref.Complex,BigNumber=_ref.BigNumber,Fraction=_ref.Fraction;return typed("cbrt",{number:_index.cbrtNumber,Complex:_cbrtComplex,"Complex, boolean":_cbrtComplex,BigNumber:function(x){return x.cbrt()},Unit:function(x){if(x.value&&(0,_is.isComplex)(x.value)){var result=x.clone();result.value=1;result=result.pow(1/3);result.value=_cbrtComplex(x.value);return result}if(result=
isNegative(x.value))x.value=unaryMinus(x.value);var third=(0,_is.isBigNumber)(x.value)?(new BigNumber(1)).div(3):(0,_is.isFraction)(x.value)?new Fraction(1,3):1/3;x=x.pow(third);result&&(x.value=unaryMinus(x.value));return x},"Array | Matrix":function(x){return(0,_collection.deepMap)(x,this,!0)}})});exports.createCbrt=require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$arithmetic$cbrt.js.map
