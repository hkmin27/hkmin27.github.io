{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm09.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/type/matrix/utils/algorithm09.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm09\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAlgorithm09 = void 0;\n\nvar _factory = require(\"../../../utils/factory.js\");\n\nvar _DimensionError = require(\"../../../error/DimensionError.js\");\n\nvar name = 'algorithm09';\nvar dependencies = ['typed', 'equalScalar'];\nvar createAlgorithm09 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      equalScalar = _ref.equalScalar;\n\n  /**\n   * Iterates over SparseMatrix A and invokes the callback function f(Aij, Bij).\n   * Callback function invoked NZA times, number of nonzero elements in A.\n   *\n   *\n   *          \u250c  f(Aij, Bij)  ; A(i,j) !== 0\n   * C(i,j) = \u2524\n   *          \u2514  0            ; otherwise\n   *\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  return function algorithm09(a, b, callback) {\n    // sparse matrix arrays\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var asize = a._size;\n    var adt = a._datatype; // sparse matrix arrays\n\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _DimensionError.DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cvalues = avalues && bvalues ? [] : undefined;\n    var cindex = [];\n    var cptr = []; // workspaces\n\n    var x = cvalues ? [] : undefined; // marks indicating we have a value in x for a given column\n\n    var w = []; // vars\n\n    var i, j, k, k0, k1; // loop columns\n\n    for (j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length; // column mark\n\n      var mark = j + 1; // check we need to process values\n\n      if (x) {\n        // loop B(:,j)\n        for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n          // row\n          i = bindex[k]; // update workspace\n\n          w[i] = mark;\n          x[i] = bvalues[k];\n        }\n      } // loop A(:,j)\n\n\n      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = aindex[k]; // check we need to process values\n\n        if (x) {\n          // b value @ i,j\n          var vb = w[i] === mark ? x[i] : zero; // invoke f\n\n          var vc = cf(avalues[k], vb); // check zero value\n\n          if (!eq(vc, zero)) {\n            // push index\n            cindex.push(i); // push value\n\n            cvalues.push(vc);\n          }\n        } else {\n          // push index\n          cindex.push(i);\n        }\n      }\n    } // update cptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\nexports.createAlgorithm09 = createAlgorithm09;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createAlgorithm09","_factory","_DimensionError","factory","name","dependencies","_ref","typed","equalScalar","algorithm09","a","b","callback","avalues","_values","aindex","_index","aptr","_ptr","asize","_size","adt","_datatype","bvalues","bindex","bptr","bsize","bdt","length","DimensionError","RangeError","rows","columns","eq","zero","cf","dt","find","convert","cvalues","undefined","cindex","cptr","x","w","j","k","mark","k0","k1","i","vc","vb","push","createSparseMatrix","values","index","ptr","size","datatype"]
}
