shadow$provide.module$node_modules$mathjs$lib$cjs$function$set$setIntersect=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createSetIntersect=void 0;var _array=require("module$node_modules$mathjs$lib$cjs$utils$array");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("setIntersect","typed size subset compareNatural Index DenseMatrix".split(" "),function(_ref){var typed=_ref.typed,size=_ref.size,subset=
_ref.subset,compareNatural=_ref.compareNatural,Index=_ref.Index,DenseMatrix=_ref.DenseMatrix;return typed("setIntersect",{"Array | Matrix, Array | Matrix":function(a1,a2){if(0===subset(size(a1),new Index(0))||0===subset(size(a2),new Index(0)))var result=[];else{var b1=(0,_array.identify)((0,_array.flatten)(Array.isArray(a1)?a1:a1.toArray()).sort(compareNatural)),b2=(0,_array.identify)((0,_array.flatten)(Array.isArray(a2)?a2:a2.toArray()).sort(compareNatural));result=[];for(var i=0;i<b1.length;i++)for(var j=
0;j<b2.length;j++)if(0===compareNatural(b1[i].value,b2[j].value)&&b1[i].identifier===b2[j].identifier){result.push(b1[i]);break}}return Array.isArray(a1)&&Array.isArray(a2)?(0,_array.generalize)(result):new DenseMatrix((0,_array.generalize)(result))}})});exports.createSetIntersect=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$set$setIntersect.js.map
