{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$set$setDistinct.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGxHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,iBAAR,CAA4B,IAAK,EAEjC,KAAIC,OAASP,OAAA,CAAQ,gDAAR,CAETQ,OAAAA,CAAWR,OAAA,CAAQ,kDAAR,CAIXM,OAAAA,CAAmC,CAAC,CAAA,CAAGE,MAASC,CAAAA,OAAb,EAF5BC,aAE4B,CADpBC,oDAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CACoB,CAA0C,QAAS,CAACC,IAAD,CAAO,CAAA,IAC3FC,MAAQD,IAAKC,CAAAA,KAD8E,CAE3FC,KAAOF,IAAKE,CAAAA,IAF+E,CAG3FC;AAASH,IAAKG,CAAAA,MAH6E,CAI3FC,eAAiBJ,IAAKI,CAAAA,cAJqE,CAK3FC,MAAQL,IAAKK,CAAAA,KAL8E,CAM3FC,YAAcN,IAAKM,CAAAA,WAqBvB,OAAOL,MAAA,CA7BEH,aA6BF,CAAY,CACjB,iBAAkBS,QAAoB,CAACC,CAAD,CAAI,CAGxC,GAAsC,CAAtC,GAAIL,MAAA,CAAOD,IAAA,CAAKM,CAAL,CAAP,CAAgB,IAAIH,KAAJ,CAAU,CAAV,CAAhB,CAAJ,CAEE,IAAAI,OAAS,EAFX,KAGO,CACL,IAAIC,EAAI,CAAC,CAAA,CAAGf,MAAOgB,CAAAA,OAAX,EAAoBC,KAAMC,CAAAA,OAAN,CAAcL,CAAd,CAAA,CAAmBA,CAAnB,CAAuBA,CAAEM,CAAAA,OAAF,EAA3C,CAAwDC,CAAAA,IAAxD,CAA6DX,cAA7D,CACRK,OAAA,CAAS,EACTA,OAAOO,CAAAA,IAAP,CAAYN,CAAA,CAAE,CAAF,CAAZ,CAEA,KAAK,IAAIO,EAAI,CAAb,CAAgBA,CAAhB,CAAoBP,CAAEQ,CAAAA,MAAtB,CAA8BD,CAAA,EAA9B,CACyC,CAAvC,GAAIb,cAAA,CAAeM,CAAA,CAAEO,CAAF,CAAf,CAAqBP,CAAA,CAAEO,CAAF,CAAM,CAAN,CAArB,CAAJ,EACER,MAAOO,CAAAA,IAAP,CAAYN,CAAA,CAAEO,CAAF,CAAZ,CAPC,CAaP,MAAIL,MAAMC,CAAAA,OAAN,CAAcL,CAAd,CAAJ,CACSC,MADT,CAKO,IAAIH,WAAJ,CAAgBG,MAAhB,CAxBiC,CADzB,CAAZ,CA3BwF,CAA1D,CAwDvCnB,QAAQI,CAAAA,iBAAR,CAA4BA,MAtE4F;",
"sources":["node_modules/mathjs/lib/cjs/function/set/setDistinct.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$set$setDistinct\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSetDistinct = void 0;\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'setDistinct';\nvar dependencies = ['typed', 'size', 'subset', 'compareNatural', 'Index', 'DenseMatrix'];\nvar createSetDistinct = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      size = _ref.size,\n      subset = _ref.subset,\n      compareNatural = _ref.compareNatural,\n      Index = _ref.Index,\n      DenseMatrix = _ref.DenseMatrix;\n\n  /**\n   * Collect the distinct elements of a multiset.\n   * A multi-dimension array will be converted to a single-dimension array before the operation.\n   *\n   * Syntax:\n   *\n   *    math.setDistinct(set)\n   *\n   * Examples:\n   *\n   *    math.setDistinct([1, 1, 1, 2, 2, 3])        // returns [1, 2, 3]\n   *\n   * See also:\n   *\n   *    setMultiplicity\n   *\n   * @param {Array | Matrix}    a  A multiset\n   * @return {Array | Matrix}    A set containing the distinc elements of the multiset\n   */\n  return typed(name, {\n    'Array | Matrix': function ArrayMatrix(a) {\n      var result;\n\n      if (subset(size(a), new Index(0)) === 0) {\n        // if empty, return empty\n        result = [];\n      } else {\n        var b = (0, _array.flatten)(Array.isArray(a) ? a : a.toArray()).sort(compareNatural);\n        result = [];\n        result.push(b[0]);\n\n        for (var i = 1; i < b.length; i++) {\n          if (compareNatural(b[i], b[i - 1]) !== 0) {\n            result.push(b[i]);\n          }\n        }\n      } // return an array, if the input was an array\n\n\n      if (Array.isArray(a)) {\n        return result;\n      } // return a matrix otherwise\n\n\n      return new DenseMatrix(result);\n    }\n  });\n});\nexports.createSetDistinct = createSetDistinct;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createSetDistinct","_array","_factory","factory","name","dependencies","_ref","typed","size","subset","compareNatural","Index","DenseMatrix","ArrayMatrix","a","result","b","flatten","Array","isArray","toArray","sort","push","i","length"]
}
