shadow$provide.module$node_modules$mathjs$lib$cjs$type$chain$Chain=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createChainClass=void 0;var _is=require("module$node_modules$mathjs$lib$cjs$utils$is"),_string=require("module$node_modules$mathjs$lib$cjs$utils$string"),_object=require("module$node_modules$mathjs$lib$cjs$utils$object");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("Chain",["?on","math"],
function(_ref){function Chain(value){if(!(this instanceof Chain))throw new SyntaxError("Constructor must be called with the new operator");(0,_is.isChain)(value)?this.value=value.value:this.value=value}function createLazyProxy(name,resolver){(0,_object.lazy)(Chain.prototype,name,function(){var fn=resolver();if("function"===typeof fn)return chainify(fn)})}function chainify(fn){return function(){for(var args=[this.value],i=0;i<arguments.length;i++)args[i+1]=arguments[i];return new Chain(fn.apply(fn,
args))}}var on=_ref.on;_ref=_ref.math;Chain.prototype.type="Chain";Chain.prototype.isChain=!0;Chain.prototype.done=function(){return this.value};Chain.prototype.valueOf=function(){return this.value};Chain.prototype.toString=function(){return(0,_string.format)(this.value)};Chain.prototype.toJSON=function(){return{mathjs:"Chain",value:this.value}};Chain.fromJSON=function(json){return new Chain(json.value)};Chain.createProxy=function(arg0,arg1){if("string"===typeof arg0)"function"===typeof arg1&&(Chain.prototype[arg0]=
chainify(arg1));else{arg1=function(_name){(0,_object.hasOwnProperty)(arg0,_name)&&void 0===excludedNames[_name]&&createLazyProxy(_name,function(){return arg0[_name]})};for(var _name$jscomp$0 in arg0)arg1(_name$jscomp$0)}};var excludedNames={expression:!0,docs:!0,type:!0,classes:!0,json:!0,error:!0,isChain:!0};Chain.createProxy(_ref);on&&on("import",function(name,resolver,path){path||createLazyProxy(name,resolver)});return Chain},{isClass:!0});exports.createChainClass=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$type$chain$Chain.js.map
