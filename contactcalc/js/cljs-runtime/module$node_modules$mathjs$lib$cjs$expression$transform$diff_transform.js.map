{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$transform$diff_transform.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,sEAAA,CAA2F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGnIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,mBAAR,CAA8B,IAAK,EAE/BC,OAAAA,CAAWP,OAAA,CAAQ,kDAAR,CAEf,KAAIQ,gBAAkBR,OAAA,CAAQ,8EAAR,CAAtB,CAEIS,MAAQT,OAAA,CAAQ,yDAAR,CAFZ,CAIIU,mBAAqBV,OAAA,CAAQ,iFAAR,CAIrBM;OAAAA,CAAqC,CAAC,CAAA,CAAGC,MAASI,CAAAA,OAAb,EAF9BC,MAE8B,CADtBC,CAAC,OAADA,CAAU,QAAVA,CAAoB,UAApBA,CAAgC,QAAhCA,CAA0C,WAA1CA,CACsB,CAA0C,QAAS,CAACC,IAAD,CAAO,CAAA,IAC7FC,MAAQD,IAAKC,CAAAA,KADgF,CAE7FC,OAASF,IAAKE,CAAAA,MAF+E,CAG7FC,SAAWH,IAAKG,CAAAA,QAH6E,CAI7FC,OAASJ,IAAKI,CAAAA,MACdC,KAAAA,CAAYL,IAAKK,CAAAA,SACrB,KAAIC,KAAO,CAAC,CAAA,CAAGX,KAAMY,CAAAA,UAAV,EAAsB,CAC/BN,MAAOA,KADwB,CAE/BC,OAAQA,MAFuB,CAG/BC,SAAUA,QAHqB,CAI/BC,OAAQA,MAJuB,CAK/BC,UAAWA,IALoB,CAAtB,CAcX,OAAOJ,MAAA,CAtBEH,MAsBF,CAAY,CACjB,SAAUU,QAAY,CAACC,IAAD,CAAO,CAC3BA,IAAA,CAAO,CAAC,CAAA,CAAGb,kBAAmBc,CAAAA,iBAAvB,EAA0CD,IAA1C,CAEP,IAAI,CACF,MAAOH,KAAKK,CAAAA,KAAL,CAAW,IAAX,CAAiBF,IAAjB,CADL,CAEF,MAAOG,GAAP,CAAY,CACZ,KAAM,CAAC,CAAA,CAAGlB,eAAgBmB,CAAAA,cAApB,EAAoCD,GAApC,CAAN,CADY,CALa,CADZ,CAAZ,CApB0F,CAA1D,CA+BtC,CACDE,oBAAqB,CAAA,CADpB,CA/BsC,CAkCzC1B;OAAQI,CAAAA,mBAAR,CAA8BA,OApDqG;",
"sources":["node_modules/mathjs/lib/cjs/expression/transform/diff.transform.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$transform$diff_transform\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDiffTransform = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _errorTransform = require(\"./utils/errorTransform.js\");\n\nvar _diff = require(\"../../function/matrix/diff.js\");\n\nvar _lastDimToZeroBase = require(\"./utils/lastDimToZeroBase.js\");\n\nvar name = 'diff';\nvar dependencies = ['typed', 'matrix', 'subtract', 'number', 'bignumber'];\nvar createDiffTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      subtract = _ref.subtract,\n      number = _ref.number,\n      bignumber = _ref.bignumber;\n  var diff = (0, _diff.createDiff)({\n    typed: typed,\n    matrix: matrix,\n    subtract: subtract,\n    number: number,\n    bignumber: bignumber\n  });\n  /**\n   * Attach a transform function to math.diff\n   * Adds a property transform containing the transform function.\n   *\n   * This transform creates a range which includes the end value\n   */\n\n  return typed(name, {\n    '...any': function any(args) {\n      args = (0, _lastDimToZeroBase.lastDimToZeroBase)(args);\n\n      try {\n        return diff.apply(null, args);\n      } catch (err) {\n        throw (0, _errorTransform.errorTransform)(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});\nexports.createDiffTransform = createDiffTransform;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createDiffTransform","_factory","_errorTransform","_diff","_lastDimToZeroBase","factory","name","dependencies","_ref","typed","matrix","subtract","number","bignumber","diff","createDiff","any","args","lastDimToZeroBase","apply","err","errorTransform","isTransformFunction"]
}
