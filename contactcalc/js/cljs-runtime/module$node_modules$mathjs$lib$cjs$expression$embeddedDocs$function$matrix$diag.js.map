{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$matrix$diag.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,+EAAA,CAAoG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG5IC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,QAAR,CAReA,CACbC,KAAM,MADOD,CAEbE,SAAU,QAFGF,CAGbG,OAAQ,CAAC,SAAD,CAAY,YAAZ,CAHKH,CAIbI,YAAa,2aAJAJ;AAKbK,SAAU,CAAC,WAAD,CAAc,cAAd,CAA8B,oCAA9B,CAAiE,SAAjE,CALGL,CAMbM,QAAS,8EAAA,CAAA,KAAA,CAAA,GAAA,CANIN,CAP6H;",
"sources":["node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/matrix/diag.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$matrix$diag\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diagDocs = void 0;\nvar diagDocs = {\n  name: 'diag',\n  category: 'Matrix',\n  syntax: ['diag(x)', 'diag(x, k)'],\n  description: 'Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.',\n  examples: ['diag(1:3)', 'diag(1:3, 1)', 'a = [1, 2, 3; 4, 5, 6; 7, 8, 9]', 'diag(a)'],\n  seealso: ['concat', 'det', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']\n};\nexports.diagDocs = diagDocs;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","diagDocs","name","category","syntax","description","examples","seealso"]
}
