{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm03.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/type/matrix/utils/algorithm03.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm03\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAlgorithm03 = void 0;\n\nvar _factory = require(\"../../../utils/factory.js\");\n\nvar _DimensionError = require(\"../../../error/DimensionError.js\");\n\nvar name = 'algorithm03';\nvar dependencies = ['typed'];\nvar createAlgorithm03 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Iterates over SparseMatrix items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked M*N times.\n   *\n   *\n   *          \u250c  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = \u2524\n   *          \u2514  f(Dij, 0)    ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (C)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  return function algorithm03(denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype; // sparse matrix arrays\n\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _DimensionError.DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // sparse matrix cannot be a Pattern matrix\n\n\n    if (!bvalues) {\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result (DenseMatrix)\n\n\n    var cdata = []; // initialize dense matrix\n\n    for (var z = 0; z < rows; z++) {\n      // initialize row\n      cdata[z] = [];\n    } // workspace\n\n\n    var x = []; // marks indicating we have a value in x for a given column\n\n    var w = []; // loop columns in b\n\n    for (var j = 0; j < columns; j++) {\n      // column mark\n      var mark = j + 1; // values in column j\n\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = bindex[k]; // update workspace\n\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]);\n        w[i] = mark;\n      } // process workspace\n\n\n      for (var y = 0; y < rows; y++) {\n        // check we have a calculated value for current row\n        if (w[y] === mark) {\n          // use calculated value\n          cdata[y][j] = x[y];\n        } else {\n          // calculate value\n          cdata[y][j] = inverse ? cf(zero, adata[y][j]) : cf(adata[y][j], zero);\n        }\n      }\n    } // return dense matrix\n\n\n    return denseMatrix.createDenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\nexports.createAlgorithm03 = createAlgorithm03;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createAlgorithm03","_factory","_DimensionError","factory","name","dependencies","_ref","typed","algorithm03","denseMatrix","sparseMatrix","callback","inverse","adata","_data","asize","_size","adt","_datatype","bvalues","_values","bindex","_index","bptr","_ptr","bsize","bdt","length","DimensionError","RangeError","Error","rows","columns","zero","cf","dt","convert","find","cdata","z","x","w","j","mark","k1","k","k0","i","y","createDenseMatrix","data","size","datatype"]
}
