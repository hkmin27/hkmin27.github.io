{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$type$unit$physicalConstants.js",
"lineCount":15,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/type/unit/physicalConstants.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$type$unit$physicalConstants\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPlanckTemperature = exports.createPlanckCharge = exports.createPlanckTime = exports.createPlanckMass = exports.createPlanckLength = exports.createGravity = exports.createMolarMassC12 = exports.createMolarMass = exports.createWienDisplacement = exports.createStefanBoltzmann = exports.createSecondRadiation = exports.createSackurTetrode = exports.createMolarVolume = exports.createMolarPlanckConstant = exports.createGasConstant = exports.createLoschmidt = exports.createFirstRadiation = exports.createFaraday = exports.createBoltzmann = exports.createAvogadro = exports.createAtomicMass = exports.createEfimovFactor = exports.createWeakMixingAngle = exports.createThomsonCrossSection = exports.createRydberg = exports.createQuantumOfCirculation = exports.createNeutronMass = exports.createDeuteronMass = exports.createProtonMass = exports.createHartreeEnergy = exports.createFineStructure = exports.createFermiCoupling = exports.createElectronMass = exports.createClassicalElectronRadius = exports.createBohrRadius = exports.createJosephson = exports.createKlitzing = exports.createNuclearMagneton = exports.createMagneticFluxQuantum = exports.createInverseConductanceQuantum = exports.createConductanceQuantum = exports.createBohrMagneton = exports.createElementaryCharge = exports.createCoulomb = exports.createVacuumImpedance = exports.createElectricConstant = exports.createMagneticConstant = exports.createReducedPlanckConstant = exports.createPlanckConstant = exports.createGravitationConstant = exports.createSpeedOfLight = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\n// Source: https://en.wikipedia.org/wiki/Physical_constant\n// Universal constants\nvar createSpeedOfLight = /* #__PURE__ */unitFactory('speedOfLight', '299792458', 'm s^-1');\nexports.createSpeedOfLight = createSpeedOfLight;\nvar createGravitationConstant = /* #__PURE__ */unitFactory('gravitationConstant', '6.67430e-11', 'm^3 kg^-1 s^-2');\nexports.createGravitationConstant = createGravitationConstant;\nvar createPlanckConstant = /* #__PURE__ */unitFactory('planckConstant', '6.62607015e-34', 'J s');\nexports.createPlanckConstant = createPlanckConstant;\nvar createReducedPlanckConstant = /* #__PURE__ */unitFactory('reducedPlanckConstant', '1.0545718176461565e-34', 'J s'); // Electromagnetic constants\n\nexports.createReducedPlanckConstant = createReducedPlanckConstant;\nvar createMagneticConstant = /* #__PURE__ */unitFactory('magneticConstant', '1.25663706212e-6', 'N A^-2');\nexports.createMagneticConstant = createMagneticConstant;\nvar createElectricConstant = /* #__PURE__ */unitFactory('electricConstant', '8.8541878128e-12', 'F m^-1');\nexports.createElectricConstant = createElectricConstant;\nvar createVacuumImpedance = /* #__PURE__ */unitFactory('vacuumImpedance', '376.730313667', 'ohm');\nexports.createVacuumImpedance = createVacuumImpedance;\nvar createCoulomb = /* #__PURE__ */unitFactory('coulomb', '8.987551792261171e9', 'N m^2 C^-2');\nexports.createCoulomb = createCoulomb;\nvar createElementaryCharge = /* #__PURE__ */unitFactory('elementaryCharge', '1.602176634e-19', 'C');\nexports.createElementaryCharge = createElementaryCharge;\nvar createBohrMagneton = /* #__PURE__ */unitFactory('bohrMagneton', '9.2740100783e-24', 'J T^-1');\nexports.createBohrMagneton = createBohrMagneton;\nvar createConductanceQuantum = /* #__PURE__ */unitFactory('conductanceQuantum', '7.748091729863649e-5', 'S');\nexports.createConductanceQuantum = createConductanceQuantum;\nvar createInverseConductanceQuantum = /* #__PURE__ */unitFactory('inverseConductanceQuantum', '12906.403729652257', 'ohm');\nexports.createInverseConductanceQuantum = createInverseConductanceQuantum;\nvar createMagneticFluxQuantum = /* #__PURE__ */unitFactory('magneticFluxQuantum', '2.0678338484619295e-15', 'Wb');\nexports.createMagneticFluxQuantum = createMagneticFluxQuantum;\nvar createNuclearMagneton = /* #__PURE__ */unitFactory('nuclearMagneton', '5.0507837461e-27', 'J T^-1');\nexports.createNuclearMagneton = createNuclearMagneton;\nvar createKlitzing = /* #__PURE__ */unitFactory('klitzing', '25812.807459304513', 'ohm');\nexports.createKlitzing = createKlitzing;\nvar createJosephson = /* #__PURE__ */unitFactory('josephson', '4.835978484169836e14 Hz V', 'Hz V^-1'); // TODO: support for Hz needed\n// Atomic and nuclear constants\n\nexports.createJosephson = createJosephson;\nvar createBohrRadius = /* #__PURE__ */unitFactory('bohrRadius', '5.29177210903e-11', 'm');\nexports.createBohrRadius = createBohrRadius;\nvar createClassicalElectronRadius = /* #__PURE__ */unitFactory('classicalElectronRadius', '2.8179403262e-15', 'm');\nexports.createClassicalElectronRadius = createClassicalElectronRadius;\nvar createElectronMass = /* #__PURE__ */unitFactory('electronMass', '9.1093837015e-31', 'kg');\nexports.createElectronMass = createElectronMass;\nvar createFermiCoupling = /* #__PURE__ */unitFactory('fermiCoupling', '1.1663787e-5', 'GeV^-2');\nexports.createFermiCoupling = createFermiCoupling;\nvar createFineStructure = numberFactory('fineStructure', 7.2973525693e-3);\nexports.createFineStructure = createFineStructure;\nvar createHartreeEnergy = /* #__PURE__ */unitFactory('hartreeEnergy', '4.3597447222071e-18', 'J');\nexports.createHartreeEnergy = createHartreeEnergy;\nvar createProtonMass = /* #__PURE__ */unitFactory('protonMass', '1.67262192369e-27', 'kg');\nexports.createProtonMass = createProtonMass;\nvar createDeuteronMass = /* #__PURE__ */unitFactory('deuteronMass', '3.3435830926e-27', 'kg');\nexports.createDeuteronMass = createDeuteronMass;\nvar createNeutronMass = /* #__PURE__ */unitFactory('neutronMass', '1.6749271613e-27', 'kg');\nexports.createNeutronMass = createNeutronMass;\nvar createQuantumOfCirculation = /* #__PURE__ */unitFactory('quantumOfCirculation', '3.6369475516e-4', 'm^2 s^-1');\nexports.createQuantumOfCirculation = createQuantumOfCirculation;\nvar createRydberg = /* #__PURE__ */unitFactory('rydberg', '10973731.568160', 'm^-1');\nexports.createRydberg = createRydberg;\nvar createThomsonCrossSection = /* #__PURE__ */unitFactory('thomsonCrossSection', '6.6524587321e-29', 'm^2');\nexports.createThomsonCrossSection = createThomsonCrossSection;\nvar createWeakMixingAngle = numberFactory('weakMixingAngle', 0.22290);\nexports.createWeakMixingAngle = createWeakMixingAngle;\nvar createEfimovFactor = numberFactory('efimovFactor', 22.7); // Physico-chemical constants\n\nexports.createEfimovFactor = createEfimovFactor;\nvar createAtomicMass = /* #__PURE__ */unitFactory('atomicMass', '1.66053906660e-27', 'kg');\nexports.createAtomicMass = createAtomicMass;\nvar createAvogadro = /* #__PURE__ */unitFactory('avogadro', '6.02214076e23', 'mol^-1');\nexports.createAvogadro = createAvogadro;\nvar createBoltzmann = /* #__PURE__ */unitFactory('boltzmann', '1.380649e-23', 'J K^-1');\nexports.createBoltzmann = createBoltzmann;\nvar createFaraday = /* #__PURE__ */unitFactory('faraday', '96485.33212331001', 'C mol^-1');\nexports.createFaraday = createFaraday;\nvar createFirstRadiation = /* #__PURE__ */unitFactory('firstRadiation', '3.7417718521927573e-16', 'W m^2'); // export const createSpectralRadiance = /* #__PURE__ */ unitFactory('spectralRadiance', '1.1910429723971881e-16', 'W m^2 sr^-1') // TODO spectralRadiance\n\nexports.createFirstRadiation = createFirstRadiation;\nvar createLoschmidt = /* #__PURE__ */unitFactory('loschmidt', '2.686780111798444e25', 'm^-3');\nexports.createLoschmidt = createLoschmidt;\nvar createGasConstant = /* #__PURE__ */unitFactory('gasConstant', '8.31446261815324', 'J K^-1 mol^-1');\nexports.createGasConstant = createGasConstant;\nvar createMolarPlanckConstant = /* #__PURE__ */unitFactory('molarPlanckConstant', '3.990312712893431e-10', 'J s mol^-1');\nexports.createMolarPlanckConstant = createMolarPlanckConstant;\nvar createMolarVolume = /* #__PURE__ */unitFactory('molarVolume', '0.022413969545014137', 'm^3 mol^-1');\nexports.createMolarVolume = createMolarVolume;\nvar createSackurTetrode = numberFactory('sackurTetrode', -1.16487052358);\nexports.createSackurTetrode = createSackurTetrode;\nvar createSecondRadiation = /* #__PURE__ */unitFactory('secondRadiation', '0.014387768775039337', 'm K');\nexports.createSecondRadiation = createSecondRadiation;\nvar createStefanBoltzmann = /* #__PURE__ */unitFactory('stefanBoltzmann', '5.67037441918443e-8', 'W m^-2 K^-4');\nexports.createStefanBoltzmann = createStefanBoltzmann;\nvar createWienDisplacement = /* #__PURE__ */unitFactory('wienDisplacement', '2.897771955e-3', 'm K'); // Adopted values\n\nexports.createWienDisplacement = createWienDisplacement;\nvar createMolarMass = /* #__PURE__ */unitFactory('molarMass', '0.99999999965e-3', 'kg mol^-1');\nexports.createMolarMass = createMolarMass;\nvar createMolarMassC12 = /* #__PURE__ */unitFactory('molarMassC12', '11.9999999958e-3', 'kg mol^-1');\nexports.createMolarMassC12 = createMolarMassC12;\nvar createGravity = /* #__PURE__ */unitFactory('gravity', '9.80665', 'm s^-2'); // atm is defined in Unit.js\n// Natural units\n\nexports.createGravity = createGravity;\nvar createPlanckLength = /* #__PURE__ */unitFactory('planckLength', '1.616255e-35', 'm');\nexports.createPlanckLength = createPlanckLength;\nvar createPlanckMass = /* #__PURE__ */unitFactory('planckMass', '2.176435e-8', 'kg');\nexports.createPlanckMass = createPlanckMass;\nvar createPlanckTime = /* #__PURE__ */unitFactory('planckTime', '5.391245e-44', 's');\nexports.createPlanckTime = createPlanckTime;\nvar createPlanckCharge = /* #__PURE__ */unitFactory('planckCharge', '1.87554603778e-18', 'C');\nexports.createPlanckCharge = createPlanckCharge;\nvar createPlanckTemperature = /* #__PURE__ */unitFactory('planckTemperature', '1.416785e+32', 'K'); // helper function to create a factory function which creates a physical constant,\n// a Unit with either a number value or a BigNumber value depending on the configuration\n\nexports.createPlanckTemperature = createPlanckTemperature;\n\nfunction unitFactory(name, valueStr, unitStr) {\n  var dependencies = ['config', 'Unit', 'BigNumber'];\n  return (0, _factory.factory)(name, dependencies, function (_ref) {\n    var config = _ref.config,\n        Unit = _ref.Unit,\n        BigNumber = _ref.BigNumber;\n    // Note that we can parse into number or BigNumber.\n    // We do not parse into Fractions as that doesn't make sense: we would lose precision of the values\n    // Therefore we dont use Unit.parse()\n    var value = config.number === 'BigNumber' ? new BigNumber(valueStr) : parseFloat(valueStr);\n    var unit = new Unit(value, unitStr);\n    unit.fixPrefix = true;\n    return unit;\n  });\n} // helper function to create a factory function which creates a numeric constant,\n// either a number or BigNumber depending on the configuration\n\n\nfunction numberFactory(name, value) {\n  var dependencies = ['config', 'BigNumber'];\n  return (0, _factory.factory)(name, dependencies, function (_ref2) {\n    var config = _ref2.config,\n        BigNumber = _ref2.BigNumber;\n    return config.number === 'BigNumber' ? new BigNumber(value) : value;\n  });\n}\n};"],
"names":["shadow$provide","global","require","module","exports","unitFactory","name","valueStr","unitStr","_factory","factory","dependencies","_ref","Unit","BigNumber","value","config","number","parseFloat","unit","fixPrefix","numberFactory","_ref2","Object","defineProperty","createPlanckTemperature","createPlanckCharge","createPlanckTime","createPlanckMass","createPlanckLength","createGravity","createMolarMassC12","createMolarMass","createWienDisplacement","createStefanBoltzmann","createSecondRadiation","createSackurTetrode","createMolarVolume","createMolarPlanckConstant","createGasConstant","createLoschmidt","createFirstRadiation","createFaraday","createBoltzmann","createAvogadro","createAtomicMass","createEfimovFactor","createWeakMixingAngle","createThomsonCrossSection","createRydberg","createQuantumOfCirculation","createNeutronMass","createDeuteronMass","createProtonMass","createHartreeEnergy","createFineStructure","createFermiCoupling","createElectronMass","createClassicalElectronRadius","createBohrRadius","createJosephson","createKlitzing","createNuclearMagneton","createMagneticFluxQuantum","createInverseConductanceQuantum","createConductanceQuantum","createBohrMagneton","createElementaryCharge","createCoulomb","createVacuumImpedance","createElectricConstant","createMagneticConstant","createReducedPlanckConstant","createPlanckConstant","createGravitationConstant","createSpeedOfLight"]
}
