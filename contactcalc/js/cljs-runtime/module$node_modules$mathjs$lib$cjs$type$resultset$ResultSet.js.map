{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$type$resultset$ResultSet.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGxHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,eAAR,CAA0B,IAAK,EAE3BC,OAAAA,CAAWP,OAAA,CAAQ,kDAAR,CAIXM,OAAAA,CAAiC,CAAC,CAAA,CAAGC,MAASC,CAAAA,OAAb,EAF1BC,WAE0B,CADlBC,EACkB,CAA0C,QAAS,EAAG,CAOzFC,QAASA,UAAS,CAACC,OAAD,CAAU,CAC1B,GAAI,EAAE,IAAF,WAAkBD,UAAlB,CAAJ,CACE,KAAM,KAAIE,WAAJ,CAAgB,kDAAhB,CAAN,CAGF,IAAKD,CAAAA,OAAL,CAAeA,OAAf,EAA0B,EALA,CAY5BD,SAAUG,CAAAA,SAAUC,CAAAA,IAApB;AAA2B,WAC3BJ,UAAUG,CAAAA,SAAUE,CAAAA,WAApB,CAAkC,CAAA,CAOlCL,UAAUG,CAAAA,SAAUG,CAAAA,OAApB,CAA8BC,QAAS,EAAG,CACxC,MAAO,KAAKN,CAAAA,OAD4B,CAU1CD,UAAUG,CAAAA,SAAUK,CAAAA,QAApB,CAA+BC,QAAS,EAAG,CACzC,MAAO,GAAP,CAAa,IAAKR,CAAAA,OAAQS,CAAAA,IAAb,CAAkB,IAAlB,CAAb,CAAuC,GADE,CAW3CV,UAAUG,CAAAA,SAAUQ,CAAAA,MAApB,CAA6BC,QAAS,EAAG,CACvC,MAAO,CACLC,OAAQ,WADH,CAELZ,QAAS,IAAKA,CAAAA,OAFT,CADgC,CAezCD,UAAUc,CAAAA,QAAV,CAAqBC,QAAS,CAACC,IAAD,CAAO,CACnC,MAAO,KAAIhB,SAAJ,CAAcgB,IAAKf,CAAAA,OAAnB,CAD4B,CAIrC,OAAOD,UAnEkF,CAAtD,CAoElC,CACDiB,QAAS,CAAA,CADR,CApEkC,CAuErC1B,QAAQI,CAAAA,eAAR,CAA0BA,MAnF8F;",
"sources":["node_modules/mathjs/lib/cjs/type/resultset/ResultSet.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$type$resultset$ResultSet\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createResultSet = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'ResultSet';\nvar dependencies = [];\nvar createResultSet = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function () {\n  /**\n   * A ResultSet contains a list or results\n   * @class ResultSet\n   * @param {Array} entries\n   * @constructor ResultSet\n   */\n  function ResultSet(entries) {\n    if (!(this instanceof ResultSet)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.entries = entries || [];\n  }\n  /**\n   * Attach type information\n   */\n\n\n  ResultSet.prototype.type = 'ResultSet';\n  ResultSet.prototype.isResultSet = true;\n  /**\n   * Returns the array with results hold by this ResultSet\n   * @memberof ResultSet\n   * @returns {Array} entries\n   */\n\n  ResultSet.prototype.valueOf = function () {\n    return this.entries;\n  };\n  /**\n   * Returns the stringified results of the ResultSet\n   * @memberof ResultSet\n   * @returns {string} string\n   */\n\n\n  ResultSet.prototype.toString = function () {\n    return '[' + this.entries.join(', ') + ']';\n  };\n  /**\n   * Get a JSON representation of the ResultSet\n   * @memberof ResultSet\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n   */\n\n\n  ResultSet.prototype.toJSON = function () {\n    return {\n      mathjs: 'ResultSet',\n      entries: this.entries\n    };\n  };\n  /**\n   * Instantiate a ResultSet from a JSON object\n   * @memberof ResultSet\n   * @param {Object} json  A JSON object structured as:\n   *                       `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n   * @return {ResultSet}\n   */\n\n\n  ResultSet.fromJSON = function (json) {\n    return new ResultSet(json.entries);\n  };\n\n  return ResultSet;\n}, {\n  isClass: true\n});\nexports.createResultSet = createResultSet;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createResultSet","_factory","factory","name","dependencies","ResultSet","entries","SyntaxError","prototype","type","isResultSet","valueOf","ResultSet.prototype.valueOf","toString","ResultSet.prototype.toString","join","toJSON","ResultSet.prototype.toJSON","mathjs","fromJSON","ResultSet.fromJSON","json","isClass"]
}
