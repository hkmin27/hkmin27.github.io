{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$core$typed.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,qEAAA,CAA0F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,SAAR,CARgBA,CACdC,KAAM,OADQD,CAEdE,SAAU,MAFIF,CAGdG,OAAQ,CAAC,mBAAD,CAAsB,yBAAtB,CAHMH,CAIdI,YAAa,0BAJCJ,CAKdK,SAAU,CAAC,sDAAD,CAAmD,WAAnD,CAAgE,iBAAhE,CALIL,CAMdM,QAAS,EANKN,CAPkH;",
"sources":["node_modules/mathjs/lib/cjs/expression/embeddedDocs/core/typed.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$core$typed\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.typedDocs = void 0;\nvar typedDocs = {\n  name: 'typed',\n  category: 'Core',\n  syntax: ['typed(signatures)', 'typed(name, signatures)'],\n  description: 'Create a typed function.',\n  examples: ['double = typed({ \"number, number\": f(x)=x+x })', 'double(2)', 'double(\"hello\")'],\n  seealso: []\n};\nexports.typedDocs = typedDocs;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","typedDocs","name","category","syntax","description","examples","seealso"]
}
