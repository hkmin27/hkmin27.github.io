{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$probability$random.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/function/probability/random.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$probability$random\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRandomNumber = exports.createRandom = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _is = require(\"../../utils/is.js\");\n\nvar _seededRNG = require(\"./util/seededRNG.js\");\n\nvar _randomMatrix2 = require(\"./util/randomMatrix.js\");\n\nvar name = 'random';\nvar dependencies = ['typed', 'config', '?on'];\nvar createRandom = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      on = _ref.on;\n  // seeded pseudo random number generator\n  var rng = (0, _seededRNG.createRng)(config.randomSeed);\n\n  if (on) {\n    on('config', function (curr, prev) {\n      if (curr.randomSeed !== prev.randomSeed) {\n        rng = (0, _seededRNG.createRng)(curr.randomSeed);\n      }\n    });\n  }\n  /**\n   * Return a random number larger or equal to `min` and smaller than `max`\n   * using a uniform distribution.\n   *\n   * Syntax:\n   *\n   *     math.random()                // generate a random number between 0 and 1\n   *     math.random(max)             // generate a random number between 0 and max\n   *     math.random(min, max)        // generate a random number between min and max\n   *     math.random(size)            // generate a matrix with random numbers between 0 and 1\n   *     math.random(size, max)       // generate a matrix with random numbers between 0 and max\n   *     math.random(size, min, max)  // generate a matrix with random numbers between min and max\n   *\n   * Examples:\n   *\n   *     math.random()       // returns a random number between 0 and 1\n   *     math.random(100)    // returns a random number between 0 and 100\n   *     math.random(30, 40) // returns a random number between 30 and 40\n   *     math.random([2, 3]) // returns a 2x3 matrix with random numbers between 0 and 1\n   *\n   * See also:\n   *\n   *     randomInt, pickRandom\n   *\n   * @param {Array | Matrix} [size] If provided, an array or matrix with given\n   *                                size and filled with random values is returned\n   * @param {number} [min]  Minimum boundary for the random value, included\n   * @param {number} [max]  Maximum boundary for the random value, excluded\n   * @return {number | Array | Matrix} A random number\n   */\n\n\n  return typed(name, {\n    '': function _() {\n      return _random(0, 1);\n    },\n    number: function number(max) {\n      return _random(0, max);\n    },\n    'number, number': function numberNumber(min, max) {\n      return _random(min, max);\n    },\n    'Array | Matrix': function ArrayMatrix(size) {\n      return _randomMatrix(size, 0, 1);\n    },\n    'Array | Matrix, number': function ArrayMatrixNumber(size, max) {\n      return _randomMatrix(size, 0, max);\n    },\n    'Array | Matrix, number, number': function ArrayMatrixNumberNumber(size, min, max) {\n      return _randomMatrix(size, min, max);\n    }\n  });\n\n  function _randomMatrix(size, min, max) {\n    var res = (0, _randomMatrix2.randomMatrix)(size.valueOf(), function () {\n      return _random(min, max);\n    });\n    return (0, _is.isMatrix)(size) ? size.create(res) : res;\n  }\n\n  function _random(min, max) {\n    return min + rng() * (max - min);\n  }\n}); // number only implementation of random, no matrix support\n// TODO: there is quite some duplicate code in both createRandom and createRandomNumber, can we improve that?\n\nexports.createRandom = createRandom;\nvar createRandomNumber = /* #__PURE__ */(0, _factory.factory)(name, ['typed', 'config', '?on'], function (_ref2) {\n  var typed = _ref2.typed,\n      config = _ref2.config,\n      on = _ref2.on,\n      matrix = _ref2.matrix;\n  // seeded pseudo random number generator1\n  var rng = (0, _seededRNG.createRng)(config.randomSeed);\n\n  if (on) {\n    on('config', function (curr, prev) {\n      if (curr.randomSeed !== prev.randomSeed) {\n        rng = (0, _seededRNG.createRng)(curr.randomSeed);\n      }\n    });\n  }\n\n  return typed(name, {\n    '': function _() {\n      return _random(0, 1);\n    },\n    number: function number(max) {\n      return _random(0, max);\n    },\n    'number, number': function numberNumber(min, max) {\n      return _random(min, max);\n    }\n  });\n\n  function _random(min, max) {\n    return min + rng() * (max - min);\n  }\n});\nexports.createRandomNumber = createRandomNumber;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createRandomNumber","createRandom","_factory","_is","_seededRNG","_randomMatrix2","factory","name","dependencies","_ref","_randomMatrix","size","min","max","res","randomMatrix","valueOf","_random","isMatrix","create","rng","typed","config","on","createRng","randomSeed","curr","prev","_","number","numberNumber","ArrayMatrix","ArrayMatrixNumber","ArrayMatrixNumberNumber","_ref2"]
}
