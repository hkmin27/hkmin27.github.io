{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$trigonometry$atan2.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/function/trigonometry/atan2.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$trigonometry$atan2\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAtan2 = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm02.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm03.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm09.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm12.js\");\n\nvar _algorithm6 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm7 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar name = 'atan2';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber', 'DenseMatrix'];\nvar createAtan2 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      BigNumber = _ref.BigNumber,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm03 = (0, _algorithm2.createAlgorithm03)({\n    typed: typed\n  });\n  var algorithm09 = (0, _algorithm3.createAlgorithm09)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm11 = (0, _algorithm4.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm12 = (0, _algorithm5.createAlgorithm12)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = (0, _algorithm6.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm7.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Calculate the inverse tangent function with two arguments, y/x.\n   * By providing two arguments, the right quadrant of the computed angle can be\n   * determined.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.atan2(y, x)\n   *\n   * Examples:\n   *\n   *    math.atan2(2, 2) / math.pi       // returns number 0.25\n   *\n   *    const angle = math.unit(60, 'deg') // returns Unit 60 deg\n   *    const x = math.cos(angle)\n   *    const y = math.sin(angle)\n   *\n   *    math.atan(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    tan, atan, sin, cos\n   *\n   * @param {number | Array | Matrix} y  Second dimension\n   * @param {number | Array | Matrix} x  First dimension\n   * @return {number | Array | Matrix} Four-quadrant inverse tangent\n   */\n\n  return typed(name, {\n    'number, number': Math.atan2,\n    // Complex numbers doesn't seem to have a reasonable implementation of\n    // atan2(). Even Matlab removed the support, after they only calculated\n    // the atan only on base of the real part of the numbers and ignored the imaginary.\n    'BigNumber, BigNumber': function BigNumberBigNumber(y, x) {\n      return BigNumber.atan2(y, x);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm09(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      // mind the order of y and x!\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm12(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexports.createAtan2 = createAtan2;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createAtan2","_factory","_algorithm","_algorithm2","_algorithm3","_algorithm4","_algorithm5","_algorithm6","_algorithm7","factory","name","dependencies","_ref","typed","matrix","equalScalar","BigNumber","DenseMatrix","algorithm02","createAlgorithm02","algorithm03","createAlgorithm03","algorithm09","createAlgorithm09","algorithm11","createAlgorithm11","algorithm12","createAlgorithm12","algorithm13","createAlgorithm13","algorithm14","createAlgorithm14","Math","atan2","BigNumberBigNumber","y","x","SparseMatrixSparseMatrix","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","SparseMatrixNumberBigNumber","DenseMatrixNumberBigNumber","numberBigNumberSparseMatrix","numberBigNumberDenseMatrix","ArrayNumberBigNumber","numberBigNumberArray"]
}
