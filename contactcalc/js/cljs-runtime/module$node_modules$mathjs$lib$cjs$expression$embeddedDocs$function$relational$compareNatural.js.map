{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$relational$compareNatural.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,6FAAA,CAAkH,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1JC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,kBAAR,CARyBA,CACvBC,KAAM,gBADiBD,CAEvBE,SAAU,YAFaF,CAGvBG,OAAQ,CAAC,sBAAD,CAHeH,CAIvBI,YAAa,qIAJUJ,CAKvBK,SAAU,wRAAA,CAAA,KAAA,CAAA,GAAA,CALaL;AAMvBM,QAAS,8DAAA,CAAA,KAAA,CAAA,GAAA,CANcN,CAPiI;",
"sources":["node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/relational/compareNatural.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$relational$compareNatural\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compareNaturalDocs = void 0;\nvar compareNaturalDocs = {\n  name: 'compareNatural',\n  category: 'Relational',\n  syntax: ['compareNatural(x, y)'],\n  description: 'Compare two values of any type in a deterministic, natural way. ' + 'Returns 1 when x > y, -1 when x < y, and 0 when x == y.',\n  examples: ['compareNatural(2, 3)', 'compareNatural(3, 2)', 'compareNatural(2, 2)', 'compareNatural(5cm, 40mm)', 'compareNatural(\"2\", \"10\")', 'compareNatural(2 + 3i, 2 + 4i)', 'compareNatural([1, 2, 4], [1, 2, 3])', 'compareNatural([1, 5], [1, 2, 3])', 'compareNatural([1, 2], [1, 2])', 'compareNatural({a: 2}, {a: 4})'],\n  seealso: ['equal', 'unequal', 'smaller', 'smallerEq', 'largerEq', 'compare', 'compareText']\n};\nexports.compareNaturalDocs = compareNaturalDocs;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","compareNaturalDocs","name","category","syntax","description","examples","seealso"]
}
