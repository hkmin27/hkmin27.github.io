{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$matrix$range.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/function/matrix/range.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$matrix$range\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRange = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _noop = require(\"../../utils/noop.js\");\n\nvar name = 'range';\nvar dependencies = ['typed', 'config', '?matrix', '?bignumber', 'smaller', 'smallerEq', 'larger', 'largerEq'];\nvar createRange = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      matrix = _ref.matrix,\n      bignumber = _ref.bignumber,\n      smaller = _ref.smaller,\n      smallerEq = _ref.smallerEq,\n      larger = _ref.larger,\n      largerEq = _ref.largerEq;\n\n  /**\n   * Create an array from a range.\n   * By default, the range end is excluded. This can be customized by providing\n   * an extra parameter `includeEnd`.\n   *\n   * Syntax:\n   *\n   *     math.range(str [, includeEnd])               // Create a range from a string,\n   *                                                  // where the string contains the\n   *                                                  // start, optional step, and end,\n   *                                                  // separated by a colon.\n   *     math.range(start, end [, includeEnd])        // Create a range with start and\n   *                                                  // end and a step size of 1.\n   *     math.range(start, end, step [, includeEnd])  // Create a range with start, step,\n   *                                                  // and end.\n   *\n   * Where:\n   *\n   * - `str: string`\n   *   A string 'start:end' or 'start:step:end'\n   * - `start: {number | BigNumber}`\n   *   Start of the range\n   * - `end: number | BigNumber`\n   *   End of the range, excluded by default, included when parameter includeEnd=true\n   * - `step: number | BigNumber`\n   *   Step size. Default value is 1.\n   * - `includeEnd: boolean`\n   *   Option to specify whether to include the end or not. False by default.\n   *\n   * Examples:\n   *\n   *     math.range(2, 6)        // [2, 3, 4, 5]\n   *     math.range(2, -3, -1)   // [2, 1, 0, -1, -2]\n   *     math.range('2:1:6')     // [2, 3, 4, 5]\n   *     math.range(2, 6, true)  // [2, 3, 4, 5, 6]\n   *\n   * See also:\n   *\n   *     ones, zeros, size, subset\n   *\n   * @param {*} args   Parameters describing the ranges `start`, `end`, and optional `step`.\n   * @return {Array | Matrix} range\n   */\n  return typed(name, {\n    // TODO: simplify signatures when typed-function supports default values and optional arguments\n    // TODO: a number or boolean should not be converted to string here\n    string: _strRange,\n    'string, boolean': _strRange,\n    'number, number': function numberNumber(start, end) {\n      return _out(_rangeEx(start, end, 1));\n    },\n    'number, number, number': function numberNumberNumber(start, end, step) {\n      return _out(_rangeEx(start, end, step));\n    },\n    'number, number, boolean': function numberNumberBoolean(start, end, includeEnd) {\n      return includeEnd ? _out(_rangeInc(start, end, 1)) : _out(_rangeEx(start, end, 1));\n    },\n    'number, number, number, boolean': function numberNumberNumberBoolean(start, end, step, includeEnd) {\n      return includeEnd ? _out(_rangeInc(start, end, step)) : _out(_rangeEx(start, end, step));\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(start, end) {\n      var BigNumber = start.constructor;\n      return _out(_bigRangeEx(start, end, new BigNumber(1)));\n    },\n    'BigNumber, BigNumber, BigNumber': function BigNumberBigNumberBigNumber(start, end, step) {\n      return _out(_bigRangeEx(start, end, step));\n    },\n    'BigNumber, BigNumber, boolean': function BigNumberBigNumberBoolean(start, end, includeEnd) {\n      var BigNumber = start.constructor;\n      return includeEnd ? _out(_bigRangeInc(start, end, new BigNumber(1))) : _out(_bigRangeEx(start, end, new BigNumber(1)));\n    },\n    'BigNumber, BigNumber, BigNumber, boolean': function BigNumberBigNumberBigNumberBoolean(start, end, step, includeEnd) {\n      return includeEnd ? _out(_bigRangeInc(start, end, step)) : _out(_bigRangeEx(start, end, step));\n    }\n  });\n\n  function _out(arr) {\n    if (config.matrix === 'Matrix') {\n      return matrix ? matrix(arr) : (0, _noop.noMatrix)();\n    }\n\n    return arr;\n  }\n\n  function _strRange(str, includeEnd) {\n    var r = _parse(str);\n\n    if (!r) {\n      throw new SyntaxError('String \"' + str + '\" is no valid range');\n    }\n\n    var fn;\n\n    if (config.number === 'BigNumber') {\n      if (bignumber === undefined) {\n        (0, _noop.noBignumber)();\n      }\n\n      fn = includeEnd ? _bigRangeInc : _bigRangeEx;\n      return _out(fn(bignumber(r.start), bignumber(r.end), bignumber(r.step)));\n    } else {\n      fn = includeEnd ? _rangeInc : _rangeEx;\n      return _out(fn(r.start, r.end, r.step));\n    }\n  }\n  /**\n   * Create a range with numbers. End is excluded\n   * @param {number} start\n   * @param {number} end\n   * @param {number} step\n   * @returns {Array} range\n   * @private\n   */\n\n\n  function _rangeEx(start, end, step) {\n    var array = [];\n    var x = start;\n\n    if (step > 0) {\n      while (smaller(x, end)) {\n        array.push(x);\n        x += step;\n      }\n    } else if (step < 0) {\n      while (larger(x, end)) {\n        array.push(x);\n        x += step;\n      }\n    }\n\n    return array;\n  }\n  /**\n   * Create a range with numbers. End is included\n   * @param {number} start\n   * @param {number} end\n   * @param {number} step\n   * @returns {Array} range\n   * @private\n   */\n\n\n  function _rangeInc(start, end, step) {\n    var array = [];\n    var x = start;\n\n    if (step > 0) {\n      while (smallerEq(x, end)) {\n        array.push(x);\n        x += step;\n      }\n    } else if (step < 0) {\n      while (largerEq(x, end)) {\n        array.push(x);\n        x += step;\n      }\n    }\n\n    return array;\n  }\n  /**\n   * Create a range with big numbers. End is excluded\n   * @param {BigNumber} start\n   * @param {BigNumber} end\n   * @param {BigNumber} step\n   * @returns {Array} range\n   * @private\n   */\n\n\n  function _bigRangeEx(start, end, step) {\n    var zero = bignumber(0);\n    var array = [];\n    var x = start;\n\n    if (step.gt(zero)) {\n      while (smaller(x, end)) {\n        array.push(x);\n        x = x.plus(step);\n      }\n    } else if (step.lt(zero)) {\n      while (larger(x, end)) {\n        array.push(x);\n        x = x.plus(step);\n      }\n    }\n\n    return array;\n  }\n  /**\n   * Create a range with big numbers. End is included\n   * @param {BigNumber} start\n   * @param {BigNumber} end\n   * @param {BigNumber} step\n   * @returns {Array} range\n   * @private\n   */\n\n\n  function _bigRangeInc(start, end, step) {\n    var zero = bignumber(0);\n    var array = [];\n    var x = start;\n\n    if (step.gt(zero)) {\n      while (smallerEq(x, end)) {\n        array.push(x);\n        x = x.plus(step);\n      }\n    } else if (step.lt(zero)) {\n      while (largerEq(x, end)) {\n        array.push(x);\n        x = x.plus(step);\n      }\n    }\n\n    return array;\n  }\n  /**\n   * Parse a string into a range,\n   * The string contains the start, optional step, and end, separated by a colon.\n   * If the string does not contain a valid range, null is returned.\n   * For example str='0:2:11'.\n   * @param {string} str\n   * @return {{start: number, end: number, step: number} | null} range Object containing properties start, end, step\n   * @private\n   */\n\n\n  function _parse(str) {\n    var args = str.split(':'); // number\n\n    var nums = args.map(function (arg) {\n      // use Number and not parseFloat as Number returns NaN on invalid garbage in the string\n      return Number(arg);\n    });\n    var invalid = nums.some(function (num) {\n      return isNaN(num);\n    });\n\n    if (invalid) {\n      return null;\n    }\n\n    switch (nums.length) {\n      case 2:\n        return {\n          start: nums[0],\n          end: nums[1],\n          step: 1\n        };\n\n      case 3:\n        return {\n          start: nums[0],\n          end: nums[2],\n          step: nums[1]\n        };\n\n      default:\n        return null;\n    }\n  }\n});\nexports.createRange = createRange;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createRange","_factory","_noop","factory","name","dependencies","_ref","_out","arr","config","matrix","noMatrix","_strRange","str","includeEnd","r","_parse","SyntaxError","number","undefined","bignumber","noBignumber","fn","_bigRangeInc","_bigRangeEx","start","end","step","_rangeInc","_rangeEx","array","smaller","x","push","larger","smallerEq","largerEq","zero","gt","plus","lt","nums","split","args","map","arg","Number","some","invalid","num","isNaN","length","typed","string","numberNumber","numberNumberNumber","numberNumberBoolean","numberNumberNumberBoolean","BigNumberBigNumber","constructor","BigNumberBigNumberBigNumber","BigNumberBigNumberBoolean","BigNumber","BigNumberBigNumberBigNumberBoolean"]
}
