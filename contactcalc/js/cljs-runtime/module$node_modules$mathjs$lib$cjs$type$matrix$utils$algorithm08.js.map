{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm08.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/type/matrix/utils/algorithm08.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm08\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAlgorithm08 = void 0;\n\nvar _factory = require(\"../../../utils/factory.js\");\n\nvar _DimensionError = require(\"../../../error/DimensionError.js\");\n\nvar name = 'algorithm08';\nvar dependencies = ['typed', 'equalScalar'];\nvar createAlgorithm08 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      equalScalar = _ref.equalScalar;\n\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij).\n   * Callback function invoked MAX(NNZA, NNZB) times\n   *\n   *\n   *          \u250c  f(Aij, Bij)  ; A(i,j) !== 0 && B(i,j) !== 0\n   * C(i,j) = \u2524  A(i,j)       ; A(i,j) !== 0\n   *          \u2514  0            ; otherwise\n   *\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  return function algorithm08(a, b, callback) {\n    // sparse matrix arrays\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var asize = a._size;\n    var adt = a._datatype; // sparse matrix arrays\n\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _DimensionError.DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // sparse matrix cannot be a Pattern matrix\n\n\n    if (!avalues || !bvalues) {\n      throw new Error('Cannot perform operation on Pattern Sparse Matrices');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // workspace\n\n    var x = []; // marks indicating we have a value in x for a given column\n\n    var w = []; // vars\n\n    var k, k0, k1, i; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length; // columns mark\n\n      var mark = j + 1; // loop values in a\n\n      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = aindex[k]; // mark workspace\n\n        w[i] = mark; // set value\n\n        x[i] = avalues[k]; // add index\n\n        cindex.push(i);\n      } // loop values in b\n\n\n      for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k]; // check value exists in workspace\n\n        if (w[i] === mark) {\n          // evaluate callback\n          x[i] = cf(x[i], bvalues[k]);\n        }\n      } // initialize first index in j\n\n\n      k = cptr[j]; // loop index in j\n\n      while (k < cindex.length) {\n        // row\n        i = cindex[k]; // value @ i\n\n        var v = x[i]; // check for zero value\n\n        if (!eq(v, zero)) {\n          // push value\n          cvalues.push(v); // increment pointer\n\n          k++;\n        } else {\n          // remove value @ i, do not increment pointer\n          cindex.splice(k, 1);\n        }\n      }\n    } // update cptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\nexports.createAlgorithm08 = createAlgorithm08;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createAlgorithm08","_factory","_DimensionError","factory","name","dependencies","_ref","typed","equalScalar","algorithm08","a","b","callback","avalues","_values","aindex","_index","aptr","_ptr","asize","_size","adt","_datatype","bvalues","bindex","bptr","bsize","bdt","length","DimensionError","RangeError","Error","rows","columns","eq","zero","cf","dt","find","convert","cvalues","cindex","cptr","x","w","k","k1","i","j","mark","k0","push","v","splice","createSparseMatrix","values","index","ptr","size","datatype"]
}
