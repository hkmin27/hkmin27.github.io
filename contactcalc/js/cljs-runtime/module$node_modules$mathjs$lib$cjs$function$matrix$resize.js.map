{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$matrix$resize.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/function/matrix/resize.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$matrix$resize\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createResize = void 0;\n\nvar _is = require(\"../../utils/is.js\");\n\nvar _DimensionError = require(\"../../error/DimensionError.js\");\n\nvar _ArgumentsError = require(\"../../error/ArgumentsError.js\");\n\nvar _number = require(\"../../utils/number.js\");\n\nvar _string = require(\"../../utils/string.js\");\n\nvar _object = require(\"../../utils/object.js\");\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'resize';\nvar dependencies = ['config', 'matrix'];\nvar createResize = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var config = _ref.config,\n      matrix = _ref.matrix;\n\n  /**\n   * Resize a matrix\n   *\n   * Syntax:\n   *\n   *     math.resize(x, size)\n   *     math.resize(x, size, defaultValue)\n   *\n   * Examples:\n   *\n   *     math.resize([1, 2, 3, 4, 5], [3]) // returns Array  [1, 2, 3]\n   *     math.resize([1, 2, 3], [5], 0)    // returns Array  [1, 2, 3, 0, 0]\n   *     math.resize(2, [2, 3], 0)         // returns Matrix [[2, 0, 0], [0, 0, 0]]\n   *     math.resize(\"hello\", [8], \"!\")    // returns string 'hello!!!'\n   *\n   * See also:\n   *\n   *     size, squeeze, subset, reshape\n   *\n   * @param {Array | Matrix | *} x             Matrix to be resized\n   * @param {Array | Matrix} size              One dimensional array with numbers\n   * @param {number | string} [defaultValue=0] Zero by default, except in\n   *                                           case of a string, in that case\n   *                                           defaultValue = ' '\n   * @return {* | Array | Matrix} A resized clone of matrix `x`\n   */\n  // TODO: rework resize to a typed-function\n  return function resize(x, size, defaultValue) {\n    if (arguments.length !== 2 && arguments.length !== 3) {\n      throw new _ArgumentsError.ArgumentsError('resize', arguments.length, 2, 3);\n    }\n\n    if ((0, _is.isMatrix)(size)) {\n      size = size.valueOf(); // get Array\n    }\n\n    if ((0, _is.isBigNumber)(size[0])) {\n      // convert bignumbers to numbers\n      size = size.map(function (value) {\n        return !(0, _is.isBigNumber)(value) ? value : value.toNumber();\n      });\n    } // check x is a Matrix\n\n\n    if ((0, _is.isMatrix)(x)) {\n      // use optimized matrix implementation, return copy\n      return x.resize(size, defaultValue, true);\n    }\n\n    if (typeof x === 'string') {\n      // resize string\n      return _resizeString(x, size, defaultValue);\n    } // check result should be a matrix\n\n\n    var asMatrix = Array.isArray(x) ? false : config.matrix !== 'Array';\n\n    if (size.length === 0) {\n      // output a scalar\n      while (Array.isArray(x)) {\n        x = x[0];\n      }\n\n      return (0, _object.clone)(x);\n    } else {\n      // output an array/matrix\n      if (!Array.isArray(x)) {\n        x = [x];\n      }\n\n      x = (0, _object.clone)(x);\n      var res = (0, _array.resize)(x, size, defaultValue);\n      return asMatrix ? matrix(res) : res;\n    }\n  };\n  /**\n   * Resize a string\n   * @param {string} str\n   * @param {number[]} size\n   * @param {string} [defaultChar=' ']\n   * @private\n   */\n\n  function _resizeString(str, size, defaultChar) {\n    if (defaultChar !== undefined) {\n      if (typeof defaultChar !== 'string' || defaultChar.length !== 1) {\n        throw new TypeError('Single character expected as defaultValue');\n      }\n    } else {\n      defaultChar = ' ';\n    }\n\n    if (size.length !== 1) {\n      throw new _DimensionError.DimensionError(size.length, 1);\n    }\n\n    var len = size[0];\n\n    if (typeof len !== 'number' || !(0, _number.isInteger)(len)) {\n      throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + (0, _string.format)(size) + ')');\n    }\n\n    if (str.length > len) {\n      return str.substring(0, len);\n    } else if (str.length < len) {\n      var res = str;\n\n      for (var i = 0, ii = len - str.length; i < ii; i++) {\n        res += defaultChar;\n      }\n\n      return res;\n    } else {\n      return str;\n    }\n  }\n});\nexports.createResize = createResize;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createResize","_is","_DimensionError","_ArgumentsError","_number","_string","_object","_array","_factory","factory","name","dependencies","_ref","_resizeString","str","size","defaultChar","undefined","length","TypeError","DimensionError","len","isInteger","format","substring","res","i","ii","config","matrix","resize","x","defaultValue","arguments","ArgumentsError","isMatrix","valueOf","isBigNumber","map","toNumber","asMatrix","Array","isArray","clone"]
}
