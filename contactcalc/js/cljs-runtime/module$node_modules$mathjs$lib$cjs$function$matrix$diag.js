shadow$provide.module$node_modules$mathjs$lib$cjs$function$matrix$diag=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createDiag=void 0;var _is=require("module$node_modules$mathjs$lib$cjs$utils$is"),_array=require("module$node_modules$mathjs$lib$cjs$utils$array"),_number=require("module$node_modules$mathjs$lib$cjs$utils$number");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("diag",["typed","matrix",
"DenseMatrix","SparseMatrix"],function(_ref){function _diag(x,k,size,format){if(!(0,_number.isInteger)(k))throw new TypeError("Second parameter in function diag must be an integer");var kSuper=0<k?k:0,kSub=0>k?-k:0;switch(size.length){case 1:size=size[0];kSuper=[size+kSub,size+kSuper];if(format&&"sparse"!==format&&"dense"!==format)throw new TypeError("Unknown matrix type ".concat(format,'"'));x="sparse"===format?SparseMatrix.diagonal(kSuper,x,k):DenseMatrix.diagonal(kSuper,x,k);return null!==format?
x:x.valueOf();case 2:if((0,_is.isMatrix)(x))x=x.diagonal(k),format=null!==format?format!==x.storage()?matrix(x,format):x:x.valueOf();else{k=Math.min(size[0]-kSub,size[1]-kSuper);size=[];for(var i=0;i<k;i++)size[i]=x[i+kSub][i+kSuper];format=null!==format?matrix(size):size}return format}throw new RangeError("Matrix for function diag must be 2 dimensional");}var typed=_ref.typed,matrix=_ref.matrix,DenseMatrix=_ref.DenseMatrix,SparseMatrix=_ref.SparseMatrix;return typed("diag",{Array:function(x){return _diag(x,
0,(0,_array.arraySize)(x),null)},"Array, number":function(x,k){return _diag(x,k,(0,_array.arraySize)(x),null)},"Array, BigNumber":function(x,k){return _diag(x,k.toNumber(),(0,_array.arraySize)(x),null)},"Array, string":function(x,format){return _diag(x,0,(0,_array.arraySize)(x),format)},"Array, number, string":function(x,k,format){return _diag(x,k,(0,_array.arraySize)(x),format)},"Array, BigNumber, string":function(x,k,format){return _diag(x,k.toNumber(),(0,_array.arraySize)(x),format)},Matrix:function(x){return _diag(x,
0,x.size(),x.storage())},"Matrix, number":function(x,k){return _diag(x,k,x.size(),x.storage())},"Matrix, BigNumber":function(x,k){return _diag(x,k.toNumber(),x.size(),x.storage())},"Matrix, string":function(x,format){return _diag(x,0,x.size(),format)},"Matrix, number, string":function(x,k,format){return _diag(x,k,x.size(),format)},"Matrix, BigNumber, string":function(x,k,format){return _diag(x,k.toNumber(),x.size(),format)}})});exports.createDiag=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$matrix$diag.js.map
