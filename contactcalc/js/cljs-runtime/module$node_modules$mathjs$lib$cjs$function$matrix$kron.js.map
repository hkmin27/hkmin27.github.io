{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$matrix$kron.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/function/matrix/kron.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$matrix$kron\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createKron = void 0;\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'kron';\nvar dependencies = ['typed', 'matrix', 'multiplyScalar'];\nvar createKron = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      multiplyScalar = _ref.multiplyScalar;\n\n  /**\n     * Calculates the kronecker product of 2 matrices or vectors.\n     *\n     * NOTE: If a one dimensional vector / matrix is given, it will be\n     * wrapped so its two dimensions.\n     * See the examples.\n     *\n     * Syntax:\n     *\n     *    math.kron(x, y)\n     *\n     * Examples:\n     *\n     *    math.kron([[1, 0], [0, 1]], [[1, 2], [3, 4]])\n     *    // returns [ [ 1, 2, 0, 0 ], [ 3, 4, 0, 0 ], [ 0, 0, 1, 2 ], [ 0, 0, 3, 4 ] ]\n     *\n     *    math.kron([1,1], [2,3,4])\n     *    // returns [ [ 2, 3, 4, 2, 3, 4 ] ]\n     *\n     * See also:\n     *\n     *    multiply, dot, cross\n     *\n     * @param  {Array | Matrix} x     First vector\n     * @param  {Array | Matrix} y     Second vector\n     * @return {Array | Matrix}       Returns the kronecker product of `x` and `y`\n     */\n  return typed(name, {\n    'Matrix, Matrix': function MatrixMatrix(x, y) {\n      return matrix(_kron(x.toArray(), y.toArray()));\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      return matrix(_kron(x.toArray(), y));\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      return matrix(_kron(x, y.toArray()));\n    },\n    'Array, Array': _kron\n  });\n  /**\n     * Calculate the kronecker product of two matrices / vectors\n     * @param {Array} a  First vector\n     * @param {Array} b  Second vector\n     * @returns {Array} Returns the kronecker product of x and y\n     * @private\n     */\n\n  function _kron(a, b) {\n    // Deal with the dimensions of the matricies.\n    if ((0, _array.arraySize)(a).length === 1) {\n      // Wrap it in a 2D Matrix\n      a = [a];\n    }\n\n    if ((0, _array.arraySize)(b).length === 1) {\n      // Wrap it in a 2D Matrix\n      b = [b];\n    }\n\n    if ((0, _array.arraySize)(a).length > 2 || (0, _array.arraySize)(b).length > 2) {\n      throw new RangeError('Vectors with dimensions greater then 2 are not supported expected ' + '(Size x = ' + JSON.stringify(a.length) + ', y = ' + JSON.stringify(b.length) + ')');\n    }\n\n    var t = [];\n    var r = [];\n    return a.map(function (a) {\n      return b.map(function (b) {\n        r = [];\n        t.push(r);\n        return a.map(function (y) {\n          return b.map(function (x) {\n            return r.push(multiplyScalar(y, x));\n          });\n        });\n      });\n    }) && t;\n  }\n});\nexports.createKron = createKron;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createKron","_array","_factory","factory","name","dependencies","_ref","_kron","a","b","arraySize","length","RangeError","JSON","stringify","t","r","map","push","y","x","multiplyScalar","typed","matrix","MatrixMatrix","toArray","MatrixArray","ArrayMatrix"]
}
