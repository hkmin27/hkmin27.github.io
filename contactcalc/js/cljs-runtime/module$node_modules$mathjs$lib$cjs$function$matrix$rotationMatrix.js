shadow$provide.module$node_modules$mathjs$lib$cjs$function$matrix$rotationMatrix=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createRotationMatrix=void 0;var _is=require("module$node_modules$mathjs$lib$cjs$utils$is");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("rotationMatrix","typed config multiplyScalar addScalar unaryMinus norm matrix BigNumber DenseMatrix SparseMatrix cos sin".split(" "),
function(_ref){function _rotationMatrix2x2(theta,format){var minusOne=(0,_is.isBigNumber)(theta)?new BigNumber(-1):-1,cosTheta=cos(theta);theta=sin(theta);minusOne=[[cosTheta,multiplyScalar(minusOne,theta)],[theta,cosTheta]];return _convertToFormat(minusOne,format)}function _validateVector(v){v=v.size();if(1>v.length||3!==v[0])throw new RangeError("Vector must be of dimensions 1x3");}function _mul(array){return array.reduce(function(p,curr){return multiplyScalar(p,curr)})}function _convertToFormat(data,
format){if(format){if("sparse"===format)return new SparseMatrix(data);if("dense"===format)return new DenseMatrix(data);throw new TypeError('Unknown matrix type "'.concat(format,'"'));}return data}function _rotationMatrix3x3(theta,v,format){var normV=norm(v);if(0===normV)throw new RangeError("Rotation around zero vector");var Big=(0,_is.isBigNumber)(theta)?BigNumber:null,one=Big?new Big(1):1,minusOne=Big?new Big(-1):-1,vx=Big?new Big(v.get([0])/normV):v.get([0])/normV,vy=Big?new Big(v.get([1])/normV):
v.get([1])/normV;v=Big?new Big(v.get([2])/normV):v.get([2])/normV;normV=cos(theta);one=addScalar(one,unaryMinus(normV));var s=sin(theta);theta=addScalar(normV,_mul([vx,vx,one]));Big=addScalar(_mul([vx,vy,one]),_mul([minusOne,v,s]));var r13=addScalar(_mul([vx,v,one]),_mul([vy,s])),r21=addScalar(_mul([vx,vy,one]),_mul([v,s])),r22=addScalar(normV,_mul([vy,vy,one])),r23=addScalar(_mul([vy,v,one]),_mul([minusOne,vx,s]));minusOne=addScalar(_mul([vx,v,one]),_mul([minusOne,vy,s]));vx=addScalar(_mul([vy,v,
one]),_mul([vx,s]));vy=addScalar(normV,_mul([v,v,one]));return _convertToFormat([[theta,Big,r13],[r21,r22,r23],[minusOne,vx,vy]],format)}var typed=_ref.typed,config=_ref.config,multiplyScalar=_ref.multiplyScalar,addScalar=_ref.addScalar,unaryMinus=_ref.unaryMinus,norm=_ref.norm,BigNumber=_ref.BigNumber,matrix=_ref.matrix,DenseMatrix=_ref.DenseMatrix,SparseMatrix=_ref.SparseMatrix,cos=_ref.cos,sin=_ref.sin;return typed("rotationMatrix",{"":function(){return"Matrix"===config.matrix?matrix([]):[]},string:function(format){return matrix(format)},
"number | BigNumber | Complex | Unit":function(theta){return _rotationMatrix2x2(theta,"Matrix"===config.matrix?"dense":void 0)},"number | BigNumber | Complex | Unit, string":function(theta,format){return _rotationMatrix2x2(theta,format)},"number | BigNumber | Complex | Unit, Array":function(theta,v){v=matrix(v);_validateVector(v);return _rotationMatrix3x3(theta,v,void 0)},"number | BigNumber | Complex | Unit, Matrix":function(theta,v){_validateVector(v);var storageType=v.storage()||("Matrix"===config.matrix?
"dense":void 0);return _rotationMatrix3x3(theta,v,storageType)},"number | BigNumber | Complex | Unit, Array, string":function(theta,v,format){v=matrix(v);_validateVector(v);return _rotationMatrix3x3(theta,v,format)},"number | BigNumber | Complex | Unit, Matrix, string":function(theta,v,format){_validateVector(v);return _rotationMatrix3x3(theta,v,format)}})});exports.createRotationMatrix=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$matrix$rotationMatrix.js.map
