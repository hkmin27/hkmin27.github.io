shadow$provide.module$node_modules$mathjs$lib$cjs$expression$node$ArrayNode=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createArrayNode=void 0;var _is=require("module$node_modules$mathjs$lib$cjs$utils$is"),_array=require("module$node_modules$mathjs$lib$cjs$utils$array");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("ArrayNode",["Node"],function(_ref){function ArrayNode(items){if(!(this instanceof
ArrayNode))throw new SyntaxError("Constructor must be called with the new operator");this.items=items||[];if(!Array.isArray(this.items)||!this.items.every(_is.isNode))throw new TypeError("Array containing Nodes expected");}ArrayNode.prototype=new _ref.Node;ArrayNode.prototype.type="ArrayNode";ArrayNode.prototype.isArrayNode=!0;ArrayNode.prototype._compile=function(math,argNames){var evalItems=(0,_array.map)(this.items,function(item){return item._compile(math,argNames)});if("Array"!==math.config.matrix){var matrix=
math.matrix;return function(scope,args,context){return matrix((0,_array.map)(evalItems,function(evalItem){return evalItem(scope,args,context)}))}}return function(scope,args,context){return(0,_array.map)(evalItems,function(evalItem){return evalItem(scope,args,context)})}};ArrayNode.prototype.forEach=function(callback){for(var i=0;i<this.items.length;i++)callback(this.items[i],"items["+i+"]",this)};ArrayNode.prototype.map=function(callback){for(var items=[],i=0;i<this.items.length;i++)items[i]=this._ifNode(callback(this.items[i],
"items["+i+"]",this));return new ArrayNode(items)};ArrayNode.prototype.clone=function(){return new ArrayNode(this.items.slice(0))};ArrayNode.prototype._toString=function(options){return"["+this.items.map(function(node){return node.toString(options)}).join(", ")+"]"};ArrayNode.prototype.toJSON=function(){return{mathjs:"ArrayNode",items:this.items}};ArrayNode.fromJSON=function(json){return new ArrayNode(json.items)};ArrayNode.prototype.toHTML=function(options){return'\x3cspan class\x3d"math-parenthesis math-square-parenthesis"\x3e[\x3c/span\x3e'+
this.items.map(function(node){return node.toHTML(options)}).join('\x3cspan class\x3d"math-separator"\x3e,\x3c/span\x3e')+'\x3cspan class\x3d"math-parenthesis math-square-parenthesis"\x3e]\x3c/span\x3e'};ArrayNode.prototype._toTex=function(options){var s="\\begin{bmatrix}";this.items.forEach(function(node){s=node.items?s+node.items.map(function(childNode){return childNode.toTex(options)}).join("\x26"):s+node.toTex(options);s+="\\\\"});return s+="\\end{bmatrix}"};return ArrayNode},{isClass:!0,isNode:!0});
exports.createArrayNode=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$expression$node$ArrayNode.js.map
