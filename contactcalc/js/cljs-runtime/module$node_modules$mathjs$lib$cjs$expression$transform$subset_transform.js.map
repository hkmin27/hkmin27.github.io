{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$transform$subset_transform.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,wEAAA,CAA6F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,qBAAR,CAAgC,IAAK,EAEjCC,OAAAA,CAAWP,OAAA,CAAQ,kDAAR,CAEf,KAAIQ,gBAAkBR,OAAA,CAAQ,8EAAR,CAAtB,CAEIS,QAAUT,OAAA,CAAQ,2DAAR,CAIVM,QAAAA,CAAuC,CAAC,CAAA,CAAGC,MAASG,CAAAA,OAAb,EAFhCC,QAEgC;AADxBC,CAAC,OAADA,CAAU,QAAVA,CACwB,CAA0C,QAAS,CAACC,IAAD,CAAO,CAAA,IAC/FC,MAAQD,IAAKC,CAAAA,KACbC,KAAAA,CAASF,IAAKE,CAAAA,MAClB,KAAIC,OAAS,CAAC,CAAA,CAAGP,OAAQQ,CAAAA,YAAZ,EAA0B,CACrCH,MAAOA,KAD8B,CAErCC,OAAQA,IAF6B,CAA1B,CAWb,OAAOD,MAAA,CAAM,QAAN,CAAgB,CACrB,SAAUI,QAAY,CAACC,IAAD,CAAO,CAC3B,GAAI,CACF,MAAOH,OAAOI,CAAAA,KAAP,CAAa,IAAb,CAAmBD,IAAnB,CADL,CAEF,MAAOE,GAAP,CAAY,CACZ,KAAM,CAAC,CAAA,CAAGb,eAAgBc,CAAAA,cAApB,EAAoCD,GAApC,CAAN,CADY,CAHa,CADR,CAAhB,CAd4F,CAA1D,CAuBxC,CACDE,oBAAqB,CAAA,CADpB,CAvBwC,CA0B3CrB,QAAQI,CAAAA,qBAAR,CAAgCA,OA1CqG;",
"sources":["node_modules/mathjs/lib/cjs/expression/transform/subset.transform.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$transform$subset_transform\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSubsetTransform = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _errorTransform = require(\"./utils/errorTransform.js\");\n\nvar _subset = require(\"../../function/matrix/subset.js\");\n\nvar name = 'subset';\nvar dependencies = ['typed', 'matrix'];\nvar createSubsetTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix;\n  var subset = (0, _subset.createSubset)({\n    typed: typed,\n    matrix: matrix\n  });\n  /**\n   * Attach a transform function to math.subset\n   * Adds a property transform containing the transform function.\n   *\n   * This transform creates a range which includes the end value\n   */\n\n  return typed('subset', {\n    '...any': function any(args) {\n      try {\n        return subset.apply(null, args);\n      } catch (err) {\n        throw (0, _errorTransform.errorTransform)(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});\nexports.createSubsetTransform = createSubsetTransform;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createSubsetTransform","_factory","_errorTransform","_subset","factory","name","dependencies","_ref","typed","matrix","subset","createSubset","any","args","apply","err","errorTransform","isTransformFunction"]
}
