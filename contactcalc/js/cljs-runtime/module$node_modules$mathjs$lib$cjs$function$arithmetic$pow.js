shadow$provide.module$node_modules$mathjs$lib$cjs$function$arithmetic$pow=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createPow=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _number=require("module$node_modules$mathjs$lib$cjs$utils$number"),_array=require("module$node_modules$mathjs$lib$cjs$utils$array"),_index=require("module$node_modules$mathjs$lib$cjs$plain$number$index");require=(0,global.factory)("pow",
"typed config identity multiply matrix fraction number Complex".split(" "),function(_ref){function _pow(x,y){if(config.predictable&&!(0,_number.isInteger)(y)&&0>x)try{var yFrac=fraction(y),yNum=number(yFrac);if((y===yNum||1E-14>Math.abs((y-yNum)/y))&&1===yFrac.d%2)return(0===yFrac.n%2?1:-1)*Math.pow(-x,y)}catch(ex){}return config.predictable&&(-1>x&&Infinity===y||-1<x&&0>x&&-Infinity===y)?NaN:(0,_number.isInteger)(y)||0<=x||config.predictable?(0,_index.powNumber)(x,y):1>x*x&&Infinity===y||1<x*x&&
-Infinity===y?0:(new Complex(x,0)).pow(y,0)}function _powArray(x,y){if(!(0,_number.isInteger)(y)||0>y)throw new TypeError("For A^b, b must be a positive integer (value is "+y+")");var s=(0,_array.arraySize)(x);if(2!==s.length)throw Error("For A^b, A must be 2 dimensional (A has "+s.length+" dimensions)");if(s[0]!==s[1])throw Error("For A^b, A must be square (size is "+s[0]+"x"+s[1]+")");for(s=identity(s[0]).valueOf();1<=y;)1===(y&1)&&(s=multiply(x,s)),y>>=1,x=multiply(x,x);return s}function _powMatrix(x,
y){return matrix(_powArray(x.valueOf(),y))}var typed=_ref.typed,config=_ref.config,identity=_ref.identity,multiply=_ref.multiply,matrix=_ref.matrix,number=_ref.number,fraction=_ref.fraction,Complex=_ref.Complex;return typed("pow",{"number, number":_pow,"Complex, Complex":function(x,y){return x.pow(y)},"BigNumber, BigNumber":function(x,y){return y.isInteger()||0<=x||config.predictable?x.pow(y):(new Complex(x.toNumber(),0)).pow(y.toNumber(),0)},"Fraction, Fraction":function(x,y){if(1!==y.d){if(config.predictable)throw Error("Function pow does not support non-integer exponents for fractions.");
return _pow(x.valueOf(),y.valueOf())}return x.pow(y)},"Array, number":_powArray,"Array, BigNumber":function(x,y){return _powArray(x,y.toNumber())},"Matrix, number":_powMatrix,"Matrix, BigNumber":function(x,y){return _powMatrix(x,y.toNumber())},"Unit, number | BigNumber":function(x,y){return x.pow(y)}})});exports.createPow=require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$arithmetic$pow.js.map
