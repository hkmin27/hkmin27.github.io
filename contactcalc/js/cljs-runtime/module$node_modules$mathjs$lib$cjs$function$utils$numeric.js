shadow$provide.module$node_modules$mathjs$lib$cjs$function$utils$numeric=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createNumeric=void 0;var _is=require("module$node_modules$mathjs$lib$cjs$utils$is");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _noop=require("module$node_modules$mathjs$lib$cjs$utils$noop");require=(0,global.factory)("numeric",["number","?bignumber","?fraction"],function(_ref){var _number=_ref.number,
bignumber=_ref.bignumber,fraction=_ref.fraction,validInputTypes={string:!0,number:!0,BigNumber:!0,Fraction:!0},validOutputTypes={number:function(x){return _number(x)},BigNumber:bignumber?function(x){return bignumber(x)}:_noop.noBignumber,Fraction:fraction?function(x){return fraction(x)}:_noop.noFraction};return function(value,outputType){var inputType=(0,_is.typeOf)(value);if(!(inputType in validInputTypes))throw new TypeError("Cannot convert "+value+' of type "'+inputType+'"; valid input types are '+
Object.keys(validInputTypes).join(", "));if(!(outputType in validOutputTypes))throw new TypeError("Cannot convert "+value+' to type "'+outputType+'"; valid output types are '+Object.keys(validOutputTypes).join(", "));return outputType===inputType?value:validOutputTypes[outputType](value)}});exports.createNumeric=require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$utils$numeric.js.map
