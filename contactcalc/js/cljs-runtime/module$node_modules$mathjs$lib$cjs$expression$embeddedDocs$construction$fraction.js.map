{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$construction$fraction.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,gFAAA,CAAqG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7IC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,YAAR,CARmBA,CACjBC,KAAM,UADWD,CAEjBE,SAAU,cAFOF,CAGjBG,OAAQ,CAAC,eAAD,CAAkB,mBAAlB,CAHSH,CAIjBI,YAAa,sEAJIJ,CAKjBK,SAAU,CAAC,iBAAD,CAAoB,iCAApB,CALOL,CAMjBM,QAAS,oDAAA,CAAA,KAAA,CAAA,GAAA,CANQN,CAP0H;",
"sources":["node_modules/mathjs/lib/cjs/expression/embeddedDocs/construction/fraction.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$construction$fraction\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fractionDocs = void 0;\nvar fractionDocs = {\n  name: 'fraction',\n  category: 'Construction',\n  syntax: ['fraction(num)', 'fraction(num,den)'],\n  description: 'Create a fraction from a number or from a numerator and denominator.',\n  examples: ['fraction(0.125)', 'fraction(1, 3) + fraction(2, 5)'],\n  seealso: ['bignumber', 'boolean', 'complex', 'index', 'matrix', 'string', 'unit']\n};\nexports.fractionDocs = fractionDocs;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","fractionDocs","name","category","syntax","description","examples","seealso"]
}
