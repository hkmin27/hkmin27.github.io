{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm02.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/type/matrix/utils/algorithm02.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm02\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAlgorithm02 = void 0;\n\nvar _factory = require(\"../../../utils/factory.js\");\n\nvar _DimensionError = require(\"../../../error/DimensionError.js\");\n\nvar name = 'algorithm02';\nvar dependencies = ['typed', 'equalScalar'];\nvar createAlgorithm02 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      equalScalar = _ref.equalScalar;\n\n  /**\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\n   *\n   *\n   *          \u250c  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = \u2524\n   *          \u2514  0            ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  return function algorithm02(denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype; // sparse matrix arrays\n\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _DimensionError.DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // sparse matrix cannot be a Pattern matrix\n\n\n    if (!bvalues) {\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result (SparseMatrix)\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // loop columns in b\n\n    for (var j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length; // values in column j\n\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = bindex[k]; // update C(i,j)\n\n        var cij = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]); // check for nonzero\n\n        if (!eq(cij, zero)) {\n          // push i & v\n          cindex.push(i);\n          cvalues.push(cij);\n        }\n      }\n    } // update cptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return sparseMatrix.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\nexports.createAlgorithm02 = createAlgorithm02;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createAlgorithm02","_factory","_DimensionError","factory","name","dependencies","_ref","typed","equalScalar","algorithm02","denseMatrix","sparseMatrix","callback","inverse","adata","_data","asize","_size","adt","_datatype","bvalues","_values","bindex","_index","bptr","_ptr","bsize","bdt","length","DimensionError","RangeError","Error","rows","columns","eq","zero","cf","dt","find","convert","cvalues","cindex","cptr","j","k1","k","k0","i","cij","push","createSparseMatrix","values","index","ptr","size","datatype"]
}
