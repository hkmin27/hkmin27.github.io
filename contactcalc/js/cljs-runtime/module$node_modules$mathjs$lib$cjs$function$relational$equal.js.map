{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$relational$equal.js",
"lineCount":6,
"mappings":"AAAAA,cAAA,CAAA,4DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGzHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,iBAAR,CAA4BJ,OAAQK,CAAAA,WAApC,CAAkD,IAAK,EAEnDC,OAAAA,CAAWR,OAAA,CAAQ,kDAAR,CAEf,KAAIS,WAAaT,OAAA,CAAQ,kEAAR,CAAjB,CAEIU,YAAcV,OAAA,CAAQ,kEAAR,CAFlB,CAIIW,YAAcX,OAAA,CAAQ,kEAAR,CAJlB;AAMIY,YAAcZ,OAAA,CAAQ,kEAAR,CANlB,CAQIa,YAAcb,OAAA,CAAQ,kEAAR,CAIdO,QAAAA,CAA6B,CAAC,CAAA,CAAGC,MAASM,CAAAA,OAAb,EAFtBC,OAEsB,CADdC,CAAC,OAADA,CAAU,QAAVA,CAAoB,aAApBA,CAAmC,aAAnCA,CACc,CAA0C,QAAS,CAACC,IAAD,CAAO,CAAA,IACrFC,MAAQD,IAAKC,CAAAA,KADwE,CAErFC,OAASF,IAAKE,CAAAA,MAFuE,CAGrFC,YAAcH,IAAKG,CAAAA,WACnBC,KAAAA,CAAcJ,IAAKI,CAAAA,WACvB,KAAIC,YAAc,CAAC,CAAA,CAAGb,UAAWc,CAAAA,iBAAf,EAAkC,CAClDL,MAAOA,KAD2C,CAAlC,CAAlB,CAGIM,YAAc,CAAC,CAAA,CAAGd,WAAYe,CAAAA,iBAAhB,EAAmC,CACnDP,MAAOA,KAD4C,CAEnDG,YAAaA,IAFsC,CAAnC,CAHlB;AAOIK,YAAc,CAAC,CAAA,CAAGf,WAAYgB,CAAAA,iBAAhB,EAAmC,CACnDT,MAAOA,KAD4C,CAEnDG,YAAaA,IAFsC,CAAnC,CAPlB,CAWIO,YAAc,CAAC,CAAA,CAAGhB,WAAYiB,CAAAA,iBAAhB,EAAmC,CACnDX,MAAOA,KAD4C,CAAnC,CAXlB,CAcIY,YAAc,CAAC,CAAA,CAAGjB,WAAYkB,CAAAA,iBAAhB,EAAmC,CACnDb,MAAOA,KAD4C,CAAnC,CAgDlB,OAAOA,MAAA,CArEEH,OAqEF,CAAY,CACjB,WAAYiB,QAAe,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAEhC,MAAU,KAAV,GAAID,CAAJ,CACe,IADf,GACSC,CADT,CAIU,IAAV,GAAIA,CAAJ,CACe,IADf,GACSD,CADT,CAIUE,IAAAA,EAAV,GAAIF,CAAJ,CACeE,IAAAA,EADf,GACSD,CADT,CAIUC,IAAAA,EAAV,GAAID,CAAJ,CACeC,IAAAA,EADf,GACSF,CADT,CAIOb,WAAA,CAAYa,CAAZ,CAAeC,CAAf,CAlByB,CADjB,CAqBjB,6BAA8BE,QAAiC,CAACH,CAAD,CAAIC,CAAJ,CAAO,CACpE,MAAOV,YAAA,CAAYS,CAAZ,CAAeC,CAAf,CAAkBd,WAAlB,CAD6D,CArBrD,CAwBjB,4BAA6BiB,QAAgC,CAACJ,CAAD,CAAIC,CAAJ,CAAO,CAClE,MAAOZ,YAAA,CAAYY,CAAZ,CAAeD,CAAf,CAAkBb,WAAlB;AAA+B,CAAA,CAA/B,CAD2D,CAxBnD,CA2BjB,4BAA6BkB,QAAgC,CAACL,CAAD,CAAIC,CAAJ,CAAO,CAClE,MAAOZ,YAAA,CAAYW,CAAZ,CAAeC,CAAf,CAAkBd,WAAlB,CAA+B,CAAA,CAA/B,CAD2D,CA3BnD,CA8BjB,2BAA4BmB,QAA+B,CAACN,CAAD,CAAIC,CAAJ,CAAO,CAChE,MAAON,YAAA,CAAYK,CAAZ,CAAeC,CAAf,CAAkBd,WAAlB,CADyD,CA9BjD,CAiCjB,eAAgBoB,QAAmB,CAACP,CAAD,CAAIC,CAAJ,CAAO,CAExC,MAAO,KAAA,CAAKf,MAAA,CAAOc,CAAP,CAAL,CAAgBd,MAAA,CAAOe,CAAP,CAAhB,CAA2BO,CAAAA,OAA3B,EAFiC,CAjCzB,CAqCjB,gBAAiBC,QAAoB,CAACT,CAAD,CAAIC,CAAJ,CAAO,CAE1C,MAAO,KAAA,CAAKf,MAAA,CAAOc,CAAP,CAAL,CAAgBC,CAAhB,CAFmC,CArC3B,CAyCjB,gBAAiBS,QAAoB,CAACV,CAAD,CAAIC,CAAJ,CAAO,CAE1C,MAAO,KAAA,CAAKD,CAAL,CAAQd,MAAA,CAAOe,CAAP,CAAR,CAFmC,CAzC3B,CA6CjB,oBAAqBU,QAAwB,CAACX,CAAD,CAAIC,CAAJ,CAAO,CAClD,MAAOR,YAAA,CAAYO,CAAZ,CAAeC,CAAf,CAAkBd,WAAlB,CAA+B,CAAA,CAA/B,CAD2C,CA7CnC,CAgDjB,mBAAoByB,QAAuB,CAACZ,CAAD,CAAIC,CAAJ,CAAO,CAChD,MAAOJ,YAAA,CAAYG,CAAZ,CAAeC,CAAf,CAAkBd,WAAlB,CAA+B,CAAA,CAA/B,CADyC,CAhDjC,CAmDjB,oBAAqB0B,QAAwB,CAACb,CAAD;AAAIC,CAAJ,CAAO,CAClD,MAAOR,YAAA,CAAYQ,CAAZ,CAAeD,CAAf,CAAkBb,WAAlB,CAA+B,CAAA,CAA/B,CAD2C,CAnDnC,CAsDjB,mBAAoB2B,QAAuB,CAACd,CAAD,CAAIC,CAAJ,CAAO,CAChD,MAAOJ,YAAA,CAAYI,CAAZ,CAAeD,CAAf,CAAkBb,WAAlB,CAA+B,CAAA,CAA/B,CADyC,CAtDjC,CAyDjB,aAAc4B,QAAiB,CAACf,CAAD,CAAIC,CAAJ,CAAO,CAEpC,MAAOJ,YAAA,CAAYX,MAAA,CAAOc,CAAP,CAAZ,CAAuBC,CAAvB,CAA0Bd,WAA1B,CAAuC,CAAA,CAAvC,CAA8CqB,CAAAA,OAA9C,EAF6B,CAzDrB,CA6DjB,aAAcQ,QAAiB,CAAChB,CAAD,CAAIC,CAAJ,CAAO,CAEpC,MAAOJ,YAAA,CAAYX,MAAA,CAAOe,CAAP,CAAZ,CAAuBD,CAAvB,CAA0Bb,WAA1B,CAAuC,CAAA,CAAvC,CAA6CqB,CAAAA,OAA7C,EAF6B,CA7DrB,CAAZ,CAnEkF,CAA1D,CAsIjCvC,QAAQK,CAAAA,WAAR,CAAsBA,OAClBD,QAAAA,CAAoB,CAAC,CAAA,CAAGE,MAASM,CAAAA,OAAb,EAzIbC,OAyIa,CAA4B,CAAC,OAAD,CAAU,aAAV,CAA5B,CAAsD,QAAS,CAACmC,KAAD,CAAQ,CAAA,IACzFhC,MAAQgC,KAAMhC,CAAAA,KAD2E,CAEzFE,YAAc8B,KAAM9B,CAAAA,WACxB,OAAOF,MAAA,CA5IEH,OA4IF,CAAY,CACjB,WAAYiB,QAAe,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAEhC,MAAU,KAAV;AAAID,CAAJ,CACe,IADf,GACSC,CADT,CAIU,IAAV,GAAIA,CAAJ,CACe,IADf,GACSD,CADT,CAIUE,IAAAA,EAAV,GAAIF,CAAJ,CACeE,IAAAA,EADf,GACSD,CADT,CAIUC,IAAAA,EAAV,GAAID,CAAJ,CACeC,IAAAA,EADf,GACSF,CADT,CAIOb,WAAA,CAAYa,CAAZ,CAAeC,CAAf,CAlByB,CADjB,CAAZ,CAHsF,CAAvE,CA0BxBhC,QAAQI,CAAAA,iBAAR,CAA4BA,OAvL6F;",
"sources":["node_modules/mathjs/lib/cjs/function/relational/equal.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$relational$equal\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createEqualNumber = exports.createEqual = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm03.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm07.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm12.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar name = 'equal';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];\nvar createEqual = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm03 = (0, _algorithm.createAlgorithm03)({\n    typed: typed\n  });\n  var algorithm07 = (0, _algorithm2.createAlgorithm07)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm12 = (0, _algorithm3.createAlgorithm12)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = (0, _algorithm4.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm5.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Test whether two values are equal.\n   *\n   * The function tests whether the relative difference between x and y is\n   * smaller than the configured epsilon. The function cannot be used to\n   * compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * In case of complex numbers, x.re must equal y.re, and x.im must equal y.im.\n   *\n   * Values `null` and `undefined` are compared strictly, thus `null` is only\n   * equal to `null` and nothing else, and `undefined` is only equal to\n   * `undefined` and nothing else. Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.equal(x, y)\n   *\n   * Examples:\n   *\n   *    math.equal(2 + 2, 3)         // returns false\n   *    math.equal(2 + 2, 4)         // returns true\n   *\n   *    const a = math.unit('50 cm')\n   *    const b = math.unit('5 m')\n   *    math.equal(a, b)             // returns true\n   *\n   *    const c = [2, 5, 1]\n   *    const d = [2, 7, 1]\n   *\n   *    math.equal(c, d)             // returns [true, false, true]\n   *    math.deepEqual(c, d)         // returns false\n   *\n   *    math.equal(\"1000\", \"1e3\")    // returns true\n   *    math.equal(0, null)          // returns false\n   *\n   * See also:\n   *\n   *    unequal, smaller, smallerEq, larger, largerEq, compare, deepEqual, equalText\n   *\n   * @param  {number | BigNumber | boolean | Complex | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | boolean | Complex | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the compared values are equal, else returns false\n   */\n\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y === null;\n      }\n\n      if (y === null) {\n        return x === null;\n      }\n\n      if (x === undefined) {\n        return y === undefined;\n      }\n\n      if (y === undefined) {\n        return x === undefined;\n      }\n\n      return equalScalar(x, y);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, equalScalar);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, equalScalar, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, equalScalar, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, equalScalar);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, equalScalar, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, equalScalar, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, equalScalar, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, equalScalar, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, equalScalar, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, equalScalar, true).valueOf();\n    }\n  });\n});\nexports.createEqual = createEqual;\nvar createEqualNumber = (0, _factory.factory)(name, ['typed', 'equalScalar'], function (_ref2) {\n  var typed = _ref2.typed,\n      equalScalar = _ref2.equalScalar;\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y === null;\n      }\n\n      if (y === null) {\n        return x === null;\n      }\n\n      if (x === undefined) {\n        return y === undefined;\n      }\n\n      if (y === undefined) {\n        return x === undefined;\n      }\n\n      return equalScalar(x, y);\n    }\n  });\n});\nexports.createEqualNumber = createEqualNumber;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createEqualNumber","createEqual","_factory","_algorithm","_algorithm2","_algorithm3","_algorithm4","_algorithm5","factory","name","dependencies","_ref","typed","matrix","equalScalar","DenseMatrix","algorithm03","createAlgorithm03","algorithm07","createAlgorithm07","algorithm12","createAlgorithm12","algorithm13","createAlgorithm13","algorithm14","createAlgorithm14","anyAny","x","y","undefined","SparseMatrixSparseMatrix","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","SparseMatrixAny","DenseMatrixAny","anySparseMatrix","anyDenseMatrix","ArrayAny","anyArray","_ref2"]
}
