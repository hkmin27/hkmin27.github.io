{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$node$AccessorNode.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/expression/node/AccessorNode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$node$AccessorNode\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAccessorNode = void 0;\n\nvar _is = require(\"../../utils/is.js\");\n\nvar _customs = require(\"../../utils/customs.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _access = require(\"./utils/access.js\");\n\nvar name = 'AccessorNode';\nvar dependencies = ['subset', 'Node'];\nvar createAccessorNode = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var subset = _ref.subset,\n      Node = _ref.Node;\n  var access = (0, _access.accessFactory)({\n    subset: subset\n  });\n  /**\n   * @constructor AccessorNode\n   * @extends {Node}\n   * Access an object property or get a matrix subset\n   *\n   * @param {Node} object                 The object from which to retrieve\n   *                                      a property or subset.\n   * @param {IndexNode} index             IndexNode containing ranges\n   */\n\n  function AccessorNode(object, index) {\n    if (!(this instanceof AccessorNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (!(0, _is.isNode)(object)) {\n      throw new TypeError('Node expected for parameter \"object\"');\n    }\n\n    if (!(0, _is.isIndexNode)(index)) {\n      throw new TypeError('IndexNode expected for parameter \"index\"');\n    }\n\n    this.object = object || null;\n    this.index = index; // readonly property name\n\n    Object.defineProperty(this, 'name', {\n      get: function () {\n        if (this.index) {\n          return this.index.isObjectProperty() ? this.index.getObjectProperty() : '';\n        } else {\n          return this.object.name || '';\n        }\n      }.bind(this),\n      set: function set() {\n        throw new Error('Cannot assign a new name, name is read-only');\n      }\n    });\n  }\n\n  AccessorNode.prototype = new Node();\n  AccessorNode.prototype.type = 'AccessorNode';\n  AccessorNode.prototype.isAccessorNode = true;\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n  AccessorNode.prototype._compile = function (math, argNames) {\n    var evalObject = this.object._compile(math, argNames);\n\n    var evalIndex = this.index._compile(math, argNames);\n\n    if (this.index.isObjectProperty()) {\n      var prop = this.index.getObjectProperty();\n      return function evalAccessorNode(scope, args, context) {\n        return (0, _customs.getSafeProperty)(evalObject(scope, args, context), prop);\n      };\n    } else {\n      return function evalAccessorNode(scope, args, context) {\n        var object = evalObject(scope, args, context);\n        var index = evalIndex(scope, args, object); // we pass object here instead of context\n\n        return access(object, index);\n      };\n    }\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  AccessorNode.prototype.forEach = function (callback) {\n    callback(this.object, 'object', this);\n    callback(this.index, 'index', this);\n  };\n  /**\n   * Create a new AccessorNode having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node): Node} callback\n   * @returns {AccessorNode} Returns a transformed copy of the node\n   */\n\n\n  AccessorNode.prototype.map = function (callback) {\n    return new AccessorNode(this._ifNode(callback(this.object, 'object', this)), this._ifNode(callback(this.index, 'index', this)));\n  };\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {AccessorNode}\n   */\n\n\n  AccessorNode.prototype.clone = function () {\n    return new AccessorNode(this.object, this.index);\n  };\n  /**\n   * Get string representation\n   * @param {Object} options\n   * @return {string}\n   */\n\n\n  AccessorNode.prototype._toString = function (options) {\n    var object = this.object.toString(options);\n\n    if (needParenthesis(this.object)) {\n      object = '(' + object + ')';\n    }\n\n    return object + this.index.toString(options);\n  };\n  /**\n   * Get HTML representation\n   * @param {Object} options\n   * @return {string}\n   */\n\n\n  AccessorNode.prototype.toHTML = function (options) {\n    var object = this.object.toHTML(options);\n\n    if (needParenthesis(this.object)) {\n      object = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + object + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n    }\n\n    return object + this.index.toHTML(options);\n  };\n  /**\n   * Get LaTeX representation\n   * @param {Object} options\n   * @return {string}\n   */\n\n\n  AccessorNode.prototype._toTex = function (options) {\n    var object = this.object.toTex(options);\n\n    if (needParenthesis(this.object)) {\n      object = '\\\\left(\\' + object + \\'\\\\right)';\n    }\n\n    return object + this.index.toTex(options);\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  AccessorNode.prototype.toJSON = function () {\n    return {\n      mathjs: 'AccessorNode',\n      object: this.object,\n      index: this.index\n    };\n  };\n  /**\n   * Instantiate an AccessorNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"AccessorNode\", object: ..., index: ...}`,\n   *                       where mathjs is optional\n   * @returns {AccessorNode}\n   */\n\n\n  AccessorNode.fromJSON = function (json) {\n    return new AccessorNode(json.object, json.index);\n  };\n  /**\n   * Are parenthesis needed?\n   * @private\n   */\n\n\n  function needParenthesis(node) {\n    // TODO: maybe make a method on the nodes which tells whether they need parenthesis?\n    return !((0, _is.isAccessorNode)(node) || (0, _is.isArrayNode)(node) || (0, _is.isConstantNode)(node) || (0, _is.isFunctionNode)(node) || (0, _is.isObjectNode)(node) || (0, _is.isParenthesisNode)(node) || (0, _is.isSymbolNode)(node));\n  }\n\n  return AccessorNode;\n}, {\n  isClass: true,\n  isNode: true\n});\nexports.createAccessorNode = createAccessorNode;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createAccessorNode","_is","_customs","_factory","_access","factory","name","dependencies","_ref","AccessorNode","object","index","SyntaxError","isNode","TypeError","isIndexNode","get","isObjectProperty","getObjectProperty","bind","set","Error","needParenthesis","node","isAccessorNode","isArrayNode","isConstantNode","isFunctionNode","isObjectNode","isParenthesisNode","isSymbolNode","subset","Node","access","accessFactory","prototype","type","_compile","AccessorNode.prototype._compile","math","argNames","evalObject","evalIndex","prop","evalAccessorNode","scope","args","context","getSafeProperty","forEach","AccessorNode.prototype.forEach","callback","map","AccessorNode.prototype.map","_ifNode","clone","AccessorNode.prototype.clone","_toString","AccessorNode.prototype._toString","options","toString","toHTML","AccessorNode.prototype.toHTML","_toTex","AccessorNode.prototype._toTex","toTex","toJSON","AccessorNode.prototype.toJSON","mathjs","fromJSON","AccessorNode.fromJSON","json","isClass"]
}
