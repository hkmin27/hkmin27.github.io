{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$arithmetic$round.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/function/arithmetic/round.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$arithmetic$round\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRoundNumber = exports.createRound = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _collection = require(\"../../utils/collection.js\");\n\nvar _number = require(\"../../utils/number.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm12.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar NO_INT = 'Number of decimals in function round must be an integer';\nvar name = 'round';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'BigNumber', 'DenseMatrix'];\nvar createRound = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      zeros = _ref.zeros,\n      BigNumber = _ref.BigNumber,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm11 = (0, _algorithm.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm12 = (0, _algorithm2.createAlgorithm12)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm14 = (0, _algorithm3.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Round a value towards the nearest integer.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.round(x)\n   *    math.round(x, n)\n   *\n   * Examples:\n   *\n   *    math.round(3.22)             // returns number 3\n   *    math.round(3.82)             // returns number 4\n   *    math.round(-4.2)             // returns number -4\n   *    math.round(-4.7)             // returns number -5\n   *    math.round(3.22, 1)          // returns number 3.2\n   *    math.round(3.88, 1)          // returns number 3.9\n   *    math.round(-4.21, 1)         // returns number -4.2\n   *    math.round(-4.71, 1)         // returns number -4.7\n   *    math.round(math.pi, 3)       // returns number 3.142\n   *    math.round(123.45678, 2)     // returns number 123.46\n   *\n   *    const c = math.complex(3.2, -2.7)\n   *    math.round(c)                // returns Complex 3 - 3i\n   *\n   *    math.round([3.2, 3.8, -4.7]) // returns Array [3, 4, -5]\n   *\n   * See also:\n   *\n   *    ceil, fix, floor\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\n   */\n\n  return typed(name, _objectSpread(_objectSpread({}, roundNumberSignatures), {}, {\n    Complex: function Complex(x) {\n      return x.round();\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      if (n % 1) {\n        throw new TypeError(NO_INT);\n      }\n\n      return x.round(n);\n    },\n    'Complex, BigNumber': function ComplexBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n\n      var _n = n.toNumber();\n\n      return x.round(_n);\n    },\n    'number, BigNumber': function numberBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n\n      return new BigNumber(x).toDecimalPlaces(n.toNumber());\n    },\n    BigNumber: function BigNumber(x) {\n      return x.toDecimalPlaces(0);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n\n      return x.toDecimalPlaces(n.toNumber());\n    },\n    Fraction: function Fraction(x) {\n      return x.round();\n    },\n    'Fraction, number': function FractionNumber(x, n) {\n      if (n % 1) {\n        throw new TypeError(NO_INT);\n      }\n\n      return x.round(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since round(0) = 0\n      return (0, _collection.deepMap)(x, this, true);\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | Complex | BigNumber, SparseMatrix': function numberComplexBigNumberSparseMatrix(x, y) {\n      // check scalar is zero\n      if (equalScalar(x, 0)) {\n        // do not execute algorithm, result will be a zero matrix\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm12(y, x, this, true);\n    },\n    'number | Complex | BigNumber, DenseMatrix': function numberComplexBigNumberDenseMatrix(x, y) {\n      // check scalar is zero\n      if (equalScalar(x, 0)) {\n        // do not execute algorithm, result will be a zero matrix\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  }));\n});\nexports.createRound = createRound;\nvar roundNumberSignatures = {\n  number: _index.roundNumber,\n  'number, number': function numberNumber(x, n) {\n    if (!(0, _number.isInteger)(n)) {\n      throw new TypeError(NO_INT);\n    }\n\n    if (n < 0 || n > 15) {\n      throw new Error('Number of decimals in function round must be in te range of 0-15');\n    }\n\n    return (0, _index.roundNumber)(x, n);\n  }\n};\nvar createRoundNumber = /* #__PURE__ */(0, _factory.factory)(name, ['typed'], function (_ref2) {\n  var typed = _ref2.typed;\n  return typed(name, roundNumberSignatures);\n});\nexports.createRoundNumber = createRoundNumber;\n};"],
"names":["shadow$provide","global","require","module","exports","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","defineProperty","value","configurable","writable","getOwnPropertyDescriptors","defineProperties","createRoundNumber","createRound","_factory","_collection","_number","_algorithm","_algorithm2","_algorithm3","_index","factory","name","dependencies","_ref","typed","matrix","equalScalar","zeros","BigNumber","DenseMatrix","algorithm11","createAlgorithm11","algorithm12","createAlgorithm12","algorithm14","createAlgorithm14","roundNumberSignatures","Complex","x","round","ComplexNumber","n","TypeError","NO_INT","ComplexBigNumber","isInteger","_n","toNumber","numberBigNumber","toDecimalPlaces","BigNumberBigNumber","Fraction","FractionNumber","ArrayMatrix","deepMap","SparseMatrixNumberBigNumber","y","DenseMatrixNumberBigNumber","numberComplexBigNumberSparseMatrix","size","storage","numberComplexBigNumberDenseMatrix","ArrayNumberBigNumber","valueOf","numberComplexBigNumberArray","number","roundNumber","numberNumber","Error","_ref2"]
}
