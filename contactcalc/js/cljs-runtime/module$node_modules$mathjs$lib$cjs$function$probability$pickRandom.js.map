{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$probability$pickRandom.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/function/probability/pickRandom.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$probability$pickRandom\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPickRandom = void 0;\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _is = require(\"../../utils/is.js\");\n\nvar _seededRNG = require(\"./util/seededRNG.js\");\n\nvar name = 'pickRandom';\nvar dependencies = ['typed', 'config', '?on'];\nvar createPickRandom = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      on = _ref.on;\n  // seeded pseudo random number generator\n  var rng = (0, _seededRNG.createRng)(config.randomSeed);\n\n  if (on) {\n    on('config', function (curr, prev) {\n      if (curr.randomSeed !== prev.randomSeed) {\n        rng = (0, _seededRNG.createRng)(curr.randomSeed);\n      }\n    });\n  }\n  /**\n   * Random pick one or more values from a one dimensional array.\n   * Array elements are picked using a random function with uniform or weighted distribution.\n   *\n   * Syntax:\n   *\n   *     math.pickRandom(array)\n   *     math.pickRandom(array, number)\n   *     math.pickRandom(array, weights)\n   *     math.pickRandom(array, number, weights)\n   *     math.pickRandom(array, weights, number)\n   *     math.pickRandom(array, { weights, number, elementWise })\n   *\n   * Examples:\n   *\n   *     math.pickRandom([3, 6, 12, 2])                  // returns one of the values in the array\n   *     math.pickRandom([3, 6, 12, 2], 2)               // returns an array of two of the values in the array\n   *     math.pickRandom([3, 6, 12, 2], { number: 2 })   // returns an array of two of the values in the array\n   *     math.pickRandom([3, 6, 12, 2], [1, 3, 2, 1])    // returns one of the values in the array with weighted distribution\n   *     math.pickRandom([3, 6, 12, 2], 2, [1, 3, 2, 1]) // returns an array of two of the values in the array with weighted distribution\n   *     math.pickRandom([3, 6, 12, 2], [1, 3, 2, 1], 2) // returns an array of two of the values in the array with weighted distribution\n   *\n   *     math.pickRandom([{x: 1.0, y: 2.0}, {x: 1.1, y: 2.0}], { elementWise: false })\n   *         // returns one of the items in the array\n   *\n   * See also:\n   *\n   *     random, randomInt\n   *\n   * @param {Array | Matrix} array     A one dimensional array\n   * @param {Int} number               An int or float\n   * @param {Array | Matrix} weights   An array of ints or floats\n   * @return {number | Array}          Returns a single random value from array when number is 1 or undefined.\n   *                                   Returns an array with the configured number of elements when number is > 1.\n   */\n\n\n  return typed({\n    'Array | Matrix': function ArrayMatrix(possibles) {\n      return _pickRandom(possibles, {});\n    },\n    'Array | Matrix, Object': function ArrayMatrixObject(possibles, options) {\n      return _pickRandom(possibles, options);\n    },\n    'Array | Matrix, number': function ArrayMatrixNumber(possibles, number) {\n      return _pickRandom(possibles, {\n        number: number\n      });\n    },\n    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(possibles, weights) {\n      return _pickRandom(possibles, {\n        weights: weights\n      });\n    },\n    'Array | Matrix, Array | Matrix, number': function ArrayMatrixArrayMatrixNumber(possibles, weights, number) {\n      return _pickRandom(possibles, {\n        number: number,\n        weights: weights\n      });\n    },\n    'Array | Matrix, number, Array | Matrix': function ArrayMatrixNumberArrayMatrix(possibles, number, weights) {\n      return _pickRandom(possibles, {\n        number: number,\n        weights: weights\n      });\n    }\n  });\n  /**\n   * @param {Array | Matrix} possibles\n   * @param {{\n   *   number?: number,\n   *   weights?: Array | Matrix,\n   *   elementWise: boolean\n   * }} options\n   * @returns {number | Array}\n   * @private\n   */\n\n  function _pickRandom(possibles, _ref2) {\n    var number = _ref2.number,\n        weights = _ref2.weights,\n        _ref2$elementWise = _ref2.elementWise,\n        elementWise = _ref2$elementWise === void 0 ? true : _ref2$elementWise;\n    var single = typeof number === 'undefined';\n\n    if (single) {\n      number = 1;\n    }\n\n    var createMatrix = (0, _is.isMatrix)(possibles) ? possibles.create : (0, _is.isMatrix)(weights) ? weights.create : null;\n    possibles = possibles.valueOf(); // get Array\n\n    if (weights) {\n      weights = weights.valueOf(); // get Array\n    }\n\n    if (elementWise === true) {\n      possibles = (0, _array.flatten)(possibles);\n      weights = (0, _array.flatten)(weights);\n    }\n\n    var totalWeights = 0;\n\n    if (typeof weights !== 'undefined') {\n      if (weights.length !== possibles.length) {\n        throw new Error('Weights must have the same length as possibles');\n      }\n\n      for (var i = 0, len = weights.length; i < len; i++) {\n        if (!(0, _is.isNumber)(weights[i]) || weights[i] < 0) {\n          throw new Error('Weights must be an array of positive numbers');\n        }\n\n        totalWeights += weights[i];\n      }\n    }\n\n    var length = possibles.length;\n    var result = [];\n    var pick;\n\n    while (result.length < number) {\n      if (typeof weights === 'undefined') {\n        pick = possibles[Math.floor(rng() * length)];\n      } else {\n        var randKey = rng() * totalWeights;\n\n        for (var _i = 0, _len = possibles.length; _i < _len; _i++) {\n          randKey -= weights[_i];\n\n          if (randKey < 0) {\n            pick = possibles[_i];\n            break;\n          }\n        }\n      }\n\n      result.push(pick);\n    }\n\n    return single ? result[0] : createMatrix ? createMatrix(result) : result;\n  }\n});\nexports.createPickRandom = createPickRandom;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createPickRandom","_array","_factory","_is","_seededRNG","factory","name","dependencies","_ref","_pickRandom","possibles","_ref2","number","weights","_ref2$elementWise","elementWise","single","createMatrix","isMatrix","create","valueOf","flatten","totalWeights","length","Error","i","len","isNumber","result","pick","Math","floor","rng","randKey","_i","_len","push","typed","config","on","createRng","randomSeed","curr","prev","ArrayMatrix","ArrayMatrixObject","options","ArrayMatrixNumber","ArrayMatrixArrayMatrix","ArrayMatrixArrayMatrixNumber","ArrayMatrixNumberArrayMatrix"]
}
