shadow$provide.module$node_modules$mathjs$lib$cjs$type$matrix$Range=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createRangeClass=void 0;var _is=require("module$node_modules$mathjs$lib$cjs$utils$is"),_number=require("module$node_modules$mathjs$lib$cjs$utils$number");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("Range",[],function(){function Range(start,end,step){if(!(this instanceof Range))throw new SyntaxError("Constructor must be called with the new operator");
var hasStart=null!==start&&void 0!==start,hasEnd=null!==end&&void 0!==end,hasStep=null!==step&&void 0!==step;if(hasStart)if((0,_is.isBigNumber)(start))start=start.toNumber();else if("number"!==typeof start)throw new TypeError("Parameter start must be a number");if(hasEnd)if((0,_is.isBigNumber)(end))end=end.toNumber();else if("number"!==typeof end)throw new TypeError("Parameter end must be a number");if(hasStep)if((0,_is.isBigNumber)(step))step=step.toNumber();else if("number"!==typeof step)throw new TypeError("Parameter step must be a number");
this.start=hasStart?parseFloat(start):0;this.end=hasEnd?parseFloat(end):0;this.step=hasStep?parseFloat(step):1}Range.prototype.type="Range";Range.prototype.isRange=!0;Range.parse=function(str){if("string"!==typeof str)return null;str=str.split(":").map(function(arg){return parseFloat(arg)});if(str.some(function(num){return isNaN(num)}))return null;switch(str.length){case 2:return new Range(str[0],str[1]);case 3:return new Range(str[0],str[2],str[1]);default:return null}};Range.prototype.clone=function(){return new Range(this.start,
this.end,this.step)};Range.prototype.size=function(){var len=0,step=this.step,diff=this.end-this.start;(0,_number.sign)(step)===(0,_number.sign)(diff)?len=Math.ceil(diff/step):0===diff&&(len=0);isNaN(len)&&(len=0);return[len]};Range.prototype.min=function(){var size=this.size()[0];if(0<size)return 0<this.step?this.start:this.start+(size-1)*this.step};Range.prototype.max=function(){var size=this.size()[0];if(0<size)return 0<this.step?this.start+(size-1)*this.step:this.start};Range.prototype.forEach=
function(callback){var x=this.start,step=this.step,end=this.end,i=0;if(0<step)for(;x<end;)callback(x,[i],this),x+=step,i++;else if(0>step)for(;x>end;)callback(x,[i],this),x+=step,i++};Range.prototype.map=function(callback){var array=[];this.forEach(function(value,index,obj){array[index[0]]=callback(value,index,obj)});return array};Range.prototype.toArray=function(){var array=[];this.forEach(function(value,index){array[index[0]]=value});return array};Range.prototype.valueOf=function(){return this.toArray()};
Range.prototype.format=function(options){var str=(0,_number.format)(this.start,options);1!==this.step&&(str+=":"+(0,_number.format)(this.step,options));return str+=":"+(0,_number.format)(this.end,options)};Range.prototype.toString=function(){return this.format()};Range.prototype.toJSON=function(){return{mathjs:"Range",start:this.start,end:this.end,step:this.step}};Range.fromJSON=function(json){return new Range(json.start,json.end,json.step)};return Range},{isClass:!0});exports.createRangeClass=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$type$matrix$Range.js.map
