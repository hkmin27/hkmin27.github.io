{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$transform$mean_transform.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,sEAAA,CAA2F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGnIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,mBAAR,CAA8B,IAAK,EAE/BC,OAAAA,CAAWP,OAAA,CAAQ,kDAAR,CAEf,KAAIQ,gBAAkBR,OAAA,CAAQ,8EAAR,CAAtB,CAEIS,MAAQT,OAAA,CAAQ,6DAAR,CAFZ,CAIIU,mBAAqBV,OAAA,CAAQ,iFAAR,CAIrBM;OAAAA,CAAqC,CAAC,CAAA,CAAGC,MAASI,CAAAA,OAAb,EAF9BC,MAE8B,CADtBC,CAAC,OAADA,CAAU,KAAVA,CAAiB,QAAjBA,CACsB,CAA0C,QAAS,CAACC,IAAD,CAAO,CAAA,IAC7FC,MAAQD,IAAKC,CAAAA,KADgF,CAE7FC,IAAMF,IAAKE,CAAAA,GACXC,KAAAA,CAASH,IAAKG,CAAAA,MAClB,KAAIC,KAAO,CAAC,CAAA,CAAGT,KAAMU,CAAAA,UAAV,EAAsB,CAC/BJ,MAAOA,KADwB,CAE/BC,IAAKA,GAF0B,CAG/BC,OAAQA,IAHuB,CAAtB,CAaX,OAAOF,MAAA,CAAM,MAAN,CAAc,CACnB,SAAUK,QAAY,CAACC,IAAD,CAAO,CAC3BA,IAAA,CAAO,CAAC,CAAA,CAAGX,kBAAmBY,CAAAA,iBAAvB,EAA0CD,IAA1C,CAEP,IAAI,CACF,MAAOH,KAAKK,CAAAA,KAAL,CAAW,IAAX,CAAiBF,IAAjB,CADL,CAEF,MAAOG,GAAP,CAAY,CACZ,KAAM,CAAC,CAAA,CAAGhB,eAAgBiB,CAAAA,cAApB,EAAoCD,GAApC,CAAN,CADY,CALa,CADV,CAAd,CAjB0F,CAA1D,CA4BtC,CACDE,oBAAqB,CAAA,CADpB,CA5BsC,CA+BzCxB,QAAQI,CAAAA,mBAAR,CAA8BA,OAjDqG;",
"sources":["node_modules/mathjs/lib/cjs/expression/transform/mean.transform.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$transform$mean_transform\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createMeanTransform = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _errorTransform = require(\"./utils/errorTransform.js\");\n\nvar _mean = require(\"../../function/statistics/mean.js\");\n\nvar _lastDimToZeroBase = require(\"./utils/lastDimToZeroBase.js\");\n\nvar name = 'mean';\nvar dependencies = ['typed', 'add', 'divide'];\nvar createMeanTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      add = _ref.add,\n      divide = _ref.divide;\n  var mean = (0, _mean.createMean)({\n    typed: typed,\n    add: add,\n    divide: divide\n  });\n  /**\n   * Attach a transform function to math.mean\n   * Adds a property transform containing the transform function.\n   *\n   * This transform changed the last `dim` parameter of function mean\n   * from one-based to zero based\n   */\n\n  return typed('mean', {\n    '...any': function any(args) {\n      args = (0, _lastDimToZeroBase.lastDimToZeroBase)(args);\n\n      try {\n        return mean.apply(null, args);\n      } catch (err) {\n        throw (0, _errorTransform.errorTransform)(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});\nexports.createMeanTransform = createMeanTransform;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createMeanTransform","_factory","_errorTransform","_mean","_lastDimToZeroBase","factory","name","dependencies","_ref","typed","add","divide","mean","createMean","any","args","lastDimToZeroBase","apply","err","errorTransform","isTransformFunction"]
}
