shadow$provide.module$node_modules$mathjs$lib$cjs$function$relational$equalScalar=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createEqualScalarNumber=exports.createEqualScalar=void 0;var _nearlyEqual=require("module$node_modules$mathjs$lib$cjs$utils$bignumber$nearlyEqual"),_number=require("module$node_modules$mathjs$lib$cjs$utils$number");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _complex=require("module$node_modules$mathjs$lib$cjs$utils$complex");
require=(0,global.factory)("equalScalar",["typed","config"],function(_ref){var typed=_ref.typed,config=_ref.config;return typed("equalScalar",{"boolean, boolean":function(x,y){return x===y},"number, number":function(x,y){return(0,_number.nearlyEqual)(x,y,config.epsilon)},"BigNumber, BigNumber":function(x,y){return x.eq(y)||(0,_nearlyEqual.nearlyEqual)(x,y,config.epsilon)},"Fraction, Fraction":function(x,y){return x.equals(y)},"Complex, Complex":function(x,y){return(0,_complex.complexEquals)(x,y,config.epsilon)},
"Unit, Unit":function(x,y){if(!x.equalBase(y))throw Error("Cannot compare units with different base");return this(x.value,y.value)}})});exports.createEqualScalar=require;require=(0,global.factory)("equalScalar",["typed","config"],function(_ref2){var typed=_ref2.typed,config=_ref2.config;return typed("equalScalar",{"number, number":function(x,y){return(0,_number.nearlyEqual)(x,y,config.epsilon)}})});exports.createEqualScalarNumber=require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$relational$equalScalar.js.map
