{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$node$IndexNode.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/expression/node/IndexNode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$node$IndexNode\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createIndexNode = void 0;\n\nvar _is = require(\"../../utils/is.js\");\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _string = require(\"../../utils/string.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _customs = require(\"../../utils/customs.js\");\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar name = 'IndexNode';\nvar dependencies = ['Range', 'Node', 'size'];\nvar createIndexNode = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var Range = _ref.Range,\n      Node = _ref.Node,\n      size = _ref.size;\n\n  /**\n   * @constructor IndexNode\n   * @extends Node\n   *\n   * Describes a subset of a matrix or an object property.\n   * Cannot be used on its own, needs to be used within an AccessorNode or\n   * AssignmentNode.\n   *\n   * @param {Node[]} dimensions\n   * @param {boolean} [dotNotation=false]  Optional property describing whether\n   *                                       this index was written using dot\n   *                                       notation like `a.b`, or using bracket\n   *                                       notation like `a[\"b\"]` (default).\n   *                                       Used to stringify an IndexNode.\n   */\n  function IndexNode(dimensions, dotNotation) {\n    if (!(this instanceof IndexNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.dimensions = dimensions;\n    this.dotNotation = dotNotation || false; // validate input\n\n    if (!Array.isArray(dimensions) || !dimensions.every(_is.isNode)) {\n      throw new TypeError('Array containing Nodes expected for parameter \"dimensions\"');\n    }\n\n    if (this.dotNotation && !this.isObjectProperty()) {\n      throw new Error('dotNotation only applicable for object properties');\n    }\n  }\n\n  IndexNode.prototype = new Node();\n  IndexNode.prototype.type = 'IndexNode';\n  IndexNode.prototype.isIndexNode = true;\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n  IndexNode.prototype._compile = function (math, argNames) {\n    // TODO: implement support for bignumber (currently bignumbers are silently\n    //       reduced to numbers when changing the value to zero-based)\n    // TODO: Optimization: when the range values are ConstantNodes,\n    //       we can beforehand resolve the zero-based value\n    // optimization for a simple object property\n    var evalDimensions = (0, _array.map)(this.dimensions, function (range, i) {\n      if ((0, _is.isRangeNode)(range)) {\n        if (range.needsEnd()) {\n          // create a range containing end (like '4:end')\n          var childArgNames = Object.create(argNames);\n          childArgNames.end = true;\n\n          var evalStart = range.start._compile(math, childArgNames);\n\n          var evalEnd = range.end._compile(math, childArgNames);\n\n          var evalStep = range.step ? range.step._compile(math, childArgNames) : function () {\n            return 1;\n          };\n          return function evalDimension(scope, args, context) {\n            var s = size(context).valueOf();\n            var childArgs = Object.create(args);\n            childArgs.end = s[i];\n            return createRange(evalStart(scope, childArgs, context), evalEnd(scope, childArgs, context), evalStep(scope, childArgs, context));\n          };\n        } else {\n          // create range\n          var _evalStart = range.start._compile(math, argNames);\n\n          var _evalEnd = range.end._compile(math, argNames);\n\n          var _evalStep = range.step ? range.step._compile(math, argNames) : function () {\n            return 1;\n          };\n\n          return function evalDimension(scope, args, context) {\n            return createRange(_evalStart(scope, args, context), _evalEnd(scope, args, context), _evalStep(scope, args, context));\n          };\n        }\n      } else if ((0, _is.isSymbolNode)(range) && range.name === 'end') {\n        // SymbolNode 'end'\n        var _childArgNames = Object.create(argNames);\n\n        _childArgNames.end = true;\n\n        var evalRange = range._compile(math, _childArgNames);\n\n        return function evalDimension(scope, args, context) {\n          var s = size(context).valueOf();\n          var childArgs = Object.create(args);\n          childArgs.end = s[i];\n          return evalRange(scope, childArgs, context);\n        };\n      } else {\n        // ConstantNode\n        var _evalRange = range._compile(math, argNames);\n\n        return function evalDimension(scope, args, context) {\n          return _evalRange(scope, args, context);\n        };\n      }\n    });\n    var index = (0, _customs.getSafeProperty)(math, 'index');\n    return function evalIndexNode(scope, args, context) {\n      var dimensions = (0, _array.map)(evalDimensions, function (evalDimension) {\n        return evalDimension(scope, args, context);\n      });\n      return index.apply(void 0, _toConsumableArray(dimensions));\n    };\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  IndexNode.prototype.forEach = function (callback) {\n    for (var i = 0; i < this.dimensions.length; i++) {\n      callback(this.dimensions[i], 'dimensions[' + i + ']', this);\n    }\n  };\n  /**\n   * Create a new IndexNode having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node): Node} callback\n   * @returns {IndexNode} Returns a transformed copy of the node\n   */\n\n\n  IndexNode.prototype.map = function (callback) {\n    var dimensions = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      dimensions[i] = this._ifNode(callback(this.dimensions[i], 'dimensions[' + i + ']', this));\n    }\n\n    return new IndexNode(dimensions, this.dotNotation);\n  };\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {IndexNode}\n   */\n\n\n  IndexNode.prototype.clone = function () {\n    return new IndexNode(this.dimensions.slice(0), this.dotNotation);\n  };\n  /**\n   * Test whether this IndexNode contains a single property name\n   * @return {boolean}\n   */\n\n\n  IndexNode.prototype.isObjectProperty = function () {\n    return this.dimensions.length === 1 && (0, _is.isConstantNode)(this.dimensions[0]) && typeof this.dimensions[0].value === 'string';\n  };\n  /**\n   * Returns the property name if IndexNode contains a property.\n   * If not, returns null.\n   * @return {string | null}\n   */\n\n\n  IndexNode.prototype.getObjectProperty = function () {\n    return this.isObjectProperty() ? this.dimensions[0].value : null;\n  };\n  /**\n   * Get string representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  IndexNode.prototype._toString = function (options) {\n    // format the parameters like \"[1, 0:5]\"\n    return this.dotNotation ? '.' + this.getObjectProperty() : '[' + this.dimensions.join(', ') + ']';\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  IndexNode.prototype.toJSON = function () {\n    return {\n      mathjs: 'IndexNode',\n      dimensions: this.dimensions,\n      dotNotation: this.dotNotation\n    };\n  };\n  /**\n   * Instantiate an IndexNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"IndexNode\", dimensions: [...], dotNotation: false}`,\n   *                       where mathjs is optional\n   * @returns {IndexNode}\n   */\n\n\n  IndexNode.fromJSON = function (json) {\n    return new IndexNode(json.dimensions, json.dotNotation);\n  };\n  /**\n   * Get HTML representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  IndexNode.prototype.toHTML = function (options) {\n    // format the parameters like \"[1, 0:5]\"\n    var dimensions = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      dimensions[i] = this.dimensions[i].toHTML();\n    }\n\n    if (this.dotNotation) {\n      return '<span class=\"math-operator math-accessor-operator\">.</span>' + '<span class=\"math-symbol math-property\">' + (0, _string.escape)(this.getObjectProperty()) + '</span>';\n    } else {\n      return '<span class=\"math-parenthesis math-square-parenthesis\">[</span>' + dimensions.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-parenthesis math-square-parenthesis\">]</span>';\n    }\n  };\n  /**\n   * Get LaTeX representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  IndexNode.prototype._toTex = function (options) {\n    var dimensions = this.dimensions.map(function (range) {\n      return range.toTex(options);\n    });\n    return this.dotNotation ? '.' + this.getObjectProperty() + '' : '_{' + dimensions.join(',') + '}';\n  }; // helper function to create a Range from start, step and end\n\n\n  function createRange(start, end, step) {\n    return new Range((0, _is.isBigNumber)(start) ? start.toNumber() : start, (0, _is.isBigNumber)(end) ? end.toNumber() : end, (0, _is.isBigNumber)(step) ? step.toNumber() : step);\n  }\n\n  return IndexNode;\n}, {\n  isClass: true,\n  isNode: true\n});\nexports.createIndexNode = createIndexNode;\n};"],
"names":["shadow$provide","global","require","module","exports","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","Symbol","iterator","Object","iter","from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","TypeError","len","length","i","arr2","defineProperty","value","createIndexNode","_is","_array","_string","_factory","_customs","factory","dependencies","_ref","IndexNode","dimensions","dotNotation","SyntaxError","every","isNode","isObjectProperty","Error","createRange","start","end","step","Range","isBigNumber","toNumber","size","Node","type","isIndexNode","_compile","IndexNode.prototype._compile","math","argNames","evalDimensions","map","range","isRangeNode","needsEnd","childArgNames","create","evalStart","evalEnd","evalStep","evalDimension","scope","args","context","s","valueOf","childArgs","_evalStart","_evalEnd","_evalStep","isSymbolNode","_childArgNames","evalRange","_evalRange","index","getSafeProperty","evalIndexNode","apply","forEach","IndexNode.prototype.forEach","callback","IndexNode.prototype.map","_ifNode","clone","IndexNode.prototype.clone","IndexNode.prototype.isObjectProperty","isConstantNode","getObjectProperty","IndexNode.prototype.getObjectProperty","_toString","IndexNode.prototype._toString","options","join","toJSON","IndexNode.prototype.toJSON","mathjs","fromJSON","IndexNode.fromJSON","json","toHTML","IndexNode.prototype.toHTML","escape","_toTex","IndexNode.prototype._toTex","toTex","isClass"]
}
