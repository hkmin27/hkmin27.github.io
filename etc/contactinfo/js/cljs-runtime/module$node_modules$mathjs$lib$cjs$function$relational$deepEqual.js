shadow$provide.module$node_modules$mathjs$lib$cjs$function$relational$deepEqual=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createDeepEqual=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("deepEqual",["typed","equal"],function(_ref){function _deepEqual(x,y){if(Array.isArray(x)){if(Array.isArray(y)){var len=x.length;if(len!==y.length)return!1;for(var i=0;i<len;i++)if(!_deepEqual(x[i],y[i]))return!1;
return!0}return!1}return Array.isArray(y)?!1:equal(x,y)}var typed=_ref.typed,equal=_ref.equal;return typed("deepEqual",{"any, any":function(x,y){return _deepEqual(x.valueOf(),y.valueOf())}})});exports.createDeepEqual=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$relational$deepEqual.js.map
