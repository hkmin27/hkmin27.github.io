shadow$provide.module$node_modules$mathjs$lib$cjs$expression$node$ObjectNode=function(global,require,module,exports){function _typeof(obj$jscomp$0){"@babel/helpers - typeof";_typeof="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj};return _typeof(obj$jscomp$0)}Object.defineProperty(exports,"__esModule",{value:!0});exports.createObjectNode=
void 0;var _is=require("module$node_modules$mathjs$lib$cjs$utils$is"),_string=require("module$node_modules$mathjs$lib$cjs$utils$string"),_customs=require("module$node_modules$mathjs$lib$cjs$utils$customs"),_object=require("module$node_modules$mathjs$lib$cjs$utils$object");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("ObjectNode",["Node"],function(_ref){function ObjectNode(properties){if(!(this instanceof ObjectNode))throw new SyntaxError("Constructor must be called with the new operator");
this.properties=properties||{};if(properties&&("object"!==_typeof(properties)||!Object.keys(properties).every(function(key){return(0,_is.isNode)(properties[key])})))throw new TypeError("Object containing Nodes expected");}ObjectNode.prototype=new _ref.Node;ObjectNode.prototype.type="ObjectNode";ObjectNode.prototype.isObjectNode=!0;ObjectNode.prototype._compile=function(math,argNames){var evalEntries={},key;for(key in this.properties)if((0,_object.hasOwnProperty)(this.properties,key)){var stringifiedKey=
(0,_string.stringify)(key);stringifiedKey=JSON.parse(stringifiedKey);if(!(0,_customs.isSafeProperty)(this.properties,stringifiedKey))throw Error('No access to property "'+stringifiedKey+'"');evalEntries[stringifiedKey]=this.properties[key]._compile(math,argNames)}return function(scope,args,context){var obj={},_key;for(_key in evalEntries)(0,_object.hasOwnProperty)(evalEntries,_key)&&(obj[_key]=evalEntries[_key](scope,args,context));return obj}};ObjectNode.prototype.forEach=function(callback){for(var key in this.properties)(0,
_object.hasOwnProperty)(this.properties,key)&&callback(this.properties[key],"properties["+(0,_string.stringify)(key)+"]",this)};ObjectNode.prototype.map=function(callback){var properties={},key;for(key in this.properties)(0,_object.hasOwnProperty)(this.properties,key)&&(properties[key]=this._ifNode(callback(this.properties[key],"properties["+(0,_string.stringify)(key)+"]",this)));return new ObjectNode(properties)};ObjectNode.prototype.clone=function(){var properties={},key;for(key in this.properties)(0,
_object.hasOwnProperty)(this.properties,key)&&(properties[key]=this.properties[key]);return new ObjectNode(properties)};ObjectNode.prototype._toString=function(options){var entries=[],key;for(key in this.properties)(0,_object.hasOwnProperty)(this.properties,key)&&entries.push((0,_string.stringify)(key)+": "+this.properties[key].toString(options));return"{"+entries.join(", ")+"}"};ObjectNode.prototype.toJSON=function(){return{mathjs:"ObjectNode",properties:this.properties}};ObjectNode.fromJSON=function(json){return new ObjectNode(json.properties)};
ObjectNode.prototype.toHTML=function(options){var entries=[],key;for(key in this.properties)(0,_object.hasOwnProperty)(this.properties,key)&&entries.push('\x3cspan class\x3d"math-symbol math-property"\x3e'+(0,_string.escape)(key)+'\x3c/span\x3e\x3cspan class\x3d"math-operator math-assignment-operator math-property-assignment-operator math-binary-operator"\x3e:\x3c/span\x3e'+this.properties[key].toHTML(options));return'\x3cspan class\x3d"math-parenthesis math-curly-parenthesis"\x3e{\x3c/span\x3e'+
entries.join('\x3cspan class\x3d"math-separator"\x3e,\x3c/span\x3e')+'\x3cspan class\x3d"math-parenthesis math-curly-parenthesis"\x3e}\x3c/span\x3e'};ObjectNode.prototype._toTex=function(options){var entries=[],key;for(key in this.properties)(0,_object.hasOwnProperty)(this.properties,key)&&entries.push("\\mathbf{"+key+":} \x26 "+this.properties[key].toTex(options)+"\\\\");return"\\left\\{\\begin{array}{ll}".concat(entries.join("\n"),"\\end{array}\\right\\}")};return ObjectNode},{isClass:!0,isNode:!0});
exports.createObjectNode=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$expression$node$ObjectNode.js.map
