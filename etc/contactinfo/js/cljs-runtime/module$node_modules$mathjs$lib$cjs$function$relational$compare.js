shadow$provide.module$node_modules$mathjs$lib$cjs$function$relational$compare=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createCompareNumber=exports.createCompare=void 0;var _nearlyEqual=require("module$node_modules$mathjs$lib$cjs$utils$bignumber$nearlyEqual"),_number=require("module$node_modules$mathjs$lib$cjs$utils$number");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _algorithm=require("module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm03"),
_algorithm2=require("module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm12"),_algorithm3=require("module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm14"),_algorithm4=require("module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm13"),_algorithm5=require("module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm05");require=(0,global.factory)("compare","typed config matrix equalScalar BigNumber Fraction DenseMatrix".split(" "),function(_ref){var typed=_ref.typed,
config=_ref.config,equalScalar=_ref.equalScalar,matrix=_ref.matrix,BigNumber=_ref.BigNumber,Fraction=_ref.Fraction;_ref=_ref.DenseMatrix;var algorithm03=(0,_algorithm.createAlgorithm03)({typed:typed}),algorithm05=(0,_algorithm5.createAlgorithm05)({typed:typed,equalScalar:equalScalar}),algorithm12=(0,_algorithm2.createAlgorithm12)({typed:typed,DenseMatrix:_ref}),algorithm13=(0,_algorithm4.createAlgorithm13)({typed:typed}),algorithm14=(0,_algorithm3.createAlgorithm14)({typed:typed});return typed("compare",
{"boolean, boolean":function(x,y){return x===y?0:x>y?1:-1},"number, number":function(x,y){return(0,_number.nearlyEqual)(x,y,config.epsilon)?0:x>y?1:-1},"BigNumber, BigNumber":function(x,y){return(0,_nearlyEqual.nearlyEqual)(x,y,config.epsilon)?new BigNumber(0):new BigNumber(x.cmp(y))},"Fraction, Fraction":function(x,y){return new Fraction(x.compare(y))},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers");},"Unit, Unit":function(x,y){if(!x.equalBase(y))throw Error("Cannot compare units with different base");
return this(x.value,y.value)},"SparseMatrix, SparseMatrix":function(x,y){return algorithm05(x,y,this)},"SparseMatrix, DenseMatrix":function(x,y){return algorithm03(y,x,this,!0)},"DenseMatrix, SparseMatrix":function(x,y){return algorithm03(x,y,this,!1)},"DenseMatrix, DenseMatrix":function(x,y){return algorithm13(x,y,this)},"Array, Array":function(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function(x,y){return this(matrix(x),y)},"Matrix, Array":function(x,y){return this(x,matrix(y))},
"SparseMatrix, any":function(x,y){return algorithm12(x,y,this,!1)},"DenseMatrix, any":function(x,y){return algorithm14(x,y,this,!1)},"any, SparseMatrix":function(x,y){return algorithm12(y,x,this,!0)},"any, DenseMatrix":function(x,y){return algorithm14(y,x,this,!0)},"Array, any":function(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"any, Array":function(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})});exports.createCompare=require;require=(0,global.factory)("compare",["typed",
"config"],function(_ref2){var typed=_ref2.typed,config=_ref2.config;return typed("compare",{"number, number":function(x,y){return(0,_number.nearlyEqual)(x,y,config.epsilon)?0:x>y?1:-1}})});exports.createCompareNumber=require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$relational$compare.js.map
