shadow$provide.module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm10=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createAlgorithm10=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("algorithm10",["typed","DenseMatrix"],function(_ref){var typed=_ref.typed,DenseMatrix=_ref.DenseMatrix;return function(s,b,callback,inverse){var avalues=s._values,aindex=s._index,aptr=s._ptr,asize=s._size,
adt=s._datatype;if(!avalues)throw Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");s=asize[0];asize=asize[1];var cf=callback;if("string"===typeof adt){var dt=adt;b=typed.convert(b,dt);cf=typed.find(callback,[dt,dt])}callback=[];adt=[];for(var w=[],j=0;j<asize;j++){for(var mark=j+1,k1=aptr[j+1],k=aptr[j];k<k1;k++){var r=aindex[k];adt[r]=avalues[k];w[r]=mark}for(k1=0;k1<s;k1++)0===j&&(callback[k1]=[]),callback[k1][j]=w[k1]===mark?inverse?cf(b,adt[k1]):cf(adt[k1],b):b}return new DenseMatrix({data:callback,
size:[s,asize],datatype:dt})}});exports.createAlgorithm10=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm10.js.map
