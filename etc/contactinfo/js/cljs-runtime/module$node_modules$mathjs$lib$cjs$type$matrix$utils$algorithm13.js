shadow$provide.module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm13=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createAlgorithm13=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _DimensionError=require("module$node_modules$mathjs$lib$cjs$error$DimensionError");require=(0,global.factory)("algorithm13",["typed"],function(_ref){function _iterate(f,level,s,n,av,bv){var cv=[];if(level===s.length-1)for(level=
0;level<n;level++)cv[level]=f(av[level],bv[level]);else for(var j=0;j<n;j++)cv[j]=_iterate(f,level+1,s,s[level+1],av[j],bv[j]);return cv}var typed=_ref.typed;return function(a,b,callback){var adata=a._data,asize=a._size,adt=a._datatype,bdata=b._data,bsize=b._size,bdt=b._datatype;b=[];if(asize.length!==bsize.length)throw new _DimensionError.DimensionError(asize.length,bsize.length);for(var s=0;s<asize.length;s++){if(asize[s]!==bsize[s])throw new RangeError("Dimension mismatch. Matrix A ("+asize+") must match Matrix B ("+
bsize+")");b[s]=asize[s]}asize=callback;if("string"===typeof adt&&adt===bdt){var dt=adt;asize=typed.find(callback,[dt,dt])}callback=0<b.length?_iterate(asize,0,b,b[0],adata,bdata):[];return a.createDenseMatrix({data:callback,size:b,datatype:dt})}});exports.createAlgorithm13=require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm13.js.map
