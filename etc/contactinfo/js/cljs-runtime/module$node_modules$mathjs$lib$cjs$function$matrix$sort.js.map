{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$matrix$sort.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/function/matrix/sort.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$matrix$sort\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSort = void 0;\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'sort';\nvar dependencies = ['typed', 'matrix', 'compare', 'compareNatural'];\nvar createSort = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      compare = _ref.compare,\n      compareNatural = _ref.compareNatural;\n  var compareAsc = compare;\n\n  var compareDesc = function compareDesc(a, b) {\n    return -compare(a, b);\n  };\n  /**\n   * Sort the items in a matrix.\n   *\n   * Syntax:\n   *\n   *    math.sort(x)\n   *    math.sort(x, compare)\n   *\n   * Examples:\n   *\n   *    math.sort([5, 10, 1]) // returns [1, 5, 10]\n   *    math.sort(['C', 'B', 'A', 'D'], math.compareNatural)\n   *    // returns ['A', 'B', 'C', 'D']\n   *\n   *    function sortByLength (a, b) {\n   *      return a.length - b.length\n   *    }\n   *    math.sort(['Langdon', 'Tom', 'Sara'], sortByLength)\n   *    // returns ['Tom', 'Sara', 'Langdon']\n   *\n   * See also:\n   *\n   *    filter, forEach, map, compare, compareNatural\n   *\n   * @param {Matrix | Array} x    A one dimensional matrix or array to sort\n   * @param {Function | 'asc' | 'desc' | 'natural'} [compare='asc']\n   *        An optional _comparator function or name. The function is called as\n   *        `compare(a, b)`, and must return 1 when a > b, -1 when a < b,\n   *        and 0 when a == b.\n   * @return {Matrix | Array} Returns the sorted matrix.\n   */\n\n\n  return typed(name, {\n    Array: function Array(x) {\n      _arrayIsVector(x);\n\n      return x.sort(compareAsc);\n    },\n    Matrix: function Matrix(x) {\n      _matrixIsVector(x);\n\n      return matrix(x.toArray().sort(compareAsc), x.storage());\n    },\n    'Array, function': function ArrayFunction(x, _comparator) {\n      _arrayIsVector(x);\n\n      return x.sort(_comparator);\n    },\n    'Matrix, function': function MatrixFunction(x, _comparator) {\n      _matrixIsVector(x);\n\n      return matrix(x.toArray().sort(_comparator), x.storage());\n    },\n    'Array, string': function ArrayString(x, order) {\n      _arrayIsVector(x);\n\n      return x.sort(_comparator(order));\n    },\n    'Matrix, string': function MatrixString(x, order) {\n      _matrixIsVector(x);\n\n      return matrix(x.toArray().sort(_comparator(order)), x.storage());\n    }\n  });\n  /**\n   * Get the comparator for given order ('asc', 'desc', 'natural')\n   * @param {'asc' | 'desc' | 'natural'} order\n   * @return {Function} Returns a _comparator function\n   */\n\n  function _comparator(order) {\n    if (order === 'asc') {\n      return compareAsc;\n    } else if (order === 'desc') {\n      return compareDesc;\n    } else if (order === 'natural') {\n      return compareNatural;\n    } else {\n      throw new Error('String \"asc\", \"desc\", or \"natural\" expected');\n    }\n  }\n  /**\n   * Validate whether an array is one dimensional\n   * Throws an error when this is not the case\n   * @param {Array} array\n   * @private\n   */\n\n\n  function _arrayIsVector(array) {\n    if ((0, _array.arraySize)(array).length !== 1) {\n      throw new Error('One dimensional array expected');\n    }\n  }\n  /**\n   * Validate whether a matrix is one dimensional\n   * Throws an error when this is not the case\n   * @param {Matrix} matrix\n   * @private\n   */\n\n\n  function _matrixIsVector(matrix) {\n    if (matrix.size().length !== 1) {\n      throw new Error('One dimensional matrix expected');\n    }\n  }\n});\nexports.createSort = createSort;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createSort","_array","_factory","factory","name","dependencies","_ref","_comparator","order","compareAsc","compareDesc","compareNatural","Error","_arrayIsVector","array","arraySize","length","_matrixIsVector","matrix","size","typed","compare","a","b","Array","x","sort","Matrix","toArray","storage","ArrayFunction","MatrixFunction","ArrayString","MatrixString"]
}
