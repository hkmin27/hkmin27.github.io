shadow$provide.module$node_modules$mathjs$lib$cjs$type$complex$Complex=function(global,require,module,exports){function _typeof(obj$jscomp$0){"@babel/helpers - typeof";_typeof="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj};return _typeof(obj$jscomp$0)}Object.defineProperty(exports,"__esModule",{value:!0});exports.createComplexClass=
void 0;var _complex=function(obj){return obj&&obj.__esModule?obj:{"default":obj}}(require("module$node_modules$complex_DOT_js$complex")),_number=require("module$node_modules$mathjs$lib$cjs$utils$number"),_is=require("module$node_modules$mathjs$lib$cjs$utils$is");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("Complex",[],function(){_complex["default"].prototype.type="Complex";_complex["default"].prototype.isComplex=!0;_complex["default"].prototype.toJSON=
function(){return{mathjs:"Complex",re:this.re,im:this.im}};_complex["default"].prototype.toPolar=function(){return{r:this.abs(),phi:this.arg()}};_complex["default"].prototype.format=function(options){var im=this.im,re=this.re,strRe=(0,_number.format)(this.re,options),strIm=(0,_number.format)(this.im,options);options=(0,_is.isNumber)(options)?options:options?options.precision:null;null!==options&&(options=Math.pow(10,-options),Math.abs(re/im)<options&&(re=0),Math.abs(im/re)<options&&(im=0));return 0===
im?strRe:0===re?1===im?"i":-1===im?"-i":strIm+"i":0>im?-1===im?strRe+" - i":strRe+" - "+strIm.substring(1)+"i":1===im?strRe+" + i":strRe+" + "+strIm+"i"};_complex["default"].fromPolar=function(args){switch(arguments.length){case 1:var arg=arguments[0];if("object"===_typeof(arg))return(0,_complex["default"])(arg);throw new TypeError("Input has to be an object with r and phi keys.");case 2:arg=arguments[0];var phi=arguments[1];if((0,_is.isNumber)(arg)){(0,_is.isUnit)(phi)&&phi.hasBase("ANGLE")&&(phi=
phi.toNumber("rad"));if((0,_is.isNumber)(phi))return new _complex["default"]({r:arg,phi:phi});throw new TypeError("Phi is not a number nor an angle unit.");}throw new TypeError("Radius r is not a number.");default:throw new SyntaxError("Wrong number of arguments in function fromPolar");}};_complex["default"].prototype.valueOf=_complex["default"].prototype.toString;_complex["default"].fromJSON=function(json){return new _complex["default"](json)};_complex["default"].compare=function(a,b){return a.re>
b.re?1:a.re<b.re?-1:a.im>b.im?1:a.im<b.im?-1:0};return _complex["default"]},{isClass:!0});exports.createComplexClass=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$type$complex$Complex.js.map
