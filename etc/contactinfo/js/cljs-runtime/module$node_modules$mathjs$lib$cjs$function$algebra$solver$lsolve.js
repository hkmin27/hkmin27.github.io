shadow$provide.module$node_modules$mathjs$lib$cjs$function$algebra$solver$lsolve=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createLsolve=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _solveValidation=require("module$node_modules$mathjs$lib$cjs$function$algebra$solver$utils$solveValidation");require=(0,global.factory)("lsolve","typed matrix divideScalar multiplyScalar subtract equalScalar DenseMatrix".split(" "),
function(_ref){function _denseForwardSubstitution(m,b){b=solveValidation(m,b,!0);b=b._data;var rows=m._size[0],columns=m._size[1],x=[];m=m._data;for(var j=0;j<columns;j++){var bj=b[j][0]||0;if(equalScalar(bj,0))bj=0;else{var vjj=m[j][j];if(equalScalar(vjj,0))throw Error("Linear system cannot be solved since matrix is singular");bj=divideScalar(bj,vjj);for(vjj=j+1;vjj<rows;vjj++)b[vjj]=[subtract(b[vjj][0]||0,multiplyScalar(bj,m[vjj][j]))]}x[j]=[bj]}return new DenseMatrix({data:x,size:[rows,1]})}var typed=
_ref.typed,matrix=_ref.matrix,divideScalar=_ref.divideScalar,multiplyScalar=_ref.multiplyScalar,subtract=_ref.subtract,equalScalar=_ref.equalScalar,DenseMatrix=_ref.DenseMatrix,solveValidation=(0,_solveValidation.createSolveValidation)({DenseMatrix:DenseMatrix});return typed("lsolve",{"SparseMatrix, Array | Matrix":function(m,b){b=solveValidation(m,b,!0);b=b._data;var rows=m._size[0],columns=m._size[1],values=m._values,index=m._index;m=m._ptr;for(var x=[],j=0;j<columns;j++){var bj=b[j][0]||0;if(equalScalar(bj,
0))x[j]=[0];else{for(var vjj=0,jValues=[],jIndices=[],lastIndex=m[j+1],k=m[j];k<lastIndex;k++){var i=index[k];i===j?vjj=values[k]:i>j&&(jValues.push(values[k]),jIndices.push(i))}if(equalScalar(vjj,0))throw Error("Linear system cannot be solved since matrix is singular");bj=divideScalar(bj,vjj);vjj=0;for(lastIndex=jIndices.length;vjj<lastIndex;vjj++)k=jIndices[vjj],b[k]=[subtract(b[k][0]||0,multiplyScalar(bj,jValues[vjj]))];x[j]=[bj]}}return new DenseMatrix({data:x,size:[rows,1]})},"DenseMatrix, Array | Matrix":function(m,
b){return _denseForwardSubstitution(m,b)},"Array, Array | Matrix":function(a,b){a=matrix(a);return _denseForwardSubstitution(a,b).valueOf()}})});exports.createLsolve=require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$algebra$solver$lsolve.js.map
