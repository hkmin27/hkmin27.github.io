{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$type$matrix$Spa.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/type/matrix/Spa.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$type$matrix$Spa\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSpaClass = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'Spa';\nvar dependencies = ['addScalar', 'equalScalar', 'FibonacciHeap'];\nvar createSpaClass = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var addScalar = _ref.addScalar,\n      equalScalar = _ref.equalScalar,\n      FibonacciHeap = _ref.FibonacciHeap;\n\n  /**\n   * An ordered Sparse Accumulator is a representation for a sparse vector that includes a dense array\n   * of the vector elements and an ordered list of non-zero elements.\n   */\n  function Spa() {\n    if (!(this instanceof Spa)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    } // allocate vector, TODO use typed arrays\n\n\n    this._values = [];\n    this._heap = new FibonacciHeap();\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Spa.prototype.type = 'Spa';\n  Spa.prototype.isSpa = true;\n  /**\n   * Set the value for index i.\n   *\n   * @param {number} i                       The index\n   * @param {number | BigNumber | Complex}   The value at index i\n   */\n\n  Spa.prototype.set = function (i, v) {\n    // check we have a value @ i\n    if (!this._values[i]) {\n      // insert in heap\n      var node = this._heap.insert(i, v); // set the value @ i\n\n\n      this._values[i] = node;\n    } else {\n      // update the value @ i\n      this._values[i].value = v;\n    }\n  };\n\n  Spa.prototype.get = function (i) {\n    var node = this._values[i];\n\n    if (node) {\n      return node.value;\n    }\n\n    return 0;\n  };\n\n  Spa.prototype.accumulate = function (i, v) {\n    // node @ i\n    var node = this._values[i];\n\n    if (!node) {\n      // insert in heap\n      node = this._heap.insert(i, v); // initialize value\n\n      this._values[i] = node;\n    } else {\n      // accumulate value\n      node.value = addScalar(node.value, v);\n    }\n  };\n\n  Spa.prototype.forEach = function (from, to, callback) {\n    // references\n    var heap = this._heap;\n    var values = this._values; // nodes\n\n    var nodes = []; // node with minimum key, save it\n\n    var node = heap.extractMinimum();\n\n    if (node) {\n      nodes.push(node);\n    } // extract nodes from heap (ordered)\n\n\n    while (node && node.key <= to) {\n      // check it is in range\n      if (node.key >= from) {\n        // check value is not zero\n        if (!equalScalar(node.value, 0)) {\n          // invoke callback\n          callback(node.key, node.value, this);\n        }\n      } // extract next node, save it\n\n\n      node = heap.extractMinimum();\n\n      if (node) {\n        nodes.push(node);\n      }\n    } // reinsert all nodes in heap\n\n\n    for (var i = 0; i < nodes.length; i++) {\n      // current node\n      var n = nodes[i]; // insert node in heap\n\n      node = heap.insert(n.key, n.value); // update values\n\n      values[node.key] = node;\n    }\n  };\n\n  Spa.prototype.swap = function (i, j) {\n    // node @ i and j\n    var nodei = this._values[i];\n    var nodej = this._values[j]; // check we need to insert indeces\n\n    if (!nodei && nodej) {\n      // insert in heap\n      nodei = this._heap.insert(i, nodej.value); // remove from heap\n\n      this._heap.remove(nodej); // set values\n\n\n      this._values[i] = nodei;\n      this._values[j] = undefined;\n    } else if (nodei && !nodej) {\n      // insert in heap\n      nodej = this._heap.insert(j, nodei.value); // remove from heap\n\n      this._heap.remove(nodei); // set values\n\n\n      this._values[j] = nodej;\n      this._values[i] = undefined;\n    } else if (nodei && nodej) {\n      // swap values\n      var v = nodei.value;\n      nodei.value = nodej.value;\n      nodej.value = v;\n    }\n  };\n\n  return Spa;\n}, {\n  isClass: true\n});\nexports.createSpaClass = createSpaClass;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createSpaClass","_factory","factory","name","dependencies","_ref","Spa","SyntaxError","_values","_heap","FibonacciHeap","addScalar","equalScalar","prototype","type","isSpa","set","Spa.prototype.set","i","v","node","insert","get","Spa.prototype.get","accumulate","Spa.prototype.accumulate","forEach","Spa.prototype.forEach","from","to","callback","heap","values","nodes","extractMinimum","push","key","length","n","swap","Spa.prototype.swap","j","nodei","nodej","remove","undefined","isClass"]
}
