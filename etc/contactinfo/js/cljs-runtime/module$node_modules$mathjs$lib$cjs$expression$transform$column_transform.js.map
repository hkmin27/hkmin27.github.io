{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$transform$column_transform.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,wEAAA,CAA6F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,qBAAR,CAAgC,IAAK,EAErC,KAAIC,gBAAkBP,OAAA,CAAQ,8EAAR,CAElBQ,OAAAA,CAAWR,OAAA,CAAQ,kDAAR,CAEf,KAAIS,QAAUT,OAAA,CAAQ,2DAAR,CAAd,CAEIU,IAAMV,OAAA,CAAQ,6CAAR,CAYNM;OAAAA,CAAuC,CAAC,CAAA,CAAGE,MAASG,CAAAA,OAAb,EAVhCC,QAUgC,CATxBC,CAAC,OAADA,CAAU,OAAVA,CAAmB,QAAnBA,CAA6B,OAA7BA,CASwB,CAA0C,QAAS,CAACC,IAAD,CAAO,CAAA,IAC/FC,MAAQD,IAAKC,CAAAA,KADkF,CAE/FC,MAAQF,IAAKE,CAAAA,KAFkF,CAG/FC,OAASH,IAAKG,CAAAA,MACdC,KAAAA,CAAQJ,IAAKI,CAAAA,KACjB,KAAIC,OAAS,CAAC,CAAA,CAAGV,OAAQW,CAAAA,YAAZ,EAA0B,CACrCL,MAAOA,KAD8B,CAErCC,MAAOA,KAF8B,CAGrCC,OAAQA,MAH6B,CAIrCC,MAAOA,IAJ8B,CAA1B,CAOb,OAAOH,MAAA,CAAM,QAAN,CAAgB,CACrB,SAAUM,QAAY,CAACC,IAAD,CAAO,CAE3B,IAAIC,UAAYD,IAAKE,CAAAA,MAAjBD,CAA0B,CAA9B,CACIE,KAAOH,IAAA,CAAKC,SAAL,CAEP,EAAC,CAAA,CAAGb,GAAIgB,CAAAA,QAAR,EAAkBD,IAAlB,CAAJ,GACEH,IAAA,CAAKC,SAAL,CADF,CACoBE,IADpB,CAC2B,CAD3B,CAIA,IAAI,CACF,MAAON,OAAOQ,CAAAA,KAAP,CAAa,IAAb,CAAmBL,IAAnB,CADL,CAEF,MAAOM,GAAP,CAAY,CACZ,KAAM,CAAC,CAAA,CAAGrB,eAAgBsB,CAAAA,cAApB,EAAoCD,GAApC,CAAN,CADY,CAXa,CADR,CAAhB,CAZ4F,CAA1D,CA6BxC,CACDE,oBAAqB,CAAA,CADpB,CA7BwC,CAgC3C5B;OAAQI,CAAAA,qBAAR,CAAgCA,OA1DqG;",
"sources":["node_modules/mathjs/lib/cjs/expression/transform/column.transform.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$transform$column_transform\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createColumnTransform = void 0;\n\nvar _errorTransform = require(\"./utils/errorTransform.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _column = require(\"../../function/matrix/column.js\");\n\nvar _is = require(\"../../utils/is.js\");\n\nvar name = 'column';\nvar dependencies = ['typed', 'Index', 'matrix', 'range'];\n/**\n * Attach a transform function to matrix.column\n * Adds a property transform containing the transform function.\n *\n * This transform changed the last `index` parameter of function column\n * from zero-based to one-based\n */\n\nvar createColumnTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      Index = _ref.Index,\n      matrix = _ref.matrix,\n      range = _ref.range;\n  var column = (0, _column.createColumn)({\n    typed: typed,\n    Index: Index,\n    matrix: matrix,\n    range: range\n  }); // @see: comment of column itself\n\n  return typed('column', {\n    '...any': function any(args) {\n      // change last argument from zero-based to one-based\n      var lastIndex = args.length - 1;\n      var last = args[lastIndex];\n\n      if ((0, _is.isNumber)(last)) {\n        args[lastIndex] = last - 1;\n      }\n\n      try {\n        return column.apply(null, args);\n      } catch (err) {\n        throw (0, _errorTransform.errorTransform)(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});\nexports.createColumnTransform = createColumnTransform;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createColumnTransform","_errorTransform","_factory","_column","_is","factory","name","dependencies","_ref","typed","Index","matrix","range","column","createColumn","any","args","lastIndex","length","last","isNumber","apply","err","errorTransform","isTransformFunction"]
}
