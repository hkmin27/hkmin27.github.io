shadow$provide.module$node_modules$mathjs$lib$cjs$function$arithmetic$multiply=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createMultiply=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _is=require("module$node_modules$mathjs$lib$cjs$utils$is"),_object=require("module$node_modules$mathjs$lib$cjs$utils$object"),_array=require("module$node_modules$mathjs$lib$cjs$utils$array"),_algorithm=require("module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm11"),
_algorithm2=require("module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm14");require=(0,global.factory)("multiply","typed matrix addScalar multiplyScalar equalScalar dot".split(" "),function(_ref){function _validateMatrixDimensions(size1,size2){switch(size1.length){case 1:switch(size2.length){case 1:if(size1[0]!==size2[0])throw new RangeError("Dimension mismatch in multiplication. Vectors must have the same length");break;case 2:if(size1[0]!==size2[0])throw new RangeError("Dimension mismatch in multiplication. Vector length ("+
size1[0]+") must match Matrix rows ("+size2[0]+")");break;default:throw Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+size2.length+" dimensions)");}break;case 2:switch(size2.length){case 1:if(size1[1]!==size2[0])throw new RangeError("Dimension mismatch in multiplication. Matrix columns ("+size1[1]+") must match Vector length ("+size2[0]+")");break;case 2:if(size1[1]!==size2[0])throw new RangeError("Dimension mismatch in multiplication. Matrix A columns ("+size1[1]+") must match Matrix B rows ("+
size2[0]+")");break;default:throw Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+size2.length+" dimensions)");}break;default:throw Error("Can only multiply a 1 or 2 dimensional matrix (Matrix A has "+size1.length+" dimensions)");}}var typed=_ref.typed,matrix=_ref.matrix,addScalar=_ref.addScalar,multiplyScalar=_ref.multiplyScalar,equalScalar=_ref.equalScalar,dot=_ref.dot,algorithm11=(0,_algorithm.createAlgorithm11)({typed:typed,equalScalar:equalScalar}),algorithm14=(0,_algorithm2.createAlgorithm14)({typed:typed}),
_multiplyMatrixVector=typed("_multiplyMatrixVector",{"DenseMatrix, any":function(a,b){var adata=a._data,asize=a._size,adt=a._datatype,bdata=b._data,bdt=b._datatype;b=asize[0];asize=asize[1];var af=addScalar,mf=multiplyScalar;if(adt&&bdt&&adt===bdt&&"string"===typeof adt){var dt=adt;af=typed.find(addScalar,[dt,dt]);mf=typed.find(multiplyScalar,[dt,dt])}adt=[];for(bdt=0;bdt<b;bdt++){for(var row=adata[bdt],sum=mf(row[0],bdata[0]),j=1;j<asize;j++)sum=af(sum,mf(row[j],bdata[j]));adt[bdt]=sum}return a.createDenseMatrix({data:adt,
size:[b],datatype:dt})},"SparseMatrix, any":function(a,b){var avalues=a._values,aindex=a._index,aptr=a._ptr,adt=a._datatype;if(!avalues)throw Error("Cannot multiply Pattern only Matrix times Dense Matrix");var bdata=b._data,bdt=b._datatype,arows=a._size[0],brows=b._size[0];b=[];var cindex=[],cptr=[],af=addScalar,mf=multiplyScalar,eq=equalScalar,zero=0;if(adt&&bdt&&adt===bdt&&"string"===typeof adt){var dt=adt;af=typed.find(addScalar,[dt,dt]);mf=typed.find(multiplyScalar,[dt,dt]);eq=typed.find(equalScalar,
[dt,dt]);zero=typed.convert(0,dt)}adt=[];bdt=[];for(var ib=cptr[0]=0;ib<brows;ib++){var vbi=bdata[ib];if(!eq(vbi,zero))for(var ka1=aptr[ib+1],ka=aptr[ib];ka<ka1;ka++){var ia=aindex[ka];bdt[ia]?adt[ia]=af(adt[ia],mf(vbi,avalues[ka])):(bdt[ia]=!0,cindex.push(ia),adt[ia]=mf(vbi,avalues[ka]))}}avalues=cindex.length;for(aindex=0;aindex<avalues;aindex++)b[aindex]=adt[cindex[aindex]];cptr[1]=cindex.length;return a.createSparseMatrix({values:b,index:cindex,ptr:cptr,size:[arows,1],datatype:dt})}}),_multiplyMatrixMatrix=
typed("_multiplyMatrixMatrix",{"DenseMatrix, DenseMatrix":function(a,b){var adata=a._data,asize=a._size,adt=a._datatype,bdata=b._data,bdt=b._datatype,arows=asize[0];asize=asize[1];b=b._size[1];var af=addScalar,mf=multiplyScalar;if(adt&&bdt&&adt===bdt&&"string"===typeof adt){var dt=adt;af=typed.find(addScalar,[dt,dt]);mf=typed.find(multiplyScalar,[dt,dt])}adt=[];for(bdt=0;bdt<arows;bdt++){var row=adata[bdt];adt[bdt]=[];for(var j=0;j<b;j++){for(var sum=mf(row[0],bdata[0][j]),x=1;x<asize;x++)sum=af(sum,
mf(row[x],bdata[x][j]));adt[bdt][j]=sum}}return a.createDenseMatrix({data:adt,size:[arows,b],datatype:dt})},"DenseMatrix, SparseMatrix":function(a,b){var adata=a._data,asize=a._size,adt=a._datatype;a=b._values;var bindex=b._index,bptr=b._ptr,bsize=b._size,bdt=b._datatype;if(!a)throw Error("Cannot multiply Dense Matrix times Pattern only Matrix");asize=asize[0];bsize=bsize[1];var af=addScalar,mf=multiplyScalar,eq=equalScalar,zero=0;if(adt&&bdt&&adt===bdt&&"string"===typeof adt){var dt=adt;af=typed.find(addScalar,
[dt,dt]);mf=typed.find(multiplyScalar,[dt,dt]);eq=typed.find(equalScalar,[dt,dt]);zero=typed.convert(0,dt)}adt=[];bdt=[];var cptr=[];b=b.createSparseMatrix({values:adt,index:bdt,ptr:cptr,size:[asize,bsize],datatype:dt});for(dt=0;dt<bsize;dt++){cptr[dt]=bdt.length;var kb0=bptr[dt],kb1=bptr[dt+1];if(kb1>kb0)for(var last=0,i=0;i<asize;i++){for(var mark=i+1,cij=void 0,kb=kb0;kb<kb1;kb++){var ib=bindex[kb];last!==mark?(cij=mf(adata[i][ib],a[kb]),last=mark):cij=af(cij,mf(adata[i][ib],a[kb]))}last!==mark||
eq(cij,zero)||(bdt.push(i),adt.push(cij))}}cptr[bsize]=bdt.length;return b},"SparseMatrix, DenseMatrix":function(a,b){var avalues=a._values,aindex=a._index,aptr=a._ptr,adt=a._datatype;if(!avalues)throw Error("Cannot multiply Pattern only Matrix times Dense Matrix");var bdata=b._data,bdt=b._datatype,arows=a._size[0],brows=b._size[0];b=b._size[1];var af=addScalar,mf=multiplyScalar,eq=equalScalar,zero=0;if(adt&&bdt&&adt===bdt&&"string"===typeof adt){var dt=adt;af=typed.find(addScalar,[dt,dt]);mf=typed.find(multiplyScalar,
[dt,dt]);eq=typed.find(equalScalar,[dt,dt]);zero=typed.convert(0,dt)}adt=[];bdt=[];var cptr=[];a=a.createSparseMatrix({values:adt,index:bdt,ptr:cptr,size:[arows,b],datatype:dt});arows=[];dt=[];for(var jb=0;jb<b;jb++){cptr[jb]=bdt.length;for(var mark=jb+1,ib=0;ib<brows;ib++){var vbij=bdata[ib][jb];if(!eq(vbij,zero))for(var ka1=aptr[ib+1],ka=aptr[ib];ka<ka1;ka++){var ia=aindex[ka];dt[ia]!==mark?(dt[ia]=mark,bdt.push(ia),arows[ia]=mf(vbij,avalues[ka])):arows[ia]=af(arows[ia],mf(vbij,avalues[ka]))}}mark=
bdt.length;for(ib=cptr[jb];ib<mark;ib++)adt[ib]=arows[bdt[ib]]}cptr[b]=bdt.length;return a},"SparseMatrix, SparseMatrix":function(a,b){var avalues=a._values,aindex=a._index,aptr=a._ptr,adt=a._datatype,bvalues=b._values,bindex=b._index,bptr=b._ptr,bdt=b._datatype,arows=a._size[0];b=b._size[1];var values=avalues&&bvalues,af=addScalar,mf=multiplyScalar;if(adt&&bdt&&adt===bdt&&"string"===typeof adt){var dt=adt;af=typed.find(addScalar,[dt,dt]);mf=typed.find(multiplyScalar,[dt,dt])}adt=values?[]:void 0;
bdt=[];var cptr=[];a=a.createSparseMatrix({values:adt,index:bdt,ptr:cptr,size:[arows,b],datatype:dt});arows=values?[]:void 0;dt=[];for(var ka,ka1,kb,kb1,ia,jb=0;jb<b;jb++){cptr[jb]=bdt.length;var mark=jb+1;kb=bptr[jb];for(kb1=bptr[jb+1];kb<kb1;kb++)if(ka1=bindex[kb],values)for(ka=aptr[ka1],ka1=aptr[ka1+1];ka<ka1;ka++)ia=aindex[ka],dt[ia]!==mark?(dt[ia]=mark,bdt.push(ia),arows[ia]=mf(bvalues[kb],avalues[ka])):arows[ia]=af(arows[ia],mf(bvalues[kb],avalues[ka]));else for(ka=aptr[ka1],ka1=aptr[ka1+1];ka<
ka1;ka++)ia=aindex[ka],dt[ia]!==mark&&(dt[ia]=mark,bdt.push(ia));if(values)for(kb1=bdt.length,mark=cptr[jb];mark<kb1;mark++)adt[mark]=arows[bdt[mark]]}cptr[b]=bdt.length;return a}});return typed("multiply",(0,_object.extend)({"Array, Array":function(x,y){_validateMatrixDimensions((0,_array.arraySize)(x),(0,_array.arraySize)(y));x=this(matrix(x),matrix(y));return(0,_is.isMatrix)(x)?x.valueOf():x},"Matrix, Matrix":function(x,y){var xsize=x.size(),ysize=y.size();_validateMatrixDimensions(xsize,ysize);
if(1===xsize.length){if(1===ysize.length){if(0===xsize[0])throw Error("Cannot multiply two empty vectors");return dot(x,y)}if("dense"!==y.storage())throw Error("Support for SparseMatrix not implemented");xsize=x._data;var adt=x._datatype;ysize=y._data;var bdt=y._datatype,alength=x._size[0];y=y._size[1];var af=addScalar,mf=multiplyScalar;if(adt&&bdt&&adt===bdt&&"string"===typeof adt){var dt=adt;af=typed.find(addScalar,[dt,dt]);mf=typed.find(multiplyScalar,[dt,dt])}adt=[];for(bdt=0;bdt<y;bdt++){for(var sum=
mf(xsize[0],ysize[0][bdt]),i=1;i<alength;i++)sum=af(sum,mf(xsize[i],ysize[i][bdt]));adt[bdt]=sum}return x.createDenseMatrix({data:adt,size:[y],datatype:dt})}return 1===ysize.length?_multiplyMatrixVector(x,y):_multiplyMatrixMatrix(x,y)},"Matrix, Array":function(x,y){return this(x,matrix(y))},"Array, Matrix":function(x,y){return this(matrix(x,y.storage()),y)},"SparseMatrix, any":function(x,y){return algorithm11(x,y,multiplyScalar,!1)},"DenseMatrix, any":function(x,y){return algorithm14(x,y,multiplyScalar,
!1)},"any, SparseMatrix":function(x,y){return algorithm11(y,x,multiplyScalar,!0)},"any, DenseMatrix":function(x,y){return algorithm14(y,x,multiplyScalar,!0)},"Array, any":function(x,y){return algorithm14(matrix(x),y,multiplyScalar,!1).valueOf()},"any, Array":function(x,y){return algorithm14(matrix(y),x,multiplyScalar,!0).valueOf()},"any, any":multiplyScalar,"any, any, ...any":function(x,y,rest){x=this(x,y);for(y=0;y<rest.length;y++)x=this(x,rest[y]);return x}},multiplyScalar.signatures))});exports.createMultiply=
require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$arithmetic$multiply.js.map
