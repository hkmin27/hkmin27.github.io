shadow$provide.module$node_modules$mathjs$lib$cjs$utils$factory=function(global,require,module,exports){function sortFactories(factories){function containsDependency(factory,dependency){return isFactory(factory)&&((0,_array.contains)(factory.dependencies,dependency.fn||dependency.name)||factory.dependencies.some(function(d){return containsDependency(factoriesByName[d],dependency)}))?!0:!1}function addFactory(factory){for(var index=0;index<sorted.length&&!containsDependency(sorted[index],factory);)index++;
sorted.splice(index,0,factory)}var factoriesByName={};factories.forEach(function(factory){factoriesByName[factory.fn]=factory});var sorted=[];factories.filter(isFactory).forEach(addFactory);factories.filter(function(factory){return!isFactory(factory)}).forEach(addFactory);return sorted}function isFactory(obj){return"function"===typeof obj&&"string"===typeof obj.fn&&Array.isArray(obj.dependencies)}function assertDependencies(name,dependencies,scope){if(!dependencies.filter(function(dependency){return!isOptionalDependency(dependency)}).every(function(dependency){return void 0!==
scope[dependency]}))throw dependencies=dependencies.filter(function(dependency){return void 0===scope[dependency]}),Error('Cannot create function "'.concat(name,'", ')+"some dependencies are missing: ".concat(dependencies.map(function(d){return'"'.concat(d,'"')}).join(", "),"."));}function isOptionalDependency(dependency){return dependency&&"?"===dependency[0]}function stripOptionalNotation(dependency){return dependency&&"?"===dependency[0]?dependency.slice(1):dependency}Object.defineProperty(exports,
"__esModule",{value:!0});exports.factory=function(name,dependencies,create,meta){function assertAndCreate(scope){var deps=(0,_object.pickShallow)(scope,dependencies.map(stripOptionalNotation));assertDependencies(name,dependencies,scope);return create(deps)}assertAndCreate.isFactory=!0;assertAndCreate.fn=name;assertAndCreate.dependencies=dependencies.slice().sort();meta&&(assertAndCreate.meta=meta);return assertAndCreate};exports.sortFactories=sortFactories;exports.create=function(factories){var scope=
1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};sortFactories(factories).forEach(function(factory){return factory(scope)});return scope};exports.isFactory=isFactory;exports.assertDependencies=assertDependencies;exports.isOptionalDependency=isOptionalDependency;exports.stripOptionalNotation=stripOptionalNotation;var _array=require("module$node_modules$mathjs$lib$cjs$utils$array"),_object=require("module$node_modules$mathjs$lib$cjs$utils$object")}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$utils$factory.js.map
