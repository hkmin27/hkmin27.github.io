{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$matrix$identity.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/function/matrix/identity.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$matrix$identity\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createIdentity = void 0;\n\nvar _is = require(\"../../utils/is.js\");\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _number = require(\"../../utils/number.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'identity';\nvar dependencies = ['typed', 'config', 'matrix', 'BigNumber', 'DenseMatrix', 'SparseMatrix'];\nvar createIdentity = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      matrix = _ref.matrix,\n      BigNumber = _ref.BigNumber,\n      DenseMatrix = _ref.DenseMatrix,\n      SparseMatrix = _ref.SparseMatrix;\n\n  /**\n   * Create a 2-dimensional identity matrix with size m x n or n x n.\n   * The matrix has ones on the diagonal and zeros elsewhere.\n   *\n   * Syntax:\n   *\n   *    math.identity(n)\n   *    math.identity(n, format)\n   *    math.identity(m, n)\n   *    math.identity(m, n, format)\n   *    math.identity([m, n])\n   *    math.identity([m, n], format)\n   *\n   * Examples:\n   *\n   *    math.identity(3)                    // returns [[1, 0, 0], [0, 1, 0], [0, 0, 1]]\n   *    math.identity(3, 2)                 // returns [[1, 0], [0, 1], [0, 0]]\n   *\n   *    const A = [[1, 2, 3], [4, 5, 6]]\n   *    math.identity(math.size(A))         // returns [[1, 0, 0], [0, 1, 0]]\n   *\n   * See also:\n   *\n   *    diag, ones, zeros, size, range\n   *\n   * @param {...number | Matrix | Array} size   The size for the matrix\n   * @param {string} [format]                   The Matrix storage format\n   *\n   * @return {Matrix | Array | number} A matrix with ones on the diagonal.\n   */\n  return typed(name, {\n    '': function _() {\n      return config.matrix === 'Matrix' ? matrix([]) : [];\n    },\n    string: function string(format) {\n      return matrix(format);\n    },\n    'number | BigNumber': function numberBigNumber(rows) {\n      return _identity(rows, rows, config.matrix === 'Matrix' ? 'dense' : undefined);\n    },\n    'number | BigNumber, string': function numberBigNumberString(rows, format) {\n      return _identity(rows, rows, format);\n    },\n    'number | BigNumber, number | BigNumber': function numberBigNumberNumberBigNumber(rows, cols) {\n      return _identity(rows, cols, config.matrix === 'Matrix' ? 'dense' : undefined);\n    },\n    'number | BigNumber, number | BigNumber, string': function numberBigNumberNumberBigNumberString(rows, cols, format) {\n      return _identity(rows, cols, format);\n    },\n    Array: function Array(size) {\n      return _identityVector(size);\n    },\n    'Array, string': function ArrayString(size, format) {\n      return _identityVector(size, format);\n    },\n    Matrix: function Matrix(size) {\n      return _identityVector(size.valueOf(), size.storage());\n    },\n    'Matrix, string': function MatrixString(size, format) {\n      return _identityVector(size.valueOf(), format);\n    }\n  });\n\n  function _identityVector(size, format) {\n    switch (size.length) {\n      case 0:\n        return format ? matrix(format) : [];\n\n      case 1:\n        return _identity(size[0], size[0], format);\n\n      case 2:\n        return _identity(size[0], size[1], format);\n\n      default:\n        throw new Error('Vector containing two values expected');\n    }\n  }\n  /**\n   * Create an identity matrix\n   * @param {number | BigNumber} rows\n   * @param {number | BigNumber} cols\n   * @param {string} [format]\n   * @returns {Matrix}\n   * @private\n   */\n\n\n  function _identity(rows, cols, format) {\n    // BigNumber constructor with the right precision\n    var Big = (0, _is.isBigNumber)(rows) || (0, _is.isBigNumber)(cols) ? BigNumber : null;\n    if ((0, _is.isBigNumber)(rows)) rows = rows.toNumber();\n    if ((0, _is.isBigNumber)(cols)) cols = cols.toNumber();\n\n    if (!(0, _number.isInteger)(rows) || rows < 1) {\n      throw new Error('Parameters in function identity must be positive integers');\n    }\n\n    if (!(0, _number.isInteger)(cols) || cols < 1) {\n      throw new Error('Parameters in function identity must be positive integers');\n    }\n\n    var one = Big ? new BigNumber(1) : 1;\n    var defaultValue = Big ? new Big(0) : 0;\n    var size = [rows, cols]; // check we need to return a matrix\n\n    if (format) {\n      // create diagonal matrix (use optimized implementation for storage format)\n      if (format === 'sparse') {\n        return SparseMatrix.diagonal(size, one, 0, defaultValue);\n      }\n\n      if (format === 'dense') {\n        return DenseMatrix.diagonal(size, one, 0, defaultValue);\n      }\n\n      throw new TypeError(\"Unknown matrix type \\\"\".concat(format, \"\\\"\"));\n    } // create and resize array\n\n\n    var res = (0, _array.resize)([], size, defaultValue); // fill in ones on the diagonal\n\n    var minimum = rows < cols ? rows : cols; // fill diagonal\n\n    for (var d = 0; d < minimum; d++) {\n      res[d][d] = one;\n    }\n\n    return res;\n  }\n});\nexports.createIdentity = createIdentity;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createIdentity","_is","_array","_number","_factory","factory","name","dependencies","_ref","_identityVector","size","format","length","matrix","_identity","Error","rows","cols","Big","isBigNumber","BigNumber","toNumber","isInteger","one","defaultValue","SparseMatrix","diagonal","DenseMatrix","TypeError","concat","res","resize","minimum","d","typed","config","_","string","numberBigNumber","undefined","numberBigNumberString","numberBigNumberNumberBigNumber","numberBigNumberNumberBigNumberString","Array","ArrayString","Matrix","valueOf","storage","MatrixString"]
}
