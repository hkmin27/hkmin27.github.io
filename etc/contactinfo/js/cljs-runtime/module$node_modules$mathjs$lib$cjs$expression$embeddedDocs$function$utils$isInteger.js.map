{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$utils$isInteger.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,mFAAA,CAAwG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhJC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,aAAR,CARoBA,CAClBC,KAAM,WADYD,CAElBE,SAAU,OAFQF,CAGlBG,OAAQ,CAAC,cAAD,CAHUH,CAIlBI,YAAa,4CAJKJ,CAKlBK,SAAU,CAAC,cAAD,CAAiB,gBAAjB,CAAmC,yBAAnC,CALQL,CAMlBM,QAAS,CAAC,YAAD,CAAe,WAAf,CAA4B,YAA5B,CAA0C,QAA1C,CANSN,CAP4H;",
"sources":["node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/utils/isInteger.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$utils$isInteger\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isIntegerDocs = void 0;\nvar isIntegerDocs = {\n  name: 'isInteger',\n  category: 'Utils',\n  syntax: ['isInteger(x)'],\n  description: 'Test whether a value is an integer number.',\n  examples: ['isInteger(2)', 'isInteger(3.5)', 'isInteger([3, 0.5, -2])'],\n  seealso: ['isNegative', 'isNumeric', 'isPositive', 'isZero']\n};\nexports.isIntegerDocs = isIntegerDocs;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","isIntegerDocs","name","category","syntax","description","examples","seealso"]
}
