shadow$provide.module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm07=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createAlgorithm07=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _DimensionError=require("module$node_modules$mathjs$lib$cjs$error$DimensionError");require=(0,global.factory)("algorithm07",["typed","DenseMatrix"],function(_ref){function _scatter(m,j,w,x,mark){var values=m._values,index=
m._index,ptr=m._ptr;m=ptr[j];for(j=ptr[j+1];m<j;m++)ptr=index[m],w[ptr]=mark,x[ptr]=values[m]}var typed=_ref.typed,DenseMatrix=_ref.DenseMatrix;return function(a,b,callback){var asize=a._size,adt=a._datatype,bsize=b._size,bdt=b._datatype;if(asize.length!==bsize.length)throw new _DimensionError.DimensionError(asize.length,bsize.length);if(asize[0]!==bsize[0]||asize[1]!==bsize[1])throw new RangeError("Dimension mismatch. Matrix A ("+asize+") must match Matrix B ("+bsize+")");bsize=asize[0];asize=asize[1];
var zero=0,cf=callback;if("string"===typeof adt&&adt===bdt){var dt=adt;zero=typed.convert(0,dt);cf=typed.find(callback,[dt,dt])}bdt=[];for(callback=0;callback<bsize;callback++)bdt[callback]=[];var xa=[],xb=[],wa=[],wb=[];for(adt=0;adt<asize;adt++){var mark=adt+1;_scatter(a,adt,wa,xa,mark);_scatter(b,adt,wb,xb,mark);for(callback=0;callback<bsize;callback++)bdt[callback][adt]=cf(wa[callback]===mark?xa[callback]:zero,wb[callback]===mark?xb[callback]:zero)}return new DenseMatrix({data:bdt,size:[bsize,
asize],datatype:dt})}});exports.createAlgorithm07=require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm07.js.map
