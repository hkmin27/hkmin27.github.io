{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$arithmetic$cube.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGxHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,UAAR,CAAqB,IAAK,EAEtBC,OAAAA,CAAWP,OAAA,CAAQ,kDAAR,CAEf,KAAIQ,YAAcR,OAAA,CAAQ,qDAAR,CAAlB,CAEIS,OAAST,OAAA,CAAQ,uDAAR,CAITM,QAAAA,CAA4B,CAAC,CAAA,CAAGC,MAASG,CAAAA,OAAb,EAFrBC,MAEqB,CADbC,CAAC,OAADA,CACa,CAA0C,QAAS,CAACC,IAAD,CAAO,CACpFC,IAAAA,CAAQD,IAAKC,CAAAA,KA0BjB,OAAOA,KAAA,CA7BEH,MA6BF;AAAY,CACjBI,OAAQN,MAAOO,CAAAA,UADE,CAEjBC,QAASA,QAAgB,CAACC,CAAD,CAAI,CAC3B,MAAOA,EAAEC,CAAAA,GAAF,CAAMD,CAAN,CAASC,CAAAA,GAAT,CAAaD,CAAb,CADoB,CAFZ,CAKjBE,UAAWA,QAAkB,CAACF,CAAD,CAAI,CAC/B,MAAOA,EAAEG,CAAAA,KAAF,CAAQH,CAAR,CAAWG,CAAAA,KAAX,CAAiBH,CAAjB,CADwB,CALhB,CAQjBI,SAAUA,QAAiB,CAACJ,CAAD,CAAI,CAC7B,MAAOA,EAAEK,CAAAA,GAAF,CAAM,CAAN,CADsB,CARd,CAWjB,iBAAkBC,QAAoB,CAACN,CAAD,CAAI,CAExC,MAAO,CAAC,CAAA,CAAGV,WAAYiB,CAAAA,OAAhB,EAAyBP,CAAzB,CAA4B,IAA5B,CAAkC,CAAA,CAAlC,CAFiC,CAXzB,CAejBQ,KAAMA,QAAa,CAACR,CAAD,CAAI,CACrB,MAAOA,EAAEK,CAAAA,GAAF,CAAM,CAAN,CADc,CAfN,CAAZ,CA3BiF,CAA1D,CA+ChCrB,QAAQI,CAAAA,UAAR,CAAqBA,OA/DmG;",
"sources":["node_modules/mathjs/lib/cjs/function/arithmetic/cube.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$arithmetic$cube\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCube = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _collection = require(\"../../utils/collection.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nvar name = 'cube';\nvar dependencies = ['typed'];\nvar createCube = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Compute the cube of a value, `x * x * x`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.cube(x)\n   *\n   * Examples:\n   *\n   *    math.cube(2)            // returns number 8\n   *    math.pow(2, 3)          // returns number 8\n   *    math.cube(4)            // returns number 64\n   *    4 * 4 * 4               // returns number 64\n   *\n   *    math.cube([1, 2, 3, 4]) // returns Array [1, 8, 27, 64]\n   *\n   * See also:\n   *\n   *    multiply, square, pow, cbrt\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} x  Number for which to calculate the cube\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} Cube of x\n   */\n  return typed(name, {\n    number: _index.cubeNumber,\n    Complex: function Complex(x) {\n      return x.mul(x).mul(x); // Is faster than pow(x, 3)\n    },\n    BigNumber: function BigNumber(x) {\n      return x.times(x).times(x);\n    },\n    Fraction: function Fraction(x) {\n      return x.pow(3); // Is faster than mul()mul()mul()\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since cube(0) = 0\n      return (0, _collection.deepMap)(x, this, true);\n    },\n    Unit: function Unit(x) {\n      return x.pow(3);\n    }\n  });\n});\nexports.createCube = createCube;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createCube","_factory","_collection","_index","factory","name","dependencies","_ref","typed","number","cubeNumber","Complex","x","mul","BigNumber","times","Fraction","pow","ArrayMatrix","deepMap","Unit"]
}
