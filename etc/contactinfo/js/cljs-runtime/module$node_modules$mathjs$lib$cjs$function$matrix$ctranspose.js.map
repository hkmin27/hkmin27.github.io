{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$matrix$ctranspose.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,6DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,gBAAR,CAA2B,IAAK,EAE5BC,OAAAA,CAAWP,OAAA,CAAQ,kDAAR,CAIXM,OAAAA,CAAkC,CAAC,CAAA,CAAGC,MAASC,CAAAA,OAAb,EAF3BC,YAE2B,CADnBC,CAAC,OAADA,CAAU,WAAVA,CAAuB,MAAvBA,CACmB,CAA0C,QAAS,CAACC,IAAD,CAAO,CAAA,IAC1FC,MAAQD,IAAKC,CAAAA,KAD6E,CAE1FC,UAAYF,IAAKE,CAAAA,SAFyE,CAG1FC,KAAOH,IAAKG,CAAAA,IAwBhB,OAAOF,MAAA,CA7BEH,YA6BF,CAAY,CACjBM,IAAKA,QAAY,CAACC,CAAD,CAAI,CACnB,MAAOF,KAAA,CAAKD,SAAA,CAAUG,CAAV,CAAL,CADY,CADJ,CAAZ,CA3BuF,CAA1D,CAiCtCd,QAAQI,CAAAA,gBAAR;AAA2BA,MA7C+F;",
"sources":["node_modules/mathjs/lib/cjs/function/matrix/ctranspose.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$matrix$ctranspose\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCtranspose = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'ctranspose';\nvar dependencies = ['typed', 'transpose', 'conj'];\nvar createCtranspose = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      transpose = _ref.transpose,\n      conj = _ref.conj;\n\n  /**\n   * Transpose and complex conjugate a matrix. All values of the matrix are\n   * reflected over its main diagonal and then the complex conjugate is\n   * taken. This is equivalent to complex conjugation for scalars and\n   * vectors.\n   *\n   * Syntax:\n   *\n   *     math.ctranspose(x)\n   *\n   * Examples:\n   *\n   *     const A = [[1, 2, 3], [4, 5, math.complex(6,7)]]\n   *     math.ctranspose(A)               // returns [[1, 4], [2, 5], [3, {re:6,im:7}]]\n   *\n   * See also:\n   *\n   *     transpose, diag, inv, subset, squeeze\n   *\n   * @param {Array | Matrix} x  Matrix to be ctransposed\n   * @return {Array | Matrix}   The ctransposed matrix\n   */\n  return typed(name, {\n    any: function any(x) {\n      return conj(transpose(x));\n    }\n  });\n});\nexports.createCtranspose = createCtranspose;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createCtranspose","_factory","factory","name","dependencies","_ref","typed","transpose","conj","any","x"]
}
