{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$bitwise$bitOr.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,iFAAA,CAAsG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG9IC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,SAAR,CARgBA,CACdC,KAAM,OADQD,CAEdE,SAAU,SAFIF,CAGdG,OAAQ,CAAC,OAAD,CAAU,aAAV,CAHMH,CAIdI,YAAa,6PAJCJ;AAKdK,SAAU,CAAC,OAAD,CAAU,qBAAV,CALIL,CAMdM,QAAS,8DAAA,CAAA,KAAA,CAAA,GAAA,CANKN,CAP8H;",
"sources":["node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/bitwise/bitOr.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$bitwise$bitOr\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bitOrDocs = void 0;\nvar bitOrDocs = {\n  name: 'bitOr',\n  category: 'Bitwise',\n  syntax: ['x | y', 'bitOr(x, y)'],\n  description: 'Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.',\n  examples: ['5 | 3', 'bitOr([1, 2, 3], 4)'],\n  seealso: ['bitAnd', 'bitNot', 'bitXor', 'leftShift', 'rightArithShift', 'rightLogShift']\n};\nexports.bitOrDocs = bitOrDocs;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","bitOrDocs","name","category","syntax","description","examples","seealso"]
}
