{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$bitwise$bitNot.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,kFAAA,CAAuG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/IC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,UAAR,CARiBA,CACfC,KAAM,QADSD,CAEfE,SAAU,SAFKF,CAGfG,OAAQ,CAAC,IAAD,CAAO,WAAP,CAHOH,CAIfI,YAAa,6IAJEJ,CAKfK,SAAU,CAAC,IAAD,CAAO,IAAP,CAAa,oBAAb,CALKL,CAMfM,QAAS,6DAAA,CAAA,KAAA,CAAA,GAAA,CANMN,CAP8H;",
"sources":["node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/bitwise/bitNot.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$bitwise$bitNot\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bitNotDocs = void 0;\nvar bitNotDocs = {\n  name: 'bitNot',\n  category: 'Bitwise',\n  syntax: ['~x', 'bitNot(x)'],\n  description: 'Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.',\n  examples: ['~1', '~2', 'bitNot([2, -3, 4])'],\n  seealso: ['bitAnd', 'bitOr', 'bitXor', 'leftShift', 'rightArithShift', 'rightLogShift']\n};\nexports.bitNotDocs = bitNotDocs;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","bitNotDocs","name","category","syntax","description","examples","seealso"]
}
