{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$arithmetic$gcd.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/function/arithmetic/gcd.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$arithmetic$gcd\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createGcd = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm01.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm04.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm10.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nvar name = 'gcd';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber', 'DenseMatrix'];\nvar createGcd = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      BigNumber = _ref.BigNumber,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm01 = (0, _algorithm.createAlgorithm01)({\n    typed: typed\n  });\n  var algorithm04 = (0, _algorithm2.createAlgorithm04)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm10 = (0, _algorithm3.createAlgorithm10)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = (0, _algorithm4.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm5.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Calculate the greatest common divisor for two or more values or arrays.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.gcd(a, b)\n   *    math.gcd(a, b, c, ...)\n   *\n   * Examples:\n   *\n   *    math.gcd(8, 12)              // returns 4\n   *    math.gcd(-4, 6)              // returns 2\n   *    math.gcd(25, 15, -10)        // returns 5\n   *\n   *    math.gcd([8, -4], [12, 6])   // returns [4, 2]\n   *\n   * See also:\n   *\n   *    lcm, xgcd\n   *\n   * @param {... number | BigNumber | Fraction | Array | Matrix} args  Two or more integer numbers\n   * @return {number | BigNumber | Fraction | Array | Matrix}                           The greatest common divisor\n   */\n\n  return typed(name, {\n    'number, number': _index.gcdNumber,\n    'BigNumber, BigNumber': _gcdBigNumber,\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.gcd(y);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm04(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm01(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm01(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm10(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      return algorithm10(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    },\n    // TODO: need a smarter notation here\n    'Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber': function ArrayMatrixNumberBigNumberArrayMatrixNumberBigNumberArrayMatrixNumberBigNumber(a, b, args) {\n      var res = this(a, b);\n\n      for (var i = 0; i < args.length; i++) {\n        res = this(res, args[i]);\n      }\n\n      return res;\n    }\n  });\n  /**\n   * Calculate gcd for BigNumbers\n   * @param {BigNumber} a\n   * @param {BigNumber} b\n   * @returns {BigNumber} Returns greatest common denominator of a and b\n   * @private\n   */\n\n  function _gcdBigNumber(a, b) {\n    if (!a.isInt() || !b.isInt()) {\n      throw new Error('Parameters in function gcd must be integer numbers');\n    } // https://en.wikipedia.org/wiki/Euclidean_algorithm\n\n\n    var zero = new BigNumber(0);\n\n    while (!b.isZero()) {\n      var r = a.mod(b);\n      a = b;\n      b = r;\n    }\n\n    return a.lt(zero) ? a.neg() : a;\n  }\n});\nexports.createGcd = createGcd;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createGcd","_factory","_algorithm","_algorithm2","_algorithm3","_algorithm4","_algorithm5","_index","factory","name","dependencies","_ref","typed","matrix","equalScalar","BigNumber","DenseMatrix","algorithm01","createAlgorithm01","algorithm04","createAlgorithm04","algorithm10","createAlgorithm10","algorithm13","createAlgorithm13","algorithm14","createAlgorithm14","gcdNumber","_gcdBigNumber","a","b","isInt","Error","zero","isZero","r","mod","lt","neg","FractionFraction","x","y","gcd","SparseMatrixSparseMatrix","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","SparseMatrixNumberBigNumber","DenseMatrixNumberBigNumber","numberBigNumberSparseMatrix","numberBigNumberDenseMatrix","ArrayNumberBigNumber","numberBigNumberArray","ArrayMatrixNumberBigNumberArrayMatrixNumberBigNumberArrayMatrixNumberBigNumber","args","res","i","length"]
}
