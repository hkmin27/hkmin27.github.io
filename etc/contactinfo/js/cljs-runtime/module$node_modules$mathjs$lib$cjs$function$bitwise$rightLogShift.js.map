{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$bitwise$rightLogShift.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/function/bitwise/rightLogShift.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$bitwise$rightLogShift\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRightLogShift = void 0;\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm02.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm01.js\");\n\nvar _algorithm6 = require(\"../../type/matrix/utils/algorithm10.js\");\n\nvar _algorithm7 = require(\"../../type/matrix/utils/algorithm08.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nvar name = 'rightLogShift';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'DenseMatrix'];\nvar createRightLogShift = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      zeros = _ref.zeros,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm01 = (0, _algorithm5.createAlgorithm01)({\n    typed: typed\n  });\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm08 = (0, _algorithm7.createAlgorithm08)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm10 = (0, _algorithm6.createAlgorithm10)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm11 = (0, _algorithm2.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm13 = (0, _algorithm3.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm4.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Bitwise right logical shift of value x by y number of bits, `x >>> y`.\n   * For matrices, the function is evaluated element wise.\n   * For units, the function is evaluated on the best prefix base.\n   *\n   * Syntax:\n   *\n   *    math.rightLogShift(x, y)\n   *\n   * Examples:\n   *\n   *    math.rightLogShift(4, 2)               // returns number 1\n   *\n   *    math.rightLogShift([16, -32, 64], 4)   // returns Array [1, 2, 3]\n   *\n   * See also:\n   *\n   *    bitAnd, bitNot, bitOr, bitXor, leftShift, rightLogShift\n   *\n   * @param  {number | Array | Matrix} x Value to be shifted\n   * @param  {number} y Amount of shifts\n   * @return {number | Array | Matrix} `x` zero-filled shifted right `y` times\n   */\n\n  return typed(name, {\n    'number, number': _index.rightLogShiftNumber,\n    // 'BigNumber, BigNumber': ..., // TODO: implement BigNumber support for rightLogShift\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm08(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm01(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      // check scalar\n      if (equalScalar(y, 0)) {\n        return x.clone();\n      }\n\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      // check scalar\n      if (equalScalar(y, 0)) {\n        return x.clone();\n      }\n\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // check scalar\n      if (equalScalar(x, 0)) {\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm10(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      // check scalar\n      if (equalScalar(x, 0)) {\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y)).valueOf();\n    }\n  });\n});\nexports.createRightLogShift = createRightLogShift;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createRightLogShift","_algorithm","_algorithm2","_algorithm3","_algorithm4","_algorithm5","_algorithm6","_algorithm7","_factory","_index","factory","name","dependencies","_ref","typed","matrix","equalScalar","zeros","DenseMatrix","algorithm01","createAlgorithm01","algorithm02","createAlgorithm02","algorithm08","createAlgorithm08","algorithm10","createAlgorithm10","algorithm11","createAlgorithm11","algorithm13","createAlgorithm13","algorithm14","createAlgorithm14","rightLogShiftNumber","SparseMatrixSparseMatrix","x","y","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","SparseMatrixNumberBigNumber","clone","DenseMatrixNumberBigNumber","numberBigNumberSparseMatrix","size","storage","numberBigNumberDenseMatrix","ArrayNumberBigNumber","numberBigNumberArray"]
}
