shadow$provide.module$node_modules$mathjs$lib$cjs$type$matrix$Matrix=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createMatrixClass=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("Matrix",[],function(){function Matrix(){if(!(this instanceof Matrix))throw new SyntaxError("Constructor must be called with the new operator");}Matrix.prototype.type="Matrix";Matrix.prototype.isMatrix=!0;Matrix.prototype.storage=
function(){throw Error("Cannot invoke storage on a Matrix interface");};Matrix.prototype.datatype=function(){throw Error("Cannot invoke datatype on a Matrix interface");};Matrix.prototype.create=function(data,datatype){throw Error("Cannot invoke create on a Matrix interface");};Matrix.prototype.subset=function(index,replacement,defaultValue){throw Error("Cannot invoke subset on a Matrix interface");};Matrix.prototype.get=function(index){throw Error("Cannot invoke get on a Matrix interface");};Matrix.prototype.set=
function(index,value,defaultValue){throw Error("Cannot invoke set on a Matrix interface");};Matrix.prototype.resize=function(size,defaultValue){throw Error("Cannot invoke resize on a Matrix interface");};Matrix.prototype.reshape=function(size,defaultValue){throw Error("Cannot invoke reshape on a Matrix interface");};Matrix.prototype.clone=function(){throw Error("Cannot invoke clone on a Matrix interface");};Matrix.prototype.size=function(){throw Error("Cannot invoke size on a Matrix interface");};
Matrix.prototype.map=function(callback,skipZeros){throw Error("Cannot invoke map on a Matrix interface");};Matrix.prototype.forEach=function(callback){throw Error("Cannot invoke forEach on a Matrix interface");};Matrix.prototype.toArray=function(){throw Error("Cannot invoke toArray on a Matrix interface");};Matrix.prototype.valueOf=function(){throw Error("Cannot invoke valueOf on a Matrix interface");};Matrix.prototype.format=function(options){throw Error("Cannot invoke format on a Matrix interface");
};Matrix.prototype.toString=function(){throw Error("Cannot invoke toString on a Matrix interface");};return Matrix},{isClass:!0});exports.createMatrixClass=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$type$matrix$Matrix.js.map
