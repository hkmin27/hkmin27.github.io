{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$arithmetic$dotMultiply.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/function/arithmetic/dotMultiply.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$arithmetic$dotMultiply\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDotMultiply = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm02.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm09.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar name = 'dotMultiply';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'multiplyScalar'];\nvar createDotMultiply = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      multiplyScalar = _ref.multiplyScalar;\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm09 = (0, _algorithm2.createAlgorithm09)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm11 = (0, _algorithm3.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm13 = (0, _algorithm4.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm5.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Multiply two matrices element wise. The function accepts both matrices and\n   * scalar values.\n   *\n   * Syntax:\n   *\n   *    math.dotMultiply(x, y)\n   *\n   * Examples:\n   *\n   *    math.dotMultiply(2, 4) // returns 8\n   *\n   *    a = [[9, 5], [6, 1]]\n   *    b = [[3, 2], [5, 2]]\n   *\n   *    math.dotMultiply(a, b) // returns [[27, 10], [30, 2]]\n   *    math.multiply(a, b)    // returns [[52, 28], [23, 14]]\n   *\n   * See also:\n   *\n   *    multiply, divide, dotDivide\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x Left hand value\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Right hand value\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}                    Multiplication of `x` and `y`\n   */\n\n  return typed(name, {\n    'any, any': multiplyScalar,\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm09(x, y, multiplyScalar, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, multiplyScalar, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm02(x, y, multiplyScalar, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, multiplyScalar);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm11(x, y, multiplyScalar, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, multiplyScalar, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm11(y, x, multiplyScalar, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, multiplyScalar, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, multiplyScalar, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, multiplyScalar, true).valueOf();\n    }\n  });\n});\nexports.createDotMultiply = createDotMultiply;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createDotMultiply","_factory","_algorithm","_algorithm2","_algorithm3","_algorithm4","_algorithm5","factory","name","dependencies","_ref","typed","matrix","equalScalar","multiplyScalar","algorithm02","createAlgorithm02","algorithm09","createAlgorithm09","algorithm11","createAlgorithm11","algorithm13","createAlgorithm13","algorithm14","createAlgorithm14","SparseMatrixSparseMatrix","x","y","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","SparseMatrixAny","DenseMatrixAny","anySparseMatrix","anyDenseMatrix","ArrayAny","anyArray"]
}
