{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$utils$isNumeric.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,mFAAA,CAAwG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhJC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,aAAR,CARoBA,CAClBC,KAAM,WADYD,CAElBE,SAAU,OAFQF,CAGlBG,OAAQ,CAAC,cAAD,CAHUH,CAIlBI,YAAa,oHAJKJ,CAKlBK,SAAU,qKAAA,CAAA,KAAA,CAAA,GAAA,CALQL;AAMlBM,QAAS,8DAAA,CAAA,KAAA,CAAA,GAAA,CANSN,CAP4H;",
"sources":["node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/utils/isNumeric.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$utils$isNumeric\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNumericDocs = void 0;\nvar isNumericDocs = {\n  name: 'isNumeric',\n  category: 'Utils',\n  syntax: ['isNumeric(x)'],\n  description: 'Test whether a value is a numeric value. ' + 'Returns true when the input is a number, BigNumber, Fraction, or boolean.',\n  examples: ['isNumeric(2)', 'isNumeric(\"2\")', 'hasNumericValue(\"2\")', 'isNumeric(0)', 'isNumeric(bignumber(500))', 'isNumeric(fraction(0.125))', 'isNumeric(2 + 3i)', 'isNumeric([2.3, \"foo\", false])'],\n  seealso: ['isInteger', 'isZero', 'isNegative', 'isPositive', 'isNaN', 'hasNumericValue']\n};\nexports.isNumericDocs = isNumericDocs;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","isNumericDocs","name","category","syntax","description","examples","seealso"]
}
