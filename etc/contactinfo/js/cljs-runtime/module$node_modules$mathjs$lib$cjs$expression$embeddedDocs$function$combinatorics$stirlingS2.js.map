{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$combinatorics$stirlingS2.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,4FAAA,CAAiH,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGzJC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,cAAR,CARqBA,CACnBC,KAAM,YADaD,CAEnBE,SAAU,eAFSF,CAGnBG,OAAQ,CAAC,kBAAD,CAHWH,CAInBI,YAAa,gSAJMJ;AAKnBK,SAAU,CAAC,kBAAD,CALSL,CAMnBM,QAAS,CAAC,aAAD,CANUN,CAPoI;",
"sources":["node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/combinatorics/stirlingS2.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$combinatorics$stirlingS2\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stirlingS2Docs = void 0;\nvar stirlingS2Docs = {\n  name: 'stirlingS2',\n  category: 'Combinatorics',\n  syntax: ['stirlingS2(n, k)'],\n  description: 'he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.',\n  examples: ['stirlingS2(5, 3)'],\n  seealso: ['bellNumbers']\n};\nexports.stirlingS2Docs = stirlingS2Docs;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","stirlingS2Docs","name","category","syntax","description","examples","seealso"]
}
