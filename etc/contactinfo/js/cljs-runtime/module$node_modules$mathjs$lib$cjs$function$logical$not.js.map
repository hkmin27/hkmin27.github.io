{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$logical$not.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,SAAR,CAAoB,IAAK,EAEzB,KAAIC,YAAcP,OAAA,CAAQ,qDAAR,CAEdQ,OAAAA,CAAWR,OAAA,CAAQ,kDAAR,CAEf,KAAIS,OAAST,OAAA,CAAQ,uDAAR,CAITM,QAAAA,CAA2B,CAAC,CAAA,CAAGE,MAASE,CAAAA,OAAb,EAFpBC,KAEoB,CADZC,CAAC,OAADA,CACY,CAA0C,QAAS,CAACC,IAAD,CAAO,CACnFC,IAAAA,CAAQD,IAAKC,CAAAA,KA2BjB,OAAOA,KAAA,CA9BEH,KA8BF;AAAY,CACjBI,OAAQN,MAAOO,CAAAA,SADE,CAEjBC,QAASA,QAAgB,CAACC,CAAD,CAAI,CAC3B,MAAgB,EAAhB,GAAOA,CAAEC,CAAAA,EAAT,EAA8B,CAA9B,GAAqBD,CAAEE,CAAAA,EADI,CAFZ,CAKjBC,UAAWA,QAAkB,CAACH,CAAD,CAAI,CAC/B,MAAOA,EAAEI,CAAAA,MAAF,EAAP,EAAqBJ,CAAEK,CAAAA,KAAF,EADU,CALhB,CAQjBC,KAAMA,QAAa,CAACN,CAAD,CAAI,CACrB,MAAmB,KAAZ,GAAAA,CAAEb,CAAAA,KAAF,CAAmB,IAAA,CAAKa,CAAEb,CAAAA,KAAP,CAAnB,CAAmC,CAAA,CADrB,CARN,CAWjB,iBAAkBoB,QAAoB,CAACP,CAAD,CAAI,CACxC,MAAO,CAAC,CAAA,CAAGX,WAAYmB,CAAAA,OAAhB,EAAyBR,CAAzB,CAA4B,IAA5B,CADiC,CAXzB,CAAZ,CA5BgF,CAA1D,CA4C/BhB,QAAQI,CAAAA,SAAR,CAAoBA,OA5DgG;",
"sources":["node_modules/mathjs/lib/cjs/function/logical/not.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$logical$not\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createNot = void 0;\n\nvar _collection = require(\"../../utils/collection.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nvar name = 'not';\nvar dependencies = ['typed'];\nvar createNot = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Logical `not`. Flips boolean value of a given parameter.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.not(x)\n   *\n   * Examples:\n   *\n   *    math.not(2)      // returns false\n   *    math.not(0)      // returns true\n   *    math.not(true)   // returns false\n   *\n   *    a = [2, -7, 0]\n   *    math.not(a)      // returns [false, false, true]\n   *\n   * See also:\n   *\n   *    and, or, xor\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\n   * @return {boolean | Array | Matrix}\n   *            Returns true when input is a zero or empty value.\n   */\n  return typed(name, {\n    number: _index.notNumber,\n    Complex: function Complex(x) {\n      return x.re === 0 && x.im === 0;\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isZero() || x.isNaN();\n    },\n    Unit: function Unit(x) {\n      return x.value !== null ? this(x.value) : true;\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0, _collection.deepMap)(x, this);\n    }\n  });\n});\nexports.createNot = createNot;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createNot","_collection","_factory","_index","factory","name","dependencies","_ref","typed","number","notNumber","Complex","x","re","im","BigNumber","isZero","isNaN","Unit","ArrayMatrix","deepMap"]
}
