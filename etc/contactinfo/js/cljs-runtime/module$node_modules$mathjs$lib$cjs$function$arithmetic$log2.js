shadow$provide.module$node_modules$mathjs$lib$cjs$function$arithmetic$log2=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createLog2=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _collection=require("module$node_modules$mathjs$lib$cjs$utils$collection"),_index=require("module$node_modules$mathjs$lib$cjs$plain$number$index");require=(0,global.factory)("log2",["typed","config","Complex"],function(_ref){function _log2Complex(x){var newX=
Math.sqrt(x.re*x.re+x.im*x.im);return new Complex(Math.log2?Math.log2(newX):Math.log(newX)/Math.LN2,Math.atan2(x.im,x.re)/Math.LN2)}var typed=_ref.typed,config=_ref.config,Complex=_ref.Complex;return typed("log2",{number:function(x){return 0<=x||config.predictable?(0,_index.log2Number)(x):_log2Complex(new Complex(x,0))},Complex:_log2Complex,BigNumber:function(x){return!x.isNegative()||config.predictable?x.log(2):_log2Complex(new Complex(x.toNumber(),0))},"Array | Matrix":function(x){return(0,_collection.deepMap)(x,
this)}})});exports.createLog2=require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$arithmetic$log2.js.map
