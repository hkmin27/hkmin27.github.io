{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$arithmetic$add.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/function/arithmetic/add.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$arithmetic$add\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAdd = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _object = require(\"../../utils/object.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm01.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm04.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm10.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar name = 'add';\nvar dependencies = ['typed', 'matrix', 'addScalar', 'equalScalar', 'DenseMatrix', 'SparseMatrix'];\nvar createAdd = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      addScalar = _ref.addScalar,\n      equalScalar = _ref.equalScalar,\n      DenseMatrix = _ref.DenseMatrix,\n      SparseMatrix = _ref.SparseMatrix;\n  var algorithm01 = (0, _algorithm.createAlgorithm01)({\n    typed: typed\n  });\n  var algorithm04 = (0, _algorithm2.createAlgorithm04)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm10 = (0, _algorithm3.createAlgorithm10)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = (0, _algorithm4.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm5.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Add two or more values, `x + y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.add(x, y)\n   *    math.add(x, y, z, ...)\n   *\n   * Examples:\n   *\n   *    math.add(2, 3)               // returns number 5\n   *    math.add(2, 3, 4)            // returns number 9\n   *\n   *    const a = math.complex(2, 3)\n   *    const b = math.complex(-4, 1)\n   *    math.add(a, b)               // returns Complex -2 + 4i\n   *\n   *    math.add([1, 2, 3], 4)       // returns Array [5, 6, 7]\n   *\n   *    const c = math.unit('5 cm')\n   *    const d = math.unit('2.1 mm')\n   *    math.add(c, d)               // returns Unit 52.1 mm\n   *\n   *    math.add(\"2.3\", \"4\")         // returns number 6.3\n   *\n   * See also:\n   *\n   *    subtract, sum\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x First value to add\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Second value to add\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Sum of `x` and `y`\n   */\n\n  return typed(name, (0, _object.extend)({\n    // we extend the signatures of addScalar with signatures dealing with matrices\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, addScalar);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm01(x, y, addScalar, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm01(y, x, addScalar, true);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm04(x, y, addScalar);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, addScalar, false);\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm10(x, y, addScalar, false);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, addScalar, true);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm10(y, x, addScalar, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, addScalar, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, addScalar, true).valueOf();\n    },\n    'any, any': addScalar,\n    'any, any, ...any': function anyAnyAny(x, y, rest) {\n      var result = this(x, y);\n\n      for (var i = 0; i < rest.length; i++) {\n        result = this(result, rest[i]);\n      }\n\n      return result;\n    }\n  }, addScalar.signatures));\n});\nexports.createAdd = createAdd;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createAdd","_factory","_object","_algorithm","_algorithm2","_algorithm3","_algorithm4","_algorithm5","factory","name","dependencies","_ref","typed","matrix","addScalar","equalScalar","DenseMatrix","algorithm01","createAlgorithm01","algorithm04","createAlgorithm04","algorithm10","createAlgorithm10","algorithm13","createAlgorithm13","algorithm14","createAlgorithm14","extend","DenseMatrixDenseMatrix","x","y","DenseMatrixSparseMatrix","SparseMatrixDenseMatrix","SparseMatrixSparseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","DenseMatrixAny","SparseMatrixAny","anyDenseMatrix","anySparseMatrix","ArrayAny","anyArray","anyAnyAny","rest","result","i","length","signatures"]
}
