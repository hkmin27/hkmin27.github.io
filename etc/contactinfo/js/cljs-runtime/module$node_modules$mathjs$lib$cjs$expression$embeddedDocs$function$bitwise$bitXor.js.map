{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$bitwise$bitXor.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,kFAAA,CAAuG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/IC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,UAAR,CARiBA,CACfC,KAAM,QADSD,CAEfE,SAAU,SAFKF,CAGfG,OAAQ,CAAC,cAAD,CAHOH,CAIfI,YAAa,kRAJEJ;AAKfK,SAAU,CAAC,aAAD,CAAgB,sBAAhB,CALKL,CAMfM,QAAS,6DAAA,CAAA,KAAA,CAAA,GAAA,CANMN,CAP8H;",
"sources":["node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/bitwise/bitXor.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$bitwise$bitXor\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bitXorDocs = void 0;\nvar bitXorDocs = {\n  name: 'bitXor',\n  category: 'Bitwise',\n  syntax: ['bitXor(x, y)'],\n  description: 'Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.',\n  examples: ['bitOr(1, 2)', 'bitXor([2, 3, 4], 4)'],\n  seealso: ['bitAnd', 'bitNot', 'bitOr', 'leftShift', 'rightArithShift', 'rightLogShift']\n};\nexports.bitXorDocs = bitXorDocs;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","bitXorDocs","name","category","syntax","description","examples","seealso"]
}
