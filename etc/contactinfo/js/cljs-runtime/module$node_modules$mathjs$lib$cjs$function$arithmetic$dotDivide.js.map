{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$arithmetic$dotDivide.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/function/arithmetic/dotDivide.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$arithmetic$dotDivide\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDotDivide = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm02.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm03.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm07.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm12.js\");\n\nvar _algorithm6 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm7 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar name = 'dotDivide';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'divideScalar', 'DenseMatrix'];\nvar createDotDivide = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      divideScalar = _ref.divideScalar,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm03 = (0, _algorithm2.createAlgorithm03)({\n    typed: typed\n  });\n  var algorithm07 = (0, _algorithm3.createAlgorithm07)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm11 = (0, _algorithm4.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm12 = (0, _algorithm5.createAlgorithm12)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = (0, _algorithm6.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm7.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Divide two matrices element wise. The function accepts both matrices and\n   * scalar values.\n   *\n   * Syntax:\n   *\n   *    math.dotDivide(x, y)\n   *\n   * Examples:\n   *\n   *    math.dotDivide(2, 4)   // returns 0.5\n   *\n   *    a = [[9, 5], [6, 1]]\n   *    b = [[3, 2], [5, 2]]\n   *\n   *    math.dotDivide(a, b)   // returns [[3, 2.5], [1.2, 0.5]]\n   *    math.divide(a, b)      // returns [[1.75, 0.75], [-1.75, 2.25]]\n   *\n   * See also:\n   *\n   *    divide, multiply, dotMultiply\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x Numerator\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Denominator\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}                    Quotient, `x ./ y`\n   */\n\n  return typed(name, {\n    'any, any': divideScalar,\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, divideScalar, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, divideScalar, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, divideScalar, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, divideScalar);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm11(x, y, divideScalar, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, divideScalar, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, divideScalar, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, divideScalar, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, divideScalar, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, divideScalar, true).valueOf();\n    }\n  });\n});\nexports.createDotDivide = createDotDivide;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createDotDivide","_factory","_algorithm","_algorithm2","_algorithm3","_algorithm4","_algorithm5","_algorithm6","_algorithm7","factory","name","dependencies","_ref","typed","matrix","equalScalar","divideScalar","DenseMatrix","algorithm02","createAlgorithm02","algorithm03","createAlgorithm03","algorithm07","createAlgorithm07","algorithm11","createAlgorithm11","algorithm12","createAlgorithm12","algorithm13","createAlgorithm13","algorithm14","createAlgorithm14","SparseMatrixSparseMatrix","x","y","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","SparseMatrixAny","DenseMatrixAny","anySparseMatrix","anyDenseMatrix","ArrayAny","anyArray"]
}
