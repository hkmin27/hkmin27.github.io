shadow$provide.module$node_modules$mathjs$lib$cjs$expression$transform$filter_transform=function(global,require,module,exports){function _filter(x,callback){var args=(0,_function.maxArgumentCount)(callback);return(0,_array.filter)(x,function(value,index,array){return 1===args?callback(value):2===args?callback(value,[index+1]):callback(value,[index+1],array)})}Object.defineProperty(exports,"__esModule",{value:!0});exports.createFilterTransform=void 0;var _is=require("module$node_modules$mathjs$lib$cjs$utils$is"),
_array=require("module$node_modules$mathjs$lib$cjs$utils$array"),_function=require("module$node_modules$mathjs$lib$cjs$utils$function"),_compileInlineExpression=require("module$node_modules$mathjs$lib$cjs$expression$transform$utils$compileInlineExpression");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("filter",["typed"],function(_ref){function filterTransform(args,math,scope){var x,callback;args[0]&&(x=args[0].compile().evaluate(scope));args[1]&&(callback=
(0,_is.isSymbolNode)(args[1])||(0,_is.isFunctionAssignmentNode)(args[1])?args[1].compile().evaluate(scope):(0,_compileInlineExpression.compileInlineExpression)(args[1],math,scope));return filter(x,callback)}_ref=_ref.typed;filterTransform.rawArgs=!0;var filter=_ref("filter",{"Array, function":_filter,"Matrix, function":function(x,test){return x.create(_filter(x.toArray(),test))},"Array, RegExp":_array.filterRegExp,"Matrix, RegExp":function(x,test){return x.create((0,_array.filterRegExp)(x.toArray(),
test))}});return filterTransform},{isTransformFunction:!0});exports.createFilterTransform=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$expression$transform$filter_transform.js.map
