{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$unit$to.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,mDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,QAAR,CAAmB,IAAK,EAEpBC,OAAAA,CAAWP,OAAA,CAAQ,kDAAR,CAEf,KAAIQ,WAAaR,OAAA,CAAQ,kEAAR,CAAjB,CAEIS,YAAcT,OAAA,CAAQ,kEAAR,CAIdM,QAAAA,CAA0B,CAAC,CAAA,CAAGC,MAASG,CAAAA,OAAb,EAFnBC,IAEmB,CADXC,CAAC,OAADA,CAAU,QAAVA,CACW,CAA0C,QAAS,CAACC,IAAD,CAAO,CAAA,IAClFC;AAAQD,IAAKC,CAAAA,KADqE,CAElFC,OAASF,IAAKE,CAAAA,MAFoE,CAGlFC,YAAc,CAAC,CAAA,CAAGR,UAAWS,CAAAA,iBAAf,EAAkC,CAClDH,MAAOA,KAD2C,CAAlC,CAHoE,CAMlFI,YAAc,CAAC,CAAA,CAAGT,WAAYU,CAAAA,iBAAhB,EAAmC,CACnDL,MAAOA,KAD4C,CAAnC,CA4BlB,OAAOA,MAAA,CApCEH,IAoCF,CAAY,CACjB,sBAAuBS,QAAuB,CAACC,CAAD,CAAIC,IAAJ,CAAU,CACtD,MAAOD,EAAEE,CAAAA,EAAF,CAAKD,IAAL,CAD+C,CADvC,CAIjB,iBAAkBE,QAAqB,CAACH,CAAD,CAAII,CAAJ,CAAO,CAE5C,MAAOT,YAAA,CAAYK,CAAZ,CAAeI,CAAf,CAAkB,IAAlB,CAFqC,CAJ7B,CAQjB,eAAgBC,QAAmB,CAACL,CAAD,CAAII,CAAJ,CAAO,CAExC,MAAO,KAAA,CAAKV,MAAA,CAAOM,CAAP,CAAL,CAAgBN,MAAA,CAAOU,CAAP,CAAhB,CAA2BE,CAAAA,OAA3B,EAFiC,CARzB,CAYjB,gBAAiBC,QAAoB,CAACP,CAAD,CAAII,CAAJ,CAAO,CAE1C,MAAO,KAAA,CAAKV,MAAA,CAAOM,CAAP,CAAL,CAAgBI,CAAhB,CAFmC,CAZ3B,CAgBjB,gBAAiBI,QAAoB,CAACR,CAAD,CAAII,CAAJ,CAAO,CAE1C,MAAO,KAAA,CAAKJ,CAAL,CAAQN,MAAA,CAAOU,CAAP,CAAR,CAFmC,CAhB3B,CAoBjB,cAAeK,QAAkB,CAACT,CAAD,CAAII,CAAJ,CAAO,CAEtC,MAAOP,YAAA,CAAYG,CAAZ;AAAeI,CAAf,CAAkB,IAAlB,CAAwB,CAAA,CAAxB,CAF+B,CApBvB,CAwBjB,cAAeM,QAAkB,CAACV,CAAD,CAAII,CAAJ,CAAO,CAEtC,MAAOP,YAAA,CAAYO,CAAZ,CAAeJ,CAAf,CAAkB,IAAlB,CAAwB,CAAA,CAAxB,CAF+B,CAxBvB,CA4BjB,aAAcW,QAAiB,CAACX,CAAD,CAAII,CAAJ,CAAO,CAEpC,MAAOP,YAAA,CAAYH,MAAA,CAAOM,CAAP,CAAZ,CAAuBI,CAAvB,CAA0B,IAA1B,CAAgC,CAAA,CAAhC,CAAuCE,CAAAA,OAAvC,EAF6B,CA5BrB,CAgCjB,aAAcM,QAAiB,CAACZ,CAAD,CAAII,CAAJ,CAAO,CAEpC,MAAOP,YAAA,CAAYH,MAAA,CAAOU,CAAP,CAAZ,CAAuBJ,CAAvB,CAA0B,IAA1B,CAAgC,CAAA,CAAhC,CAAsCM,CAAAA,OAAtC,EAF6B,CAhCrB,CAAZ,CAlC+E,CAA1D,CAwE9BzB,QAAQI,CAAAA,QAAR,CAAmBA,OAxF6F;",
"sources":["node_modules/mathjs/lib/cjs/function/unit/to.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$unit$to\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createTo = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar name = 'to';\nvar dependencies = ['typed', 'matrix'];\nvar createTo = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix;\n  var algorithm13 = (0, _algorithm.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm2.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Change the unit of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.to(x, unit)\n   *\n   * Examples:\n   *\n   *    math.to(math.unit('2 inch'), 'cm')                   // returns Unit 5.08 cm\n   *    math.to(math.unit('2 inch'), math.unit(null, 'cm'))  // returns Unit 5.08 cm\n   *    math.to(math.unit(16, 'bytes'), 'bits')              // returns Unit 128 bits\n   *\n   * See also:\n   *\n   *    unit\n   *\n   * @param {Unit | Array | Matrix} x     The unit to be converted.\n   * @param {Unit | Array | Matrix} unit  New unit. Can be a string like \"cm\"\n   *                                      or a unit without value.\n   * @return {Unit | Array | Matrix} value with changed, fixed unit.\n   */\n\n  return typed(name, {\n    'Unit, Unit | string': function UnitUnitString(x, unit) {\n      return x.to(unit);\n    },\n    'Matrix, Matrix': function MatrixMatrix(x, y) {\n      // SparseMatrix does not support Units\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'Matrix, any': function MatrixAny(x, y) {\n      // SparseMatrix does not support Units\n      return algorithm14(x, y, this, false);\n    },\n    'any, Matrix': function anyMatrix(x, y) {\n      // SparseMatrix does not support Units\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexports.createTo = createTo;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createTo","_factory","_algorithm","_algorithm2","factory","name","dependencies","_ref","typed","matrix","algorithm13","createAlgorithm13","algorithm14","createAlgorithm14","UnitUnitString","x","unit","to","MatrixMatrix","y","ArrayArray","valueOf","ArrayMatrix","MatrixArray","MatrixAny","anyMatrix","ArrayAny","anyArray"]
}
