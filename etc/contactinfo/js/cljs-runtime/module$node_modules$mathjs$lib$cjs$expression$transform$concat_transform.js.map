{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$transform$concat_transform.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,wEAAA,CAA6F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,qBAAR,CAAgC,IAAK,EAErC,KAAIC,IAAMP,OAAA,CAAQ,6CAAR,CAAV,CAEIQ,gBAAkBR,OAAA,CAAQ,8EAAR,CAElBS,OAAAA,CAAWT,OAAA,CAAQ,kDAAR,CAEf,KAAIU,QAAUV,OAAA,CAAQ,2DAAR,CAIVM;OAAAA,CAAuC,CAAC,CAAA,CAAGG,MAASE,CAAAA,OAAb,EAFhCC,QAEgC,CADxBC,CAAC,OAADA,CAAU,QAAVA,CAAoB,WAApBA,CACwB,CAA0C,QAAS,CAACC,IAAD,CAAO,CAAA,IAC/FC,MAAQD,IAAKC,CAAAA,KADkF,CAE/FC,OAASF,IAAKE,CAAAA,MACdC,KAAAA,CAAYH,IAAKG,CAAAA,SACrB,KAAIC,OAAS,CAAC,CAAA,CAAGR,OAAQS,CAAAA,YAAZ,EAA0B,CACrCJ,MAAOA,KAD8B,CAErCC,OAAQA,MAF6B,CAGrCC,UAAWA,IAH0B,CAA1B,CAab,OAAOF,MAAA,CAAM,QAAN,CAAgB,CACrB,SAAUK,QAAY,CAACC,IAAD,CAAO,CAE3B,IAAIC,UAAYD,IAAKE,CAAAA,MAAjBD,CAA0B,CAA9B,CACIE,KAAOH,IAAA,CAAKC,SAAL,CAEP,EAAC,CAAA,CAAGf,GAAIkB,CAAAA,QAAR,EAAkBD,IAAlB,CAAJ,CACEH,IAAA,CAAKC,SAAL,CADF,CACoBE,IADpB,CAC2B,CAD3B,CAEW,CAAC,CAAA,CAAGjB,GAAImB,CAAAA,WAAR,EAAqBF,IAArB,CAFX,GAGEH,IAAA,CAAKC,SAAL,CAHF,CAGoBE,IAAKG,CAAAA,KAAL,CAAW,CAAX,CAHpB,CAMA,IAAI,CACF,MAAOT,OAAOU,CAAAA,KAAP,CAAa,IAAb,CAAmBP,IAAnB,CADL,CAEF,MAAOQ,GAAP,CAAY,CACZ,KAAM,CAAC,CAAA,CAAGrB,eAAgBsB,CAAAA,cAApB,EAAoCD,GAApC,CAAN;AADY,CAba,CADR,CAAhB,CAjB4F,CAA1D,CAoCxC,CACDE,oBAAqB,CAAA,CADpB,CApCwC,CAuC3C7B,QAAQI,CAAAA,qBAAR,CAAgCA,OAzDqG;",
"sources":["node_modules/mathjs/lib/cjs/expression/transform/concat.transform.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$transform$concat_transform\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createConcatTransform = void 0;\n\nvar _is = require(\"../../utils/is.js\");\n\nvar _errorTransform = require(\"./utils/errorTransform.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _concat = require(\"../../function/matrix/concat.js\");\n\nvar name = 'concat';\nvar dependencies = ['typed', 'matrix', 'isInteger'];\nvar createConcatTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      isInteger = _ref.isInteger;\n  var concat = (0, _concat.createConcat)({\n    typed: typed,\n    matrix: matrix,\n    isInteger: isInteger\n  });\n  /**\n   * Attach a transform function to math.range\n   * Adds a property transform containing the transform function.\n   *\n   * This transform changed the last `dim` parameter of function concat\n   * from one-based to zero based\n   */\n\n  return typed('concat', {\n    '...any': function any(args) {\n      // change last argument from one-based to zero-based\n      var lastIndex = args.length - 1;\n      var last = args[lastIndex];\n\n      if ((0, _is.isNumber)(last)) {\n        args[lastIndex] = last - 1;\n      } else if ((0, _is.isBigNumber)(last)) {\n        args[lastIndex] = last.minus(1);\n      }\n\n      try {\n        return concat.apply(null, args);\n      } catch (err) {\n        throw (0, _errorTransform.errorTransform)(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});\nexports.createConcatTransform = createConcatTransform;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createConcatTransform","_is","_errorTransform","_factory","_concat","factory","name","dependencies","_ref","typed","matrix","isInteger","concat","createConcat","any","args","lastIndex","length","last","isNumber","isBigNumber","minus","apply","err","errorTransform","isTransformFunction"]
}
