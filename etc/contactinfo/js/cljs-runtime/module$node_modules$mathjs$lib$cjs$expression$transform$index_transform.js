shadow$provide.module$node_modules$mathjs$lib$cjs$expression$transform$index_transform=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createIndexTransform=void 0;var _is=require("module$node_modules$mathjs$lib$cjs$utils$is");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("index",["Index"],function(_ref){var Index=_ref.Index;return function(){for(var args=[],i=0,ii=arguments.length;i<ii;i++){var arg=
arguments[i];if((0,_is.isRange)(arg))arg.start--,arg.end-=0<arg.step?0:2;else if(arg&&!0===arg.isSet)arg=arg.map(function(v){return v-1});else if((0,_is.isArray)(arg)||(0,_is.isMatrix)(arg))arg=arg.map(function(v){return v-1});else if((0,_is.isNumber)(arg))arg--;else if((0,_is.isBigNumber)(arg))arg=arg.toNumber()-1;else if("string"!==typeof arg)throw new TypeError("Dimension must be an Array, Matrix, number, string, or Range");args[i]=arg}i=new Index;Index.apply(i,args);return i}},{isTransformFunction:!0});
exports.createIndexTransform=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$expression$transform$index_transform.js.map
