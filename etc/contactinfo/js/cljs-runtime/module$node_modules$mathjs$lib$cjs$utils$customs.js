shadow$provide.module$node_modules$mathjs$lib$cjs$utils$customs=function(global,require,module,exports){function _typeof(obj$jscomp$0){"@babel/helpers - typeof";_typeof="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj};return _typeof(obj$jscomp$0)}function isSafeProperty(object,prop){return object&&"object"===_typeof(object)?(0,_object.hasOwnProperty)(safeNativeProperties,
prop)?!0:prop in Object.prototype||prop in Function.prototype?!1:!0:!1}function isSafeMethod(object,method){return null===object||void 0===object||"function"!==typeof object[method]||(0,_object.hasOwnProperty)(object,method)&&Object.getPrototypeOf&&method in Object.getPrototypeOf(object)?!1:(0,_object.hasOwnProperty)(safeNativeMethods,method)?!0:method in Object.prototype||method in Function.prototype?!1:!0}function isPlainObject(object){return"object"===_typeof(object)&&object&&object.constructor===
Object}Object.defineProperty(exports,"__esModule",{value:!0});exports.getSafeProperty=function(object,prop){if(isPlainObject(object)&&isSafeProperty(object,prop))return object[prop];if("function"===typeof object[prop]&&isSafeMethod(object,prop))throw Error('Cannot access method "'+prop+'" as a property');throw Error('No access to property "'+prop+'"');};exports.setSafeProperty=function(object,prop,value){if(isPlainObject(object)&&isSafeProperty(object,prop))return object[prop]=value;throw Error('No access to property "'+
prop+'"');};exports.isSafeProperty=isSafeProperty;exports.validateSafeMethod=function(object,method){if(!isSafeMethod(object,method))throw Error('No access to method "'+method+'"');};exports.isSafeMethod=isSafeMethod;exports.isPlainObject=isPlainObject;var _object=require("module$node_modules$mathjs$lib$cjs$utils$object"),safeNativeProperties={length:!0,name:!0},safeNativeMethods={toString:!0,valueOf:!0,toLocaleString:!0}}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$utils$customs.js.map
