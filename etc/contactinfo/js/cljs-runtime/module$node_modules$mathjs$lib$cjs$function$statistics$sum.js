shadow$provide.module$node_modules$mathjs$lib$cjs$function$statistics$sum=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createSum=void 0;var _collection=require("module$node_modules$mathjs$lib$cjs$utils$collection");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _improveErrorMessage=require("module$node_modules$mathjs$lib$cjs$function$statistics$utils$improveErrorMessage");require=(0,global.factory)("sum",["typed","config",
"add","numeric"],function(_ref){function _sum(array){var sum;(0,_collection.deepForEach)(array,function(value){try{sum=void 0===sum?value:add(sum,value)}catch(err){throw(0,_improveErrorMessage.improveErrorMessage)(err,"sum",value);}});void 0===sum&&(sum=numeric(0,config.number));"string"===typeof sum&&(sum=numeric(sum,config.number));return sum}var typed=_ref.typed,config=_ref.config,add=_ref.add,numeric=_ref.numeric;return typed("sum",{"Array | Matrix":_sum,"Array | Matrix, number | BigNumber":function(array,
dim){try{return(0,_collection.reduce)(array,dim,add)}catch(err){throw(0,_improveErrorMessage.improveErrorMessage)(err,"sum");}},"...":function(args){if((0,_collection.containsCollections)(args))throw new TypeError("Scalar values expected in function sum");return _sum(args)}})});exports.createSum=require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$statistics$sum.js.map
