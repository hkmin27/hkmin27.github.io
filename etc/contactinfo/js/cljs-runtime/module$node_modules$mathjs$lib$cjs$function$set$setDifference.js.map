{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$function$set$setDifference.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/mathjs/lib/cjs/function/set/setDifference.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$set$setDifference\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSetDifference = void 0;\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'setDifference';\nvar dependencies = ['typed', 'size', 'subset', 'compareNatural', 'Index', 'DenseMatrix'];\nvar createSetDifference = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      size = _ref.size,\n      subset = _ref.subset,\n      compareNatural = _ref.compareNatural,\n      Index = _ref.Index,\n      DenseMatrix = _ref.DenseMatrix;\n\n  /**\n   * Create the difference of two (multi)sets: every element of set1, that is not the element of set2.\n   * Multi-dimension arrays will be converted to single-dimension arrays before the operation.\n   *\n   * Syntax:\n   *\n   *    math.setDifference(set1, set2)\n   *\n   * Examples:\n   *\n   *    math.setDifference([1, 2, 3, 4], [3, 4, 5, 6])            // returns [1, 2]\n   *    math.setDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])    // returns [1, 2]\n   *\n   * See also:\n   *\n   *    setUnion, setIntersect, setSymDifference\n   *\n   * @param {Array | Matrix}    a1  A (multi)set\n   * @param {Array | Matrix}    a2  A (multi)set\n   * @return {Array | Matrix}    The difference of two (multi)sets\n   */\n  return typed(name, {\n    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(a1, a2) {\n      var result;\n\n      if (subset(size(a1), new Index(0)) === 0) {\n        // empty-anything=empty\n        result = [];\n      } else if (subset(size(a2), new Index(0)) === 0) {\n        // anything-empty=anything\n        return (0, _array.flatten)(a1.toArray());\n      } else {\n        var b1 = (0, _array.identify)((0, _array.flatten)(Array.isArray(a1) ? a1 : a1.toArray()).sort(compareNatural));\n        var b2 = (0, _array.identify)((0, _array.flatten)(Array.isArray(a2) ? a2 : a2.toArray()).sort(compareNatural));\n        result = [];\n        var inb2;\n\n        for (var i = 0; i < b1.length; i++) {\n          inb2 = false;\n\n          for (var j = 0; j < b2.length; j++) {\n            if (compareNatural(b1[i].value, b2[j].value) === 0 && b1[i].identifier === b2[j].identifier) {\n              // the identifier is always a decimal int\n              inb2 = true;\n              break;\n            }\n          }\n\n          if (!inb2) {\n            result.push(b1[i]);\n          }\n        }\n      } // return an array, if both inputs were arrays\n\n\n      if (Array.isArray(a1) && Array.isArray(a2)) {\n        return (0, _array.generalize)(result);\n      } // return a matrix otherwise\n\n\n      return new DenseMatrix((0, _array.generalize)(result));\n    }\n  });\n});\nexports.createSetDifference = createSetDifference;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createSetDifference","_array","_factory","factory","name","dependencies","_ref","typed","size","subset","compareNatural","Index","DenseMatrix","ArrayMatrixArrayMatrix","a1","a2","result","flatten","toArray","b1","identify","Array","isArray","sort","b2","inb2","i","length","j","identifier","push","generalize"]
}
