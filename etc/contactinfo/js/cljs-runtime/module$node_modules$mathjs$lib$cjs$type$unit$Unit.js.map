{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$type$unit$Unit.js",
"lineCount":99,
"mappings":"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAoB9GC,QAASA,QAAO,CAACC,YAAD,CAAM,CAAE,yBAAsGD,QAAA,CAArD,UAAtB,GAAI,MAAOE,OAAX,EAA+D,QAA/D,GAAoC,MAAOA,OAAOC,CAAAA,QAAlD,CAAqFH,QAAgB,CAACC,GAAD,CAAM,CAAE,MAAO,OAAOA,IAAhB,CAA3G,CAAsJD,QAAgB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAyB,UAAzB,GAAO,MAAOC,OAAd,EAAuCD,GAAIG,CAAAA,WAA3C,GAA2DF,MAA3D,EAAqED,GAArE,GAA6EC,MAAOG,CAAAA,SAApF,CAAgG,QAAhG,CAA2G,MAAOJ,IAA3H,CAAqI,OAAOD,QAAA,CAAQC,YAAR,CAArV,CAEtBK,QAASA,SAAQ,EAAG,CAAEA,QAAA,CAAWC,MAAOC,CAAAA,MAAlB,EAA4B,QAAS,CAACC,MAAD,CAAS,CAAE,IAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBC,SAAUC,CAAAA,MAA9B,CAAsCF,CAAA,EAAtC,CAA2C,CAAE,IAAIG;AAASF,SAAA,CAAUD,CAAV,CAAb,CAAoCI,GAAT,KAASA,GAAT,GAAgBD,OAAhB,CAA8BN,MAAOF,CAAAA,SAAUU,CAAAA,cAAeC,CAAAA,IAAhC,CAAqCH,MAArC,CAA6CC,GAA7C,CAAJ,GAAyDL,MAAA,CAAOK,GAAP,CAAzD,CAAuED,MAAA,CAAOC,GAAP,CAAvE,CAAvD,CAAiJ,MAAOL,OAArM,CAAgN,OAAOH,SAASW,CAAAA,KAAT,CAAe,IAAf,CAAqBN,SAArB,CAAvQ,CAEpBO,QAASA,QAAO,CAACC,MAAD,CAASC,cAAT,CAAyB,CAAE,IAAIC,KAAOd,MAAOc,CAAAA,IAAP,CAAYF,MAAZ,CAAqB,IAAIZ,MAAOe,CAAAA,qBAAX,CAAkC,CAAE,IAAIC,QAAUhB,MAAOe,CAAAA,qBAAP,CAA6BH,MAA7B,CAA0CC,eAAJ,GAAoBG,OAApB,CAA8BA,OAAQC,CAAAA,MAAR,CAAe,QAAS,CAACC,GAAD,CAAM,CAAE,MAAOlB,OAAOmB,CAAAA,wBAAP,CAAgCP,MAAhC,CAAwCM,GAAxC,CAA6CE,CAAAA,UAAtD,CAA9B,CAA9B,CAAkIN,KAAKO,CAAAA,IAAKX,CAAAA,KAAV,CAAgBI,IAAhB,CAAsBE,OAAtB,CAAxL,CAA0N,MAAOF,KAArS,CAEzCQ,QAASA,cAAa,CAACpB,MAAD,CAAS,CAAE,IAAK,IAAIC;AAAI,CAAb,CAAgBA,CAAhB,CAAoBC,SAAUC,CAAAA,MAA9B,CAAsCF,CAAA,EAAtC,CAA2C,CAAE,IAAIG,OAAyB,IAAhB,EAAAF,SAAA,CAAUD,CAAV,CAAA,CAAuBC,SAAA,CAAUD,CAAV,CAAvB,CAAsC,EAAQA,EAAJ,CAAQ,CAAR,CAAaQ,OAAA,CAAQX,MAAA,CAAOM,MAAP,CAAR,CAAwB,CAAA,CAAxB,CAA8BiB,CAAAA,OAA9B,CAAsC,QAAS,CAAChB,GAAD,CAAM,CAA+B,IAAA,MAAAD,MAAA,CAAOC,GAAP,CAALA,IAErL,GAF6KL,OAE7K,CAAkBF,MAAOwB,CAAAA,cAAP,CAF2JtB,MAE3J,CAFmKK,GAEnK,CAAgC,CAAEkB,MAAOA,KAAT,CAAgBL,WAAY,CAAA,CAA5B,CAAkCM,aAAc,CAAA,CAAhD,CAAsDC,SAAU,CAAA,CAAhE,CAAhC,CAAlB,CAF6KzB,MAEzC,CAFiDK,GAEjD,CAApI,CAA+IkB,KAFY,CAArD,CAAb,CAA8HzB,MAAO4B,CAAAA,yBAAX,CAAwC5B,MAAO6B,CAAAA,gBAAP,CAAwB3B,MAAxB,CAAgCF,MAAO4B,CAAAA,yBAAP,CAAiCtB,MAAjC,CAAhC,CAAxC,CAA4HK,OAAA,CAAQX,MAAA,CAAOM,MAAP,CAAR,CAAwBiB,CAAAA,OAAxB,CAAgC,QAAS,CAAChB,GAAD,CAAM,CAAEP,MAAOwB,CAAAA,cAAP,CAAsBtB,MAAtB,CAA8BK,GAA9B,CAAmCP,MAAOmB,CAAAA,wBAAP,CAAgCb,MAAhC,CAAwCC,GAAxC,CAAnC,CAAF,CAA/C,CAA/S,CAA0b,MAAOL,OAA9e;AAvB/BF,MAAOwB,CAAAA,cAAP,CAAsBhC,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CiC,MAAO,CAAA,CADoC,CAA7C,CAGAjC,QAAQsC,CAAAA,eAAR,CAA0B,IAAK,EAE/B,KAAIC,IAAMzC,OAAA,CAAQ,6CAAR,CAEN0C,OAAAA,CAAW1C,OAAA,CAAQ,kDAAR,CAEf,KAAI2C,UAAY3C,OAAA,CAAQ,mDAAR,CAAhB,CAEI4C,QAAU5C,OAAA,CAAQ,iDAAR,CAFd,CAII6C,QAAU7C,OAAA,CAAQ,iDAAR,CAJd,CAMI8C,WAAa9C,OAAA,CAAQ,8DAAR,CAcbwC;OAAAA,CAAiC,CAAC,CAAA,CAAGE,MAASK,CAAAA,OAAb,EAF1BC,MAE0B,CADlBC,sIAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CACkB,CAA0C,QAAS,CAACC,IAAD,CAAO,CAuC7FC,QAASA,KAAI,CAAChB,KAAD,CAAQa,IAAR,CAAc,CACzB,GAAI,EAAE,IAAF,WAAkBG,KAAlB,CAAJ,CACE,KAAUC,MAAJ,CAAU,kDAAV,CAAN,CAGF,GAAgB,IAAhB,GAAMjB,KAAN,EAAkCkB,IAAAA,EAAlC,GAAwBlB,KAAxB,EAA+C,CAAAmB,SAAA,CAAUnB,KAAV,CAA/C,EAAmE,CAAA,CAAC,CAAA,CAAGM,GAAIc,CAAAA,SAAR,EAAmBpB,KAAnB,CAAnE,CACE,KAAM,KAAIqB,SAAJ,CAAc,gGAAd,CAAN;AAGF,GAAaH,IAAAA,EAAb,GAAIL,IAAJ,GAA2C,QAA3C,GAA2B,MAAOA,KAAlC,EAAgE,EAAhE,GAAuDA,IAAvD,EACE,KAAM,KAAIQ,SAAJ,CAAc,uDAAd,CAAN,CAGF,GAAaH,IAAAA,EAAb,GAAIL,IAAJ,CACMS,IAEJ,CAFQN,IAAKO,CAAAA,KAAL,CAAWV,IAAX,CAER,CADA,IAAKW,CAAAA,KACL,CADaF,IAAEE,CAAAA,KACf,CAAA,IAAKC,CAAAA,UAAL,CAAkBH,IAAEG,CAAAA,UAHtB,KAaE,KARA,IAAKD,CAAAA,KAQI9C,CARI,CAAC,CACZgD,KAAMC,SADM,CAEZC,OAAQC,QAASC,CAAAA,IAFL,CAIZC,MAAO,CAJK,CAAD,CAQJrD,CAFT,IAAK+C,CAAAA,UAEI/C,CAFS,EAETA,CAAAA,IAAAA,CAAI,CAAb,CAAgBA,IAAhB,CAAoBsD,eAAgBpD,CAAAA,MAApC,CAA4CF,IAAA,EAA5C,CACE,IAAK+C,CAAAA,UAAL,CAAgB/C,IAAhB,CAAA,CAAqB,CAIzB,KAAKsB,CAAAA,KAAL,CAAuBkB,IAAAA,EAAV,GAAAlB,KAAA,EAAiC,IAAjC,GAAuBA,KAAvB,CAAwC,IAAKiC,CAAAA,UAAL,CAAgBjC,KAAhB,CAAxC,CAAiE,IAC9E,KAAKkC,CAAAA,SAAL,CAAiB,CAAA,CAMjB,KAAKC,CAAAA,2BAAL,CAAmC,CAAA,CAtCV,CAkD3BC,QAASA,eAAc,EAAG,CACxB,IAAA,CAAa,GAAb;AAAOC,UAAP,EAA0B,IAA1B,GAAoBA,UAApB,CAAA,CACEC,IAAA,EAFsB,CAU1BC,QAASA,QAAO,CAACF,CAAD,CAAI,CAClB,MAAY,GAAZ,EAAOA,CAAP,EAAwB,GAAxB,EAAmBA,CADD,CAIpBC,QAASA,KAAI,EAAG,CACdE,KAAA,EACAH,WAAA,CAAII,IAAKC,CAAAA,MAAL,CAAYF,KAAZ,CAFU,CAKhBG,QAASA,OAAM,CAACC,QAAD,CAAW,CACxBJ,KAAA,CAAQI,QACRP,WAAA,CAAII,IAAKC,CAAAA,MAAL,CAAYF,KAAZ,CAFoB,CAK1BK,QAASA,YAAW,EAAG,CACrB,IAAIC,OAAS,EAAb,CACIF,SAAWJ,KAEL,IAAV,GAAIH,UAAJ,CACEC,IAAA,EADF,CAEiB,GAFjB,GAEWD,UAFX,GAGES,MACA,EADUT,UACV,CAAAC,IAAA,EAJF,CAOA,IAAI,EA5BQ,GA4BR,EAAYD,UAAZ,EA5BoB,GA4BpB,EAAYA,UAAZ,EA5BiC,GA4BjC,GAAYA,UAAZ,CAAJ,CAGE,MADAM,OAAA,CAAOC,QAAP,CACO,CAAA,IAIT,IAAU,GAAV,GAAIP,UAAJ,CAIE,IAHAS,MAGI,EAHMT,UAGN,CAFJC,IAAA,EAEI,CAAA,CAACC,OAAA,CAAQF,UAAR,CAAL,CAGE,MADAM,OAAA,CAAOC,QAAP,CACO;AAAA,IAHT,CAJF,IASO,CACL,IAAA,CAAOL,OAAA,CAAQF,UAAR,CAAP,CAAA,CACES,MACA,EADUT,UACV,CAAAC,IAAA,EAGQ,IAAV,GAAID,UAAJ,GACES,MACA,EADUT,UACV,CAAAC,IAAA,EAFF,CANK,CAYP,IAAA,CAAOC,OAAA,CAAQF,UAAR,CAAP,CAAA,CACES,MACA,EADUT,UACV,CAAAC,IAAA,EAIF,IAAU,GAAV,GAAID,UAAJ,EAAuB,GAAvB,GAAiBA,UAAjB,CAA4B,CAG1B,IAAIU,eAAiBP,KACrBQ,SAAA,CAFsBA,EAEtB,CAAmBX,UACnBC,KAAA,EAEA,IAAU,GAAV,GAAID,UAAJ,EAAuB,GAAvB,GAAiBA,UAAjB,CACEW,QACA,EADmBX,UACnB,CAAAC,IAAA,EAIF,IAAI,CAACC,OAAA,CAAQF,UAAR,CAAL,CAGE,MADAM,OAAA,CAAOI,cAAP,CACOD,CAAAA,MAMT,KAFSA,MAET,EAFkBE,QAElB,CAAOT,OAAA,CAAQF,UAAR,CAAP,CAAA,CACES,MACA,EADUT,UACV,CAAAC,IAAA,EAxBwB,CA4B5B,MAAOQ,OAzEc,CA8FvBG,QAASA,eAAc,CAACC,MAAD,CAAS,CAC9B,MAAIb,WAAJ;AAAUa,MAAV,EACEZ,IAAA,EACOY,CAAAA,MAFT,EAIS,IALqB,CA0jBhCC,QAASA,qBAAoB,CAACzB,IAAD,CAAO,CAClC,MAAIA,KAAK0B,CAAAA,SAAL,CAAeC,UAAWvB,CAAAA,IAA1B,CAAJ,EAAsD,IAAtD,GAAuCJ,IAAK1B,CAAAA,KAA5C,EAA8D,CAACsD,eAAOC,CAAAA,WAAtE,CACS7B,IAAK1B,CAAAA,KADd,CAGS0B,IAJyB,CAyiFpC8B,QAASA,qBAAoB,CAACF,MAAD,CAAS,CACd,WAAtB,GAAIA,MAAOR,CAAAA,MAAX,EACMW,MAUJ,CAVS,CAAC,CAAA,CAAG9C,UAAW+C,CAAAA,iBAAf,EAAkCC,UAAlC,CAUT,CATAC,KAAMC,CAAAA,GAAI7D,CAAAA,KASV,CATkB,IAAI2D,UAAJ,CAAe,CAAf,CASlB,CARAC,KAAME,CAAAA,GAAI9D,CAAAA,KAQV,CARkByD,MAAGM,CAAAA,GAAH,CAAO,GAAP,CAQlB,CANAH,KAAMI,CAAAA,IAAKhE,CAAAA,KAMX,CANmByD,MAAGM,CAAAA,GAAH,CAAO,GAAP,CAMnB,CAJAH,KAAMK,CAAAA,KAAMjE,CAAAA,KAIZ,CAJoByD,MAAGS,CAAAA,KAAH,CAAS,CAAT,CAIpB,CAFAN,KAAMO,CAAAA,MAAOnE,CAAAA,KAEb,CAFqByD,MAAGM,CAAAA,GAAH,CAAO,KAAP,CAErB,CAAAH,KAAMQ,CAAAA,MAAOpE,CAAAA,KAAb,CAAqByD,MAAGM,CAAAA,GAAH,CAAO,KAAP,CAXvB,GAcEH,KAAMC,CAAAA,GAAI7D,CAAAA,KASV;AATkB,CASlB,CARA4D,KAAME,CAAAA,GAAI9D,CAAAA,KAQV,CARkBqE,IAAKC,CAAAA,EAQvB,CAR4B,GAQ5B,CANAV,KAAMI,CAAAA,IAAKhE,CAAAA,KAMX,CANmBqE,IAAKC,CAAAA,EAMxB,CAN6B,GAM7B,CAJAV,KAAMK,CAAAA,KAAMjE,CAAAA,KAIZ,CAJ8B,CAI9B,CAJoBqE,IAAKC,CAAAA,EAIzB,CAFAV,KAAMO,CAAAA,MAAOnE,CAAAA,KAEb,CAFqBqE,IAAKC,CAAAA,EAE1B,CAF+B,KAE/B,CAAAV,KAAMQ,CAAAA,MAAOpE,CAAAA,KAAb,CAAqBqE,IAAKC,CAAAA,EAA1B,CAA+B,KAvBjC,CA2BAV,MAAMW,CAAAA,MAAOvE,CAAAA,KAAb,CAAqB4D,KAAMC,CAAAA,GAAI7D,CAAAA,KAC/B4D,MAAMY,CAAAA,MAAOxE,CAAAA,KAAb,CAAqB4D,KAAME,CAAAA,GAAI9D,CAAAA,KAC/B4D,MAAMa,CAAAA,OAAQzE,CAAAA,KAAd,CAAsB4D,KAAMI,CAAAA,IAAKhE,CAAAA,KA9BG,CAlzGuD,IACzF0E,GAAK3D,IAAK2D,CAAAA,EAD+E,CAEzFpB,gBAASvC,IAAKuC,CAAAA,MAF2E,CAGzFqB,UAAY5D,IAAK4D,CAAAA,SAHwE,CAIzFC,SAAW7D,IAAK6D,CAAAA,QAJyE,CAKzFC,eAAiB9D,IAAK8D,CAAAA,cALmE,CAMzFC,aAAe/D,IAAK+D,CAAAA,YANqE,CAOzFC,IAAMhE,IAAKgE,CAAAA,GAP8E,CAQzFC,IAAMjE,IAAKiE,CAAAA,GAR8E,CASzFC,IAAMlE,IAAKkE,CAAAA,GAT8E,CAUzFC,MAAQnE,IAAKmE,CAAAA,KAV4E,CAWzFC,MAAQpE,IAAKoE,CAAAA,KAX4E,CAYzFhE;AAAYJ,IAAKI,CAAAA,SAZwE,CAazFiE,OAASrE,IAAKqE,CAAAA,MAb2E,CAezFC,QAAUtE,IAAKsE,CAAAA,OAf0E,CAgBzF1B,WAAa5C,IAAKuE,CAAAA,SAhBuE,CAiBzFC,UAAYxE,IAAKyE,CAAAA,QAjBwE,CAkBzFC,SAJS1E,IAAK+B,CAAAA,MAsElB9B,KAAK3C,CAAAA,SAAUqH,CAAAA,IAAf,CAAsB,MACtB1E,KAAK3C,CAAAA,SAAUsH,CAAAA,MAAf,CAAwB,CAAA,CArFqE,KAuFzFlD,IAvFyF,CAuFnFD,KAvFmF,CAuF5EH,UA4IjBrB,KAAKO,CAAAA,KAAL,CAAaqE,QAAS,CAACC,GAAD,CAAMC,OAAN,CAAe,CACnCA,OAAA,CAAUA,OAAV,EAAqB,EACrBrD,KAAA,CAAOoD,GACPrD,MAAA,CAAQ,EACRH,WAAA,CAAI,EAEJ,IAAoB,QAApB,GAAI,MAAOI,KAAX,CACE,KAAM,KAAIpB,SAAJ,CAAc,iDAAd,CAAN,CAGF,IAAIK,KAAO,IAAIV,IACfU,KAAKF,CAAAA,KAAL,CAAa,EACb,KAAIuE,uBAAyB,CAA7B,CACIC,cAAgB,CAAA,CAapB1D,KAAA,EACAF,eAAA,EAEA,KAAI6D;AAAWpD,WAAA,EAAf,CACI7C,MAAQ,IAEZ,IAAIiG,QAAJ,CAAc,CACZ,GAAsB,WAAtB,GAAI3C,eAAOR,CAAAA,MAAX,CACE9C,KAAA,CAAQ,IAAI2D,UAAJ,CAAesC,QAAf,CADV,KAEO,IAAsB,UAAtB,GAAI3C,eAAOR,CAAAA,MAAX,CACL,GAAI,CAEF9C,KAAA,CAAQ,IAAIuF,SAAJ,CAAcU,QAAd,CAFN,CAGF,MAAOC,GAAP,CAAY,CACZlG,KAAA,CAAQmG,UAAA,CAAWF,QAAX,CADI,CAJT,IASLjG,MAAA,CAAQmG,UAAA,CAAWF,QAAX,CAGV7D,eAAA,EAGIa,eAAA,CAAe,GAAf,CAAJ,EACE8C,sBACA,CADyB,CACzB,CAAAC,aAAA,CAAgB,CAAA,CAFlB,EAGW/C,cAAA,CAAe,GAAf,CAHX,GAIE8C,sBACA,CADyB,EACzB,CAAAC,aAAA,CAAgB,CAAA,CALlB,CAlBY,CA4BVI,QAAAA,CAAuB,EAI3B,KAFA,IAAIC,4BAA8B,CAElC,CAAA,CAAA,CAAa,CAIX,IAHAjE,cAAA,EAGA,CAAa,GAAb,GAAOC,UAAP,CAAA,CACE+D,QAAqBxG,CAAAA,IAArB,CAA0BmG,sBAA1B,CAIA;AAHAM,2BAGA,EAH+BN,sBAG/B,CAFAA,sBAEA,CAFyB,CAEzB,CADAzD,IAAA,EACA,CAAAF,cAAA,EAMF,IAAIC,UAAJ,CAAO,CACL,IAAIiE,KAAOjE,UAnHf,KAFIkE,aAEJ,CAFe,EAEf,CAAOhE,OAAA,CAAQF,UAAR,CAAP,EAAqBrB,IAAKwF,CAAAA,YAAL,CAAkBnE,UAAlB,CAArB,CAAA,CACEkE,aACA,EADYlE,UACZ,CAAAC,IAAA,EAIF,KAAImE,OAASF,aAAS7D,CAAAA,MAAT,CAAgB,CAAhB,CAGX,cAAA,CADE1B,IAAKwF,CAAAA,YAAL,CAAkBC,MAAlB,CAAJ,CACSF,aADT,CAGS,IA2GL,IAAa,IAAb,GAAIG,aAAJ,CACE,KAAM,KAAIC,WAAJ,CAAgB,cAAhB,CAAiCL,IAAjC,CAAwC,QAAxC,CAAmD7D,IAAnD,CAA0D,aAA1D,CAA0ED,KAAMoE,CAAAA,QAAN,EAA1E,CAAN,CALG,CAAP,IASE,MAIEC,KAAAA,CAAMC,SAAA,CAAUJ,aAAV,CAEV,IAAY,IAAZ,GAAIG,IAAJ,CAEE,KAAM,KAAIF,WAAJ,CAAgB,QAAhB;AAA2BD,aAA3B,CAAkC,cAAlC,CAAN,CAGUX,sBAARhE,EAAiCsE,2BAErCjE,eAAA,EAEA,IAAIa,cAAA,CAAe,GAAf,CAAJ,CAAyB,CACvBb,cAAA,EACI2E,cAAAA,CAAIlE,WAAA,EAER,IAAU,IAAV,GAAIkE,aAAJ,CAEE,KAAM,KAAIJ,WAAJ,CAAgB,MAAhB,CAAyBd,GAAzB,CAA+B,oDAA/B,CAAN,CAGF9D,sBAAA,EAASgF,aATc,CAazBrF,IAAKF,CAAAA,KAAM5B,CAAAA,IAAX,CAAgB,CACd8B,KAAMmF,IAAInF,CAAAA,IADI,CAEdE,OAAQiF,IAAIjF,CAAAA,MAFE,CAGdG,MAAOA,sBAHO,CAAhB,CAMA,KAASrD,aAAT,CAAa,CAAb,CAAgBA,aAAhB,CAAoBsD,eAAgBpD,CAAAA,MAApC,CAA4CF,aAAA,EAA5C,CACEgD,IAAKD,CAAAA,UAAL,CAAgB/C,aAAhB,CAAA;CAAuBmI,IAAInF,CAAAA,IAAKD,CAAAA,UAAT,CAAoB/C,aAApB,CAAvB,EAAiD,CAAjD,EAAsDqD,sBAOxD,KAFAK,cAAA,EAEA,CAAa,GAAb,GAAOC,UAAP,CAAA,CAAkB,CAChB,GAAoC,CAApC,GAAI+D,QAAqBxH,CAAAA,MAAzB,CACE,KAAM,KAAI+H,WAAJ,CAAgB,oBAAhB,CAAuClE,IAAvC,CAA8C,aAA9C,CAA8DD,KAAMoE,CAAAA,QAAN,EAA9D,CAAN,CAGFP,2BAAA,EAA+BD,QAAqBY,CAAAA,GAArB,EAC/B1E,KAAA,EACAF,eAAA,EAPgB,CAYlB4D,aAAA,CAAgB,CAAA,CAEZ/C,eAAA,CAAe,GAAf,CAAJ,EAEE8C,sBACA,CADyB,CACzB,CAAAC,aAAA,CAAgB,CAAA,CAHlB,EAIW/C,cAAA,CAAe,GAAf,CAAJ,EAEL8C,sBACA,CADyB,EACzB,CAAAC,aAAA,CAAgB,CAAA,CAHX,EAMLD,sBANK,CAMoB,CAIvBc,KAAInF,CAAAA,IAAKuF,CAAAA,IAAb,GAEEC,YAAaC,CAAAA,IAAb,CADcN,IAAInF,CAAAA,IAAKuF,CAAAA,IAAKnI,CAAAA,GAC5B,CAFF;AAE+B,CAC3B4C,KAAMmF,IAAInF,CAAAA,IADiB,CAE3BE,OAAQiF,IAAIjF,CAAAA,MAFe,CAF/B,CA9FW,CAwGbQ,cAAA,EAEA,IAAIC,UAAJ,CACE,KAAM,KAAIsE,WAAJ,CAAgB,oBAAhB,CAAuCd,GAAvC,CAA6C,GAA7C,CAAN,CAIF,GAAIG,aAAJ,CACE,KAAM,KAAIW,WAAJ,CAAgB,wBAAhB,CAA2Cd,GAA3C,CAAiD,GAAjD,CAAN,CAIF,GAAoC,CAApC,GAAIO,QAAqBxH,CAAAA,MAAzB,CACE,KAAM,KAAI+H,WAAJ,CAAgB,oBAAhB,CAAuClE,IAAvC,CAA8C,GAA9C,CAAN,CAIF,GAA0B,CAA1B,GAAIf,IAAKF,CAAAA,KAAM5C,CAAAA,MAAf,EAA+B,CAACkH,OAAQsB,CAAAA,YAAxC,CACE,KAAM,KAAIT,WAAJ,CAAgB,GAAhB,CAAsBd,GAAtB,CAA4B,qBAA5B,CAAN,CAGFnE,IAAK1B,CAAAA,KAAL,CAAuBkB,IAAAA,EAAV,GAAAlB,KAAA,CAAsB0B,IAAKO,CAAAA,UAAL,CAAgBjC,KAAhB,CAAtB,CAA+C,IAC5D,OAAO0B,KA9L4B,CAuMrCV,KAAK3C,CAAAA,SAAUgJ,CAAAA,KAAf,CAAuBC,QAAS,EAAG,CACjC,IAAI5F,KAAO,IAAIV,IACfU,KAAKQ,CAAAA,SAAL;AAAiB,IAAKA,CAAAA,SACtBR,KAAKS,CAAAA,2BAAL,CAAmC,IAAKA,CAAAA,2BACxCT,KAAK1B,CAAAA,KAAL,CAAa,CAAC,CAAA,CAAGU,OAAQ2G,CAAAA,KAAZ,EAAmB,IAAKrH,CAAAA,KAAxB,CACb0B,KAAKD,CAAAA,UAAL,CAAkB,IAAKA,CAAAA,UAAW8F,CAAAA,KAAhB,CAAsB,CAAtB,CAClB7F,KAAKF,CAAAA,KAAL,CAAa,EAEb,KAAK,IAAI9C,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAK8C,CAAAA,KAAM5C,CAAAA,MAA/B,CAAuCF,CAAA,EAAvC,CAA4C,CAC1CgD,IAAKF,CAAAA,KAAL,CAAW9C,CAAX,CAAA,CAAgB,EAEhB,KAAKqI,IAAIA,CAAT,GAAc,KAAKvF,CAAAA,KAAL,CAAW9C,CAAX,CAAd,CACM,CAAC,CAAA,CAAGgC,OAAQ3B,CAAAA,cAAZ,EAA4B,IAAKyC,CAAAA,KAAL,CAAW9C,CAAX,CAA5B,CAA2CqI,CAA3C,CAAJ,GACErF,IAAKF,CAAAA,KAAL,CAAW9C,CAAX,CAAA,CAAcqI,CAAd,CADF,CACqB,IAAKvF,CAAAA,KAAL,CAAW9C,CAAX,CAAA,CAAcqI,CAAd,CADrB,CAJwC,CAU5C,MAAOrF,KAlB0B,CA2BnCV,KAAK3C,CAAAA,SAAUmJ,CAAAA,UAAf,CAA4BC,QAAS,EAAG,CACtC,MAA0B,EAA1B,GAAI,IAAKjG,CAAAA,KAAM5C,CAAAA,MAAf,CACS,CAAA,CADT,CAI2B,CAJ3B,CAIO,IAAK4C,CAAAA,KAAM5C,CAAAA,MAJlB,EAIsE,KAJtE,CAIgCyF,IAAKW,CAAAA,GAAL,CAAS,IAAKxD,CAAAA,KAAL,CAAW,CAAX,CAAcO,CAAAA,KAAvB,CAA+B,CAA/B,CALM,CAgBxCf,KAAK3C,CAAAA,SAAU4D,CAAAA,UAAf;AAA4ByF,QAAS,CAAC1H,KAAD,CAAQ,CAI3C,GAAc,IAAd,GAAIA,KAAJ,EAAgCkB,IAAAA,EAAhC,GAAsBlB,KAAtB,EAAmE,CAAnE,GAA6C,IAAKwB,CAAAA,KAAM5C,CAAAA,MAAxD,CACE,MAAOoB,MACF,IAAI,IAAKwH,CAAAA,UAAL,EAAJ,CAAuB,CAGxBX,IAAAA,WAAM7G,KACV,KAAA2H,QAAU3G,IAAK4G,CAAAA,mBAAL,CAAyB,CAAC,CAAA,CAAGtH,GAAIuH,CAAAA,MAAR,EAAgB7H,KAAhB,CAAzB,CAEV,KAAK,IAAItB,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAK8C,CAAAA,KAAM5C,CAAAA,MAA/B,CAAuCF,CAAA,EAAvC,CAA4C,CAC1C,IAAAoJ,UAAYH,OAAA,CAAQ,IAAKnG,CAAAA,KAAL,CAAW9C,CAAX,CAAcgD,CAAAA,IAAK1B,CAAAA,KAA3B,CACZ,KAAA+H,gBAAkBJ,OAAA,CAAQ,IAAKnG,CAAAA,KAAL,CAAW9C,CAAX,CAAckD,CAAAA,MAAO5B,CAAAA,KAA7B,CAClBgI,MAAA,CAAYL,OAAA,CAAQ,IAAKnG,CAAAA,KAAL,CAAW9C,CAAX,CAAcqD,CAAAA,KAAtB,CACZ8E,WAAA,CAAMhC,cAAA,CAAegC,UAAf,CAAoB9B,GAAA,CAAIF,cAAA,CAAeiD,SAAf,CAA0BC,eAA1B,CAAJ,CAAgDC,KAAhD,CAApB,CAJoC,CAO5C,MAAOnB,WAbqB,CAgB5Bc,OAAA,CAAU3G,IAAK4G,CAAAA,mBAAL,CAAyB,CAAC,CAAA;AAAGtH,GAAIuH,CAAAA,MAAR,EAAgB7H,KAAhB,CAAzB,CAEV8H,UAAA,CAAYH,OAAA,CAAQ,IAAKnG,CAAAA,KAAL,CAAW,CAAX,CAAcE,CAAAA,IAAK1B,CAAAA,KAA3B,CACZiI,WAAA,CAAaN,OAAA,CAAQ,IAAKnG,CAAAA,KAAL,CAAW,CAAX,CAAcE,CAAAA,IAAKwG,CAAAA,MAA3B,CACbH,gBAAA,CAAkBJ,OAAA,CAAQ,IAAKnG,CAAAA,KAAL,CAAW,CAAX,CAAcI,CAAAA,MAAO5B,CAAAA,KAA7B,CAClB,OAAO6E,eAAA,CAAeF,SAAA,CAAU3E,KAAV,CAAiBiI,UAAjB,CAAf,CAA6CpD,cAAA,CAAeiD,SAAf,CAA0BC,eAA1B,CAA7C,CA3BkC,CAwC7C/G,KAAK3C,CAAAA,SAAU8J,CAAAA,YAAf,CAA8BC,QAAS,CAACpI,KAAD,CAAQqI,WAAR,CAAqB,CAI1D,GAAc,IAAd,GAAIrI,KAAJ,EAAgCkB,IAAAA,EAAhC,GAAsBlB,KAAtB,EAAmE,CAAnE,GAA6C,IAAKwB,CAAAA,KAAM5C,CAAAA,MAAxD,CACE,MAAOoB,MACF,IAAI,IAAKwH,CAAAA,UAAL,EAAJ,CAAuB,CAIxBX,WAAAA,CAAM7G,KACV,KAAA2H,WAAU3G,IAAK4G,CAAAA,mBAAL,CAAyB,CAAC,CAAA,CAAGtH,GAAIuH,CAAAA,MAAR,EAAgB7H,KAAhB,CAAzB,CAEV,KAAK,IAAItB,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAK8C,CAAAA,KAAM5C,CAAAA,MAA/B,CAAuCF,CAAA,EAAvC,CAA4C,CAC1C,IAAAoJ;AAAYH,UAAA,CAAQ,IAAKnG,CAAAA,KAAL,CAAW9C,CAAX,CAAcgD,CAAAA,IAAK1B,CAAAA,KAA3B,CACZ,KAAA+H,gBAAkBJ,UAAA,CAAQ,IAAKnG,CAAAA,KAAL,CAAW9C,CAAX,CAAckD,CAAAA,MAAO5B,CAAAA,KAA7B,CAClBgI,MAAA,CAAYL,UAAA,CAAQ,IAAKnG,CAAAA,KAAL,CAAW9C,CAAX,CAAcqD,CAAAA,KAAtB,CACZ8E,YAAA,CAAM/B,YAAA,CAAa+B,WAAb,CAAkB9B,GAAA,CAAIF,cAAA,CAAeiD,SAAf,CAA0BC,eAA1B,CAAJ,CAAgDC,KAAhD,CAAlB,CAJoC,CAO5C,MAAOnB,YAdqB,CAiB5Bc,UAAA,CAAU3G,IAAK4G,CAAAA,mBAAL,CAAyB,CAAC,CAAA,CAAGtH,GAAIuH,CAAAA,MAAR,EAAgB7H,KAAhB,CAAzB,CAEV8H,UAAA,CAAYH,UAAA,CAAQ,IAAKnG,CAAAA,KAAL,CAAW,CAAX,CAAcE,CAAAA,IAAK1B,CAAAA,KAA3B,CACZ+H,gBAAA,CAAkBJ,UAAA,CAAQ,IAAKnG,CAAAA,KAAL,CAAW,CAAX,CAAcI,CAAAA,MAAO5B,CAAAA,KAA7B,CAClBiI,WAAA,CAAaN,UAAA,CAAQ,IAAKnG,CAAAA,KAAL,CAAW,CAAX,CAAcE,CAAAA,IAAKwG,CAAAA,MAA3B,CAEb,OAAoBhH,KAAAA,EAApB,GAAImH,WAAJ,EAAiD,IAAjD,GAAiCA,WAAjC;AACSzD,QAAA,CAASE,YAAA,CAAaA,YAAA,CAAa9E,KAAb,CAAoB8H,SAApB,CAAb,CAA6CC,eAA7C,CAAT,CAAwEE,UAAxE,CADT,CAGSrD,QAAA,CAASE,YAAA,CAAaA,YAAA,CAAa9E,KAAb,CAAoB8H,SAApB,CAAb,CAA6CO,WAA7C,CAAT,CAAoEJ,UAApE,CAhC+C,CA8C5D,KAAInB,UAAY,CAAC,CAAA,CAAGtG,SAAU8H,CAAAA,OAAd,EAAuB,QAAS,CAACzC,GAAD,CAAM,CAEpD,GAAI,CAAC,CAAA,CAAGnF,OAAQ3B,CAAAA,cAAZ,EAA4B6E,KAA5B,CAAmCiC,GAAnC,CAAJ,CAGE,MAFInE,IAEG,CAFIkC,KAAA,CAAMiC,GAAN,CAEJ,CAAA,CACLnE,KAAMA,GADD,CAELE,OAHWF,GAAK6G,CAAAA,QAAL3G,CAAc,EAAdA,CACN,CAMT,KAAK4G,IAAIA,KAAT,GAAkB5E,MAAlB,CACE,GAAI,CAAC,CAAA,CAAGlD,OAAQ3B,CAAAA,cAAZ,EAA4B6E,KAA5B,CAAmC4E,KAAnC,CAAJ,EACM,CAAC,CAAA,CAAG/H,OAAQgI,CAAAA,QAAZ,EAAsB5C,GAAtB,CAA2B2C,KAA3B,CADN,CACyC,CACrC,IAAIE,MAAQ9E,KAAA,CAAM4E,KAAN,CAAZ,CAEIG,WAAa9C,GAAI+C,CAAAA,SAAJ,CAAc,CAAd,CADD/C,GAAIjH,CAAAA,MACH,CADY4J,KAAM5J,CAAAA,MAClB,CAEbiK,WAAAA,CAAU,CAAC,CAAA,CAAGnI,OAAQ3B,CAAAA,cAAZ,EAA4B2J,KAAMH,CAAAA,QAAlC;AAA4CI,UAA5C,CAAA,CAA0DD,KAAMH,CAAAA,QAAN,CAAeI,UAAf,CAA1D,CAAuFzH,IAAAA,EAErG,IAAgBA,IAAAA,EAAhB,GAAI2H,UAAJ,CAEE,MAAO,CACLnH,KAAMgH,KADD,CAEL9G,OAAQiH,UAFH,CAT4B,CAkB3C,MAAO,KA/B6C,CAAtC,CAgCb,CACDC,OAAQA,QAAe,CAACC,IAAD,CAAO,CAC5B,MAAOA,KAAA,CAAK,CAAL,CADqB,CAD7B,CAIDC,MAAO,GAJN,CAhCa,CAgDhBhI,KAAKiI,CAAAA,eAAL,CAAuBC,QAAS,CAACrI,IAAD,CAAO,CACrC,MAA2B,KAA3B,GAAOiG,SAAA,CAAUjG,IAAV,CAD8B,CAWvCG,KAAK3C,CAAAA,SAAU8K,CAAAA,OAAf,CAAyBC,QAAS,CAACnC,IAAD,CAAO,CACnB,QAApB,GAAI,MAAOA,KAAX,GACEA,IADF,CACS5D,UAAA,CAAW4D,IAAX,CADT,CAIA,IAAI,CAACA,IAAL,CACE,MAAO,CAAA,CAIT,KAAK,IAAIvI,EAAI,CAAb,CAAgBA,CAAhB,CAAoBsD,eAAgBpD,CAAAA,MAApC,CAA4CF,CAAA,EAA5C,CACE,GAAsE,KAAtE,CAAI2F,IAAKW,CAAAA,GAAL,EAAU,IAAKvD,CAAAA,UAAL,CAAgB/C,CAAhB,CAAV,EAAgC,CAAhC,GAAsCuI,IAAKxF,CAAAA,UAAL,CAAgB/C,CAAhB,CAAtC,EAA4D,CAA5D,EAAJ,CACE,MAAO,CAAA,CAIX,OAAO,CAAA,CAhBgC,CA2BzCsC,KAAK3C,CAAAA,SAAU+E,CAAAA,SAAf,CAA2BiG,QAAS,CAACC,KAAD,CAAQ,CAE1C,IAAK,IAAI5K;AAAI,CAAb,CAAgBA,CAAhB,CAAoBsD,eAAgBpD,CAAAA,MAApC,CAA4CF,CAAA,EAA5C,CACE,GAAuE,KAAvE,CAAI2F,IAAKW,CAAAA,GAAL,EAAU,IAAKvD,CAAAA,UAAL,CAAgB/C,CAAhB,CAAV,EAAgC,CAAhC,GAAsC4K,KAAM7H,CAAAA,UAAN,CAAiB/C,CAAjB,CAAtC,EAA6D,CAA7D,EAAJ,CACE,MAAO,CAAA,CAIX,OAAO,CAAA,CARmC,CAkB5CsC,KAAK3C,CAAAA,SAAUkL,CAAAA,MAAf,CAAwBC,QAAS,CAACF,KAAD,CAAQ,CACvC,MAAO,KAAKlG,CAAAA,SAAL,CAAekG,KAAf,CAAP,EAAgCnE,KAAA,CAAM,IAAKnF,CAAAA,KAAX,CAAkBsJ,KAAMtJ,CAAAA,KAAxB,CADO,CAWzCgB,KAAK3C,CAAAA,SAAUoL,CAAAA,QAAf,CAA0BC,QAAS,CAACJ,KAAD,CAAQ,CAGzC,IAFA,IAAIzC,IAAM,IAAKQ,CAAAA,KAAL,EAAV,CAES3I,EAAI,CAAb,CAAgBA,CAAhB,CAAoBsD,eAAgBpD,CAAAA,MAApC,CAA4CF,CAAA,EAA5C,CAEEmI,GAAIpF,CAAAA,UAAJ,CAAe/C,CAAf,CAAA,EAAqB,IAAK+C,CAAAA,UAAL,CAAgB/C,CAAhB,CAArB,EAA2C,CAA3C,GAAiD4K,KAAM7H,CAAAA,UAAN,CAAiB/C,CAAjB,CAAjD,EAAwE,CAAxE,CAIF,KAASiL,CAAT,CAAc,CAAd,CAAiBA,CAAjB,CAAsBL,KAAM9H,CAAAA,KAAM5C,CAAAA,MAAlC,CAA0C+K,CAAA,EAA1C,CAAgD,CAE9C,IAAIC,SAAW/J,aAAA,CAAc,EAAd,CAAkByJ,KAAM9H,CAAAA,KAAN,CAAYmI,CAAZ,CAAlB,CAEf9C,IAAIrF,CAAAA,KAAM5B,CAAAA,IAAV,CAAegK,QAAf,CAJ8C,CAQ7B,IAAnB,GAAI,IAAK5J,CAAAA,KAAT;AAA2C,IAA3C,GAA2BsJ,KAAMtJ,CAAAA,KAAjC,EACM6J,CAEJ,CAF6B,IAAf,GAAA,IAAK7J,CAAAA,KAAL,CAAsB,IAAKiC,CAAAA,UAAL,CAAgB,CAAhB,CAAtB,CAA2C,IAAKjC,CAAAA,KAE9D,CADI8J,KACJ,CAD+B,IAAhB,GAAAR,KAAMtJ,CAAAA,KAAN,CAAuBsJ,KAAMrH,CAAAA,UAAN,CAAiB,CAAjB,CAAvB,CAA6CqH,KAAMtJ,CAAAA,KAClE,CAAA6G,GAAI7G,CAAAA,KAAJ,CAAY6E,cAAA,CAAegF,CAAf,CAAwBC,KAAxB,CAHd,EAKEjD,GAAI7G,CAAAA,KALN,CAKc,IAGd6G,IAAI1E,CAAAA,2BAAJ,CAAkC,CAAA,CAClC,OAAOgB,qBAAA,CAAqB0D,GAArB,CA1BkC,CAoC3C7F,KAAK3C,CAAAA,SAAU0L,CAAAA,MAAf,CAAwBC,QAAS,CAACV,KAAD,CAAQ,CAGvC,IAFA,IAAIzC,IAAM,IAAKQ,CAAAA,KAAL,EAAV,CAES3I,EAAI,CAAb,CAAgBA,CAAhB,CAAoBsD,eAAgBpD,CAAAA,MAApC,CAA4CF,CAAA,EAA5C,CAEEmI,GAAIpF,CAAAA,UAAJ,CAAe/C,CAAf,CAAA,EAAqB,IAAK+C,CAAAA,UAAL,CAAgB/C,CAAhB,CAArB,EAA2C,CAA3C,GAAiD4K,KAAM7H,CAAAA,UAAN,CAAiB/C,CAAjB,CAAjD,EAAwE,CAAxE,CAIF,KAASuL,CAAT,CAAe,CAAf,CAAkBA,CAAlB,CAAwBX,KAAM9H,CAAAA,KAAM5C,CAAAA,MAApC,CAA4CqL,CAAA,EAA5C,CAAmD,CAEjD,IAAIL,SAAW/J,aAAA,CAAcA,aAAA,CAAc,EAAd,CAAkByJ,KAAM9H,CAAAA,KAAN,CAAYyI,CAAZ,CAAlB,CAAd;AAAmD,EAAnD,CAAuD,CACpElI,MAAO,CAACuH,KAAM9H,CAAAA,KAAN,CAAYyI,CAAZ,CAAiBlI,CAAAA,KAD2C,CAAvD,CAIf8E,IAAIrF,CAAAA,KAAM5B,CAAAA,IAAV,CAAegK,QAAf,CANiD,CAUhC,IAAnB,GAAI,IAAK5J,CAAAA,KAAT,EAA2C,IAA3C,GAA2BsJ,KAAMtJ,CAAAA,KAAjC,EACM6J,CAEJ,CAF6B,IAAf,GAAA,IAAK7J,CAAAA,KAAL,CAAsB,IAAKiC,CAAAA,UAAL,CAAgB,CAAhB,CAAtB,CAA2C,IAAKjC,CAAAA,KAE9D,CADI8J,KACJ,CAD+B,IAAhB,GAAAR,KAAMtJ,CAAAA,KAAN,CAAuBsJ,KAAMrH,CAAAA,UAAN,CAAiB,CAAjB,CAAvB,CAA6CqH,KAAMtJ,CAAAA,KAClE,CAAA6G,GAAI7G,CAAAA,KAAJ,CAAY8E,YAAA,CAAa+E,CAAb,CAAsBC,KAAtB,CAHd,EAKEjD,GAAI7G,CAAAA,KALN,CAKc,IAGd6G,IAAI1E,CAAAA,2BAAJ,CAAkC,CAAA,CAClC,OAAOgB,qBAAA,CAAqB0D,GAArB,CA5BgC,CAsCzC7F,KAAK3C,CAAAA,SAAU0G,CAAAA,GAAf,CAAqBmF,QAAS,CAACnD,CAAD,CAAI,CAGhC,IAFA,IAAIF,IAAM,IAAKQ,CAAAA,KAAL,EAAV,CAES3I,EAAI,CAAb,CAAgBA,CAAhB,CAAoBsD,eAAgBpD,CAAAA,MAApC,CAA4CF,CAAA,EAA5C,CAEEmI,GAAIpF,CAAAA,UAAJ,CAAe/C,CAAf,CAAA,EAAqB,IAAK+C,CAAAA,UAAL,CAAgB/C,CAAhB,CAArB,EAA2C,CAA3C,EAAgDqI,CAIlD,KAASoD,CAAT,CAAe,CAAf,CAAkBA,CAAlB,CAAwBtD,GAAIrF,CAAAA,KAAM5C,CAAAA,MAAlC,CAA0CuL,CAAA,EAA1C,CACEtD,GAAIrF,CAAAA,KAAJ,CAAU2I,CAAV,CAAepI,CAAAA,KAAf;AAAwBgF,CAIxBF,IAAI7G,CAAAA,KAAJ,CADgB,IAAlB,GAAI6G,GAAI7G,CAAAA,KAAR,CACc+E,GAAA,CAAI8B,GAAI7G,CAAAA,KAAR,CAAe+G,CAAf,CADd,CAOc,IAGdF,IAAI1E,CAAAA,2BAAJ,CAAkC,CAAA,CAClC,OAAOgB,qBAAA,CAAqB0D,GAArB,CAxByB,CAgDlC7F,KAAK3C,CAAAA,SAAU2G,CAAAA,GAAf,CAAqBoF,QAAS,EAAG,CAG/B,IAAIC,IAAM,IAAKhD,CAAAA,KAAL,EACVgD,IAAIrK,CAAAA,KAAJ,CAA0B,IAAd,GAAAqK,GAAIrK,CAAAA,KAAJ,CAAqBgF,GAAA,CAAIqF,GAAIrK,CAAAA,KAAR,CAArB,CAAsC,IAElD,KAAKtB,IAAIA,CAAT,GAAc2L,IAAI7I,CAAAA,KAAlB,CACE,GAA+B,IAA/B,GAAI6I,GAAI7I,CAAAA,KAAJ,CAAU9C,CAAV,CAAagD,CAAAA,IAAKb,CAAAA,IAAtB,EAAkE,KAAlE,GAAuCwJ,GAAI7I,CAAAA,KAAJ,CAAU9C,CAAV,CAAagD,CAAAA,IAAKb,CAAAA,IAAzD,CACEwJ,GAAI7I,CAAAA,KAAJ,CAAU9C,CAAV,CAAagD,CAAAA,IAAb,CAAoBkC,KAAM0G,CAAAA,CAI9B,OAAOD,IAZwB,CAsBjCrJ,KAAK3C,CAAAA,SAAUkM,CAAAA,EAAf,CAAoBC,QAAS,CAACC,aAAD,CAAgB,CAE3C,IAAIzK,MAAuB,IAAf,GAAA,IAAKA,CAAAA,KAAL,CAAsB,IAAKiC,CAAAA,UAAL,CAAgB,CAAhB,CAAtB,CAA2C,IAAKjC,CAAAA,KAE5D,IAA6B,QAA7B,GAAI,MAAOyK,cAAX,CAAuC,CAErCnB,aAAA,CAAQtI,IAAKO,CAAAA,KAAL,CAAWkJ,aAAX,CAER;GAAI,CAAC,IAAKrH,CAAAA,SAAL,CAAekG,aAAf,CAAL,CACE,KAAUrI,MAAJ,CAAU,uBAAwByJ,CAAAA,MAAxB,CAA+BpB,aAAM1C,CAAAA,QAAN,EAA/B,CAAiD,WAAjD,CAA2D8D,CAAAA,MAA3D,CAAkE,IAAK9D,CAAAA,QAAL,EAAlE,CAAmF,IAAnF,CAAV,CAAN,CAGF,GAAoB,IAApB,GAAI0C,aAAMtJ,CAAAA,KAAV,CACE,KAAUiB,MAAJ,CAAU,uCAAV,CAAN,CAGFqI,aAAMtJ,CAAAA,KAAN,CAAc,CAAC,CAAA,CAAGU,OAAQ2G,CAAAA,KAAZ,EAAmBrH,KAAnB,CACdsJ,cAAMpH,CAAAA,SAAN,CAAkB,CAAA,CAClBoH,cAAMnH,CAAAA,2BAAN,CAAoC,CAAA,CACpC,OAAOmH,cAf8B,CAgBhC,GAAI,CAAC,CAAA,CAAGhJ,GAAIqF,CAAAA,MAAR,EAAgB8E,aAAhB,CAAJ,CAAoC,CACzC,GAAI,CAAC,IAAKrH,CAAAA,SAAL,CAAeqH,aAAf,CAAL,CACE,KAAUxJ,MAAJ,CAAU,uBAAwByJ,CAAAA,MAAxB,CAA+BD,aAAc7D,CAAAA,QAAd,EAA/B;AAAyD,WAAzD,CAAmE8D,CAAAA,MAAnE,CAA0E,IAAK9D,CAAAA,QAAL,EAA1E,CAA2F,IAA3F,CAAV,CAAN,CAGF,GAA4B,IAA5B,GAAI6D,aAAczK,CAAAA,KAAlB,CACE,KAAUiB,MAAJ,CAAU,uCAAV,CAAN,CAGFqI,aAAA,CAAQmB,aAAcpD,CAAAA,KAAd,EACRiC,cAAMtJ,CAAAA,KAAN,CAAc,CAAC,CAAA,CAAGU,OAAQ2G,CAAAA,KAAZ,EAAmBrH,KAAnB,CACdsJ,cAAMpH,CAAAA,SAAN,CAAkB,CAAA,CAClBoH,cAAMnH,CAAAA,2BAAN,CAAoC,CAAA,CACpC,OAAOmH,cAbkC,CAezC,KAAUrI,MAAJ,CAAU,sCAAV,CAAN,CAnCyC,CA+C7CD,KAAK3C,CAAAA,SAAUoH,CAAAA,QAAf,CAA0BkF,QAAS,CAACF,aAAD,CAAgB,CACjD,MAAOhF,SAAA,CAAS,IAAKmF,CAAAA,SAAL,CAAeH,aAAf,CAAT,CAD0C,CAWnDzJ,KAAK3C,CAAAA,SAAUuM,CAAAA,SAAf,CAA2BC,QAAS,CAACJ,aAAD,CAAgB,CAKhDnB,aAAA;AAFEmB,aAAJ,CAEU,IAAKF,CAAAA,EAAL,CAAQE,aAAR,CAFV,CAIU,IAAKpD,CAAAA,KAAL,EAGV,OAAIiC,cAAM9B,CAAAA,UAAN,EAAJ,EAAiD,CAAjD,GAA0B8B,aAAM9H,CAAAA,KAAM5C,CAAAA,MAAtC,CACS0K,aAAMnB,CAAAA,YAAN,CAAmBmB,aAAMtJ,CAAAA,KAAzB,CADT,CAGSsJ,aAAMnB,CAAAA,YAAN,CAAmBmB,aAAMtJ,CAAAA,KAAzB,CAAgCsJ,aAAM9H,CAAAA,KAAN,CAAY,CAAZ,CAAeI,CAAAA,MAAO5B,CAAAA,KAAtD,CAbyC,CAuBpDgB,KAAK3C,CAAAA,SAAUuI,CAAAA,QAAf,CAA0BkE,QAAS,EAAG,CACpC,MAAO,KAAK1F,CAAAA,MAAL,EAD6B,CAWtCpE,KAAK3C,CAAAA,SAAU0M,CAAAA,MAAf,CAAwBC,QAAS,EAAG,CAClC,MAAO,CACLC,OAAQ,MADH,CAELjL,MAAO,IAAKmI,CAAAA,YAAL,CAAkB,IAAKnI,CAAAA,KAAvB,CAFF,CAGL0B,KAAM,IAAKwJ,CAAAA,WAAL,EAHD,CAILhJ,UAAW,IAAKA,CAAAA,SAJX,CAD2B,CAiBpClB,KAAKmK,CAAAA,QAAL,CAAgBC,QAAS,CAACC,IAAD,CAAO,CAC9B,IAAI3J,KAAO,IAAIV,IAAJ,CAASqK,IAAKrL,CAAAA,KAAd;AAAqBqL,IAAK3J,CAAAA,IAA1B,CACXA,KAAKQ,CAAAA,SAAL,CAAiBmJ,IAAKnJ,CAAAA,SAAtB,EAAmC,CAAA,CACnC,OAAOR,KAHuB,CAYhCV,KAAK3C,CAAAA,SAAUiN,CAAAA,OAAf,CAAyBtK,IAAK3C,CAAAA,SAAUuI,CAAAA,QAMxC5F,KAAK3C,CAAAA,SAAUkN,CAAAA,QAAf,CAA0BC,QAAS,EAAG,CACpC,IAAInB,IAAM,IAAKhD,CAAAA,KAAL,EAAV,CACIoE,iBAAmB,EADvB,CAKS3M,GAAT,KAASA,GAAT,GAAgB4M,kBAAhB,CACE,GAAI,CAAC,CAAA,CAAGhL,OAAQ3B,CAAAA,cAAZ,EAA4B2M,iBAA5B,CAA+C5M,GAA/C,CAAJ,EACMuL,GAAIlB,CAAAA,OAAJ,CAAY9F,UAAA,CAAWvE,GAAX,CAAZ,CADN,CACoC,CAChC,IAAA6M,aAAe7M,GACf,MAFgC,CAOtC,GAAqB,MAArB,GAAI6M,YAAJ,CACEtB,GAAI7I,CAAAA,KAAJ,CAAY,EADd,KAEO,CACL,IAAIoK,YAEAD,aAAJ,EAEM,CAAC,CAAA,CAAGjL,OAAQ3B,CAAAA,cAAZ,EAA4B2M,iBAA5B,CAA+CC,YAA/C,CAFN,GAGIC,YAHJ,CAGmBF,iBAAA,CAAkBC,YAAlB,CAHnB,CAOA;GAAIC,YAAJ,CACEvB,GAAI7I,CAAAA,KAAJ,CAAY,CAAC,CACXE,KAAMkK,YAAalK,CAAAA,IADR,CAEXE,OAAQgK,YAAahK,CAAAA,MAFV,CAGXG,MAAO,CAHI,CAAD,CADd,KAMO,CAID8J,YAAAA,CAAiB,CAAA,CAErB,KAASnN,GAAT,CAAa,CAAb,CAAgBA,GAAhB,CAAoBsD,eAAgBpD,CAAAA,MAApC,CAA4CF,GAAA,EAA5C,CACMoN,YAEJ,CAFc9J,eAAA,CAAgBtD,GAAhB,CAEd,CAAuC,KAAvC,CAAI2F,IAAKW,CAAAA,GAAL,CAASqF,GAAI5I,CAAAA,UAAJ,CAAe/C,GAAf,CAAT,EAA8B,CAA9B,CAAJ,GACM,CAAC,CAAA,CAAGgC,OAAQ3B,CAAAA,cAAZ,EAA4B2M,iBAA5B,CAA+CI,YAA/C,CAAJ,CACEL,gBAAiB7L,CAAAA,IAAjB,CAAsB,CACpB8B,KAAMgK,iBAAA,CAAkBI,YAAlB,CAA2BpK,CAAAA,IADb,CAEpBE,OAAQ8J,iBAAA,CAAkBI,YAAlB,CAA2BlK,CAAAA,MAFf,CAGpBG,MAAOsI,GAAI5I,CAAAA,UAAJ,CAAe/C,GAAf,CAAPqD,EAA4B,CAHR,CAAtB,CADF,CAOE8J,YAPF,CAOmB,CAAA,CARrB,CAcEJ,iBAAiB7M,CAAAA,MAArB,CAA8ByL,GAAI7I,CAAAA,KAAM5C,CAAAA,MAAxC,EAAkD,CAACiN,YAAnD;CAEExB,GAAI7I,CAAAA,KAFN,CAEciK,gBAFd,CAvBK,CAhBF,CA8CP,MAAOpB,IA/D6B,CAsEtCrJ,KAAK3C,CAAAA,SAAU0N,CAAAA,IAAf,CAAsBC,QAAS,EAAG,CAMhC,IALA,IAAI3B,IAAM,IAAKhD,CAAAA,KAAL,EAAV,CACIoE,iBAAmB,EADvB,CAKS/M,EAAI,CAAb,CAAgBA,CAAhB,CAAoBsD,eAAgBpD,CAAAA,MAApC,CAA4CF,CAAA,EAA5C,CAAiD,CAC/C,IAAIoN,QAAU9J,eAAA,CAAgBtD,CAAhB,CAEd,IAAuC,KAAvC,CAAI2F,IAAKW,CAAAA,GAAL,CAASqF,GAAI5I,CAAAA,UAAJ,CAAe/C,CAAf,CAAT,EAA8B,CAA9B,CAAJ,CACE,GAAI,CAAC,CAAA,CAAGgC,OAAQ3B,CAAAA,cAAZ,EAA4BmI,YAAa+E,CAAAA,EAAzC,CAA6CH,OAA7C,CAAJ,CACEL,gBAAiB7L,CAAAA,IAAjB,CAAsB,CACpB8B,KAAMwF,YAAa+E,CAAAA,EAAb,CAAgBH,OAAhB,CAAyBpK,CAAAA,IADX,CAEpBE,OAAQsF,YAAa+E,CAAAA,EAAb,CAAgBH,OAAhB,CAAyBlK,CAAAA,MAFb,CAGpBG,MAAOsI,GAAI5I,CAAAA,UAAJ,CAAe/C,CAAf,CAAPqD,EAA4B,CAHR,CAAtB,CADF,KAOE,MAAUd,MAAJ,CAAU,6BAAV,CAA0C6K,OAA1C,CAAoD,cAApD,CAAN,CAX2C,CAiBjDzB,GAAI7I,CAAAA,KAAJ,CAAYiK,gBACZpB;GAAInI,CAAAA,SAAJ,CAAgB,CAAA,CAChBmI,IAAIlI,CAAAA,2BAAJ,CAAkC,CAAA,CAClC,OAAOkI,IA1ByB,CAmClCrJ,KAAK3C,CAAAA,SAAU6M,CAAAA,WAAf,CAA6BgB,QAAS,EAAG,CAMvC,IALA,IAAIC,OAAS,EAAb,CACIC,OAAS,EADb,CAEIC,KAAO,CAFX,CAGIC,KAAO,CAHX,CAKS5N,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAK8C,CAAAA,KAAM5C,CAAAA,MAA/B,CAAuCF,CAAA,EAAvC,CAC4B,CAA1B,CAAI,IAAK8C,CAAAA,KAAL,CAAW9C,CAAX,CAAcqD,CAAAA,KAAlB,EACEsK,IAAA,EAGA,CAFAF,MAEA,EAFU,GAEV,CAFgB,IAAK3K,CAAAA,KAAL,CAAW9C,CAAX,CAAckD,CAAAA,MAAOf,CAAAA,IAErC,CAF4C,IAAKW,CAAAA,KAAL,CAAW9C,CAAX,CAAcgD,CAAAA,IAAKb,CAAAA,IAE/D,CAA0C,KAA1C,CAAIwD,IAAKW,CAAAA,GAAL,CAAS,IAAKxD,CAAAA,KAAL,CAAW9C,CAAX,CAAcqD,CAAAA,KAAvB,CAA+B,CAA/B,CAAJ,GACEoK,MADF,EACY,GADZ,CACkB,IAAK3K,CAAAA,KAAL,CAAW9C,CAAX,CAAcqD,CAAAA,KADhC,CAJF,EAOiC,CAPjC,CAOW,IAAKP,CAAAA,KAAL,CAAW9C,CAAX,CAAcqD,CAAAA,KAPzB,EAQEuK,IAAA,EAIJ,IAAW,CAAX,CAAIA,IAAJ,CACE,IAASC,CAAT,CAAe,CAAf,CAAkBA,CAAlB,CAAwB,IAAK/K,CAAAA,KAAM5C,CAAAA,MAAnC,CAA2C2N,CAAA,EAA3C,CAC8B,CAA5B,CAAI,IAAK/K,CAAAA,KAAL,CAAW+K,CAAX,CAAgBxK,CAAAA,KAApB,GACa,CAAX,CAAIsK,IAAJ,EACED,MAEA,EAFU,GAEV,CAFgB,IAAK5K,CAAAA,KAAL,CAAW+K,CAAX,CAAgB3K,CAAAA,MAAOf,CAAAA,IAEvC,CAF8C,IAAKW,CAAAA,KAAL,CAAW+K,CAAX,CAAgB7K,CAAAA,IAAKb,CAAAA,IAEnE;AAA4C,KAA5C,CAAIwD,IAAKW,CAAAA,GAAL,CAAS,IAAKxD,CAAAA,KAAL,CAAW+K,CAAX,CAAgBxK,CAAAA,KAAzB,CAAiC,CAAjC,CAAJ,GACEqK,MADF,EACY,GADZ,CACkB,CAAC,IAAK5K,CAAAA,KAAL,CAAW+K,CAAX,CAAgBxK,CAAAA,KADnC,CAHF,GAOEqK,MACA,EADU,GACV,CADgB,IAAK5K,CAAAA,KAAL,CAAW+K,CAAX,CAAgB3K,CAAAA,MAAOf,CAAAA,IACvC,CAD8C,IAAKW,CAAAA,KAAL,CAAW+K,CAAX,CAAgB7K,CAAAA,IAAKb,CAAAA,IACnE,CAAAuL,MAAA,EAAU,GAAV,CAAgB,IAAK5K,CAAAA,KAAL,CAAW+K,CAAX,CAAgBxK,CAAAA,KARlC,CADF,CAgBJoK,OAAA,CAASA,MAAOK,CAAAA,MAAP,CAAc,CAAd,CACTJ,OAAA,CAASA,MAAOI,CAAAA,MAAP,CAAc,CAAd,CAEE,EAAX,CAAIH,IAAJ,EAAuB,CAAvB,CAAgBC,IAAhB,GACEH,MADF,CACW,GADX,CACiBA,MADjB,CAC0B,GAD1B,CAIW,EAAX,CAAIG,IAAJ,EAAuB,CAAvB,CAAgBD,IAAhB,GACED,MADF,CACW,GADX,CACiBA,MADjB,CAC0B,GAD1B,CAMW,EAAX,CAAIC,IAAJ,EAAuB,CAAvB,CAAgBC,IAAhB,GACEzG,MADF,EACS,KADT,CAKA,OADAA,OACA,CADOuG,MAtDgC,CAoEzCpL,KAAK3C,CAAAA,SAAU+G,CAAAA,MAAf,CAAwBqH,QAAS,CAAC3G,OAAD,CAAU,CAGzC,IAAI4G,KAAO,IAAKvK,CAAAA,2BAAL,EAAmD,IAAnD,GAAoC,IAAKnC,CAAAA,KAAzC,CAA0D,IAAKqH,CAAAA,KAAL,EAA1D,CAAyE,IAAKkE,CAAAA,QAAL,EAApF,CAEIoB,YAAc,CAAA,CAEQ,YAA1B;AAAI,MAAOD,KAAK1M,CAAAA,KAAhB,EAAwD,IAAxD,GAAyC0M,IAAK1M,CAAAA,KAA9C,EAAgE,CAAC,CAAA,CAAGM,GAAIc,CAAAA,SAAR,EAAmBsL,IAAK1M,CAAAA,KAAxB,CAAhE,GAEE2M,WAFF,CAE0C,KAF1C,CAEgBtI,IAAKW,CAAAA,GAAL,CAAS0H,IAAK1M,CAAAA,KAAM4M,CAAAA,EAApB,CAFhB,CAKA,KAAKlO,IAAIA,CAAT,GAAcgO,KAAKlL,CAAAA,KAAnB,CACM,CAAC,CAAA,CAAGd,OAAQ3B,CAAAA,cAAZ,EAA4B2N,IAAKlL,CAAAA,KAAjC,CAAwC9C,CAAxC,CAAJ,EACMgO,IAAKlL,CAAAA,KAAL,CAAW9C,CAAX,CAAcgD,CAAAA,IADpB,GAEoC,IAAhC,GAAIgL,IAAKlL,CAAAA,KAAL,CAAW9C,CAAX,CAAcgD,CAAAA,IAAKb,CAAAA,IAAvB,EAAwC8L,WAAxC,CACED,IAAKlL,CAAAA,KAAL,CAAW9C,CAAX,CAAcgD,CAAAA,IADhB,CACuBkC,KAAMiJ,CAAAA,GAD7B,CAEuC,KAFvC,GAEWH,IAAKlL,CAAAA,KAAL,CAAW9C,CAAX,CAAcgD,CAAAA,IAAKb,CAAAA,IAF9B,EAEiD8L,WAFjD,GAGED,IAAKlL,CAAAA,KAAL,CAAW9C,CAAX,CAAcgD,CAAAA,IAHhB,CAGuBkC,KAAMkJ,CAAAA,EAH7B,CAFJ,CAawB,EAA1B,GAAIJ,IAAKlL,CAAAA,KAAM5C,CAAAA,MAAf,EAA+B,CAAC8N,IAAKxK,CAAAA,SAArC,EAGwE,KAHxE,CAGMmC,IAAKW,CAAAA,GAAL,CAAS0H,IAAKlL,CAAAA,KAAL,CAAW,CAAX,CAAcO,CAAAA,KAAvB,CAA+BsC,IAAKa,CAAAA,KAAL,CAAWwH,IAAKlL,CAAAA,KAAL,CAAW,CAAX,CAAcO,CAAAA,KAAzB,CAA/B,CAHN,GAKI2K,IAAKlL,CAAAA,KAAL,CAAW,CAAX,CAAcI,CAAAA,MALlB,CAK2B8K,IAAKK,CAAAA,WAAL,EAL3B,CASI/M;WAAAA,CAAQ0M,IAAKvE,CAAAA,YAAL,CAAkBuE,IAAK1M,CAAAA,KAAvB,CAER6F,QAAAA,CAAqB,IAAf,GAAA6G,IAAK1M,CAAAA,KAAL,CAAsBoF,MAAA,CAAOpF,WAAP,CAAc8F,OAAd,EAAyB,EAAzB,CAAtB,CAAqD,EAC3DkH,YAAAA,CAAUN,IAAKxB,CAAAA,WAAL,EAEVwB,KAAK1M,CAAAA,KAAT,EAAkB,CAAC,CAAA,CAAGM,GAAIc,CAAAA,SAAR,EAAmBsL,IAAK1M,CAAAA,KAAxB,CAAlB,GACE6F,OADF,CACQ,GADR,CACcA,OADd,CACoB,GADpB,CAIqB,EAArB,CAAImH,WAAQpO,CAAAA,MAAZ,EAAuC,CAAvC,CAA0BiH,OAAIjH,CAAAA,MAA9B,GACEiH,OADF,EACS,GADT,CAKA,OADAA,QACA,CADOmH,WAhDkC,CA2D3ChM,KAAK3C,CAAAA,SAAU0O,CAAAA,WAAf,CAA6BE,QAAS,EAAG,CACvC,GAA0B,CAA1B,GAAI,IAAKzL,CAAAA,KAAM5C,CAAAA,MAAf,CACE,KAAUqC,MAAJ,CAAU,0GAAV,CAAN,CAGF,GAAuE,KAAvE,EAAIoD,IAAKW,CAAAA,GAAL,CAAS,IAAKxD,CAAAA,KAAL,CAAW,CAAX,CAAcO,CAAAA,KAAvB;AAA+BsC,IAAKa,CAAAA,KAAL,CAAW,IAAK1D,CAAAA,KAAL,CAAW,CAAX,CAAcO,CAAAA,KAAzB,CAA/B,CAAJ,CACE,KAAUd,MAAJ,CAAU,0GAAV,CAAN,CAUF,IAAIiM,SAA0B,IAAf,GAAA,IAAKlN,CAAAA,KAAL,CAAsBgF,GAAA,CAAI,IAAKhF,CAAAA,KAAT,CAAtB,CAAwC,CAAvD,CACImN,aAAenI,GAAA,CAAI,IAAKxD,CAAAA,KAAL,CAAW,CAAX,CAAcE,CAAAA,IAAK1B,CAAAA,KAAvB,CADnB,CAEIoN,WAAa,IAAK5L,CAAAA,KAAL,CAAW,CAAX,CAAcI,CAAAA,MAE/B,IAAiB,CAAjB,GAAIsL,QAAJ,CACE,MAAOE,WAGT,KAAIrL,MAAQ,IAAKP,CAAAA,KAAL,CAAW,CAAX,CAAcO,CAAAA,KAA1B,CACIsL,SAAWhJ,IAAKiJ,CAAAA,GAAL,CAASJ,QAAT,CAAoB7I,IAAKU,CAAAA,GAAL,CAASqI,UAAWpN,CAAAA,KAApB,CAA4BmN,YAA5B,CAA0CpL,KAA1C,CAApB,CAAXsL,CAAmFhJ,IAAKkJ,CAAAA,IAAxFF,CAA+F,GACnG,IAAe,SAAf,CAAIA,QAAJ,EAAuC,QAAvC,CAA4BA,QAA5B,CAAiD,MAAOD,WAExDC,SAAA,CAAWhJ,IAAKW,CAAAA,GAAL,CAASqI,QAAT,CACX;IAAI9E,SAAW,IAAK/G,CAAAA,KAAL,CAAW,CAAX,CAAcE,CAAAA,IAAK6G,CAAAA,QAAlC,CAESxB,CAAT,KAASA,CAAT,GAAcwB,SAAd,CACE,GAAI,CAAC,CAAA,CAAG7H,OAAQ3B,CAAAA,cAAZ,EAA4BwJ,QAA5B,CAAsCxB,CAAtC,CAAJ,CAA8C,CAC5C,IAAInF,OAAS2G,QAAA,CAASxB,CAAT,CAEb,IAAInF,MAAO4L,CAAAA,UAAX,CAAuB,CACrB,IAAIC,KAAOpJ,IAAKW,CAAAA,GAAL,CAASX,IAAKiJ,CAAAA,GAAL,CAASJ,QAAT,CAAoB7I,IAAKU,CAAAA,GAAL,CAASnD,MAAO5B,CAAAA,KAAhB,CAAwBmN,YAAxB,CAAsCpL,KAAtC,CAApB,CAAT,CAA6EsC,IAAKkJ,CAAAA,IAAlF,CAAyF,GAAzF,CAEX,IAAIE,IAAJ,CAAWJ,QAAX,EAAuBI,IAAvB,GAAgCJ,QAAhC,EAA4CzL,MAAOf,CAAAA,IAAKjC,CAAAA,MAAxD,CAAiEwO,UAAWvM,CAAAA,IAAKjC,CAAAA,MAAjF,CAGEwO,UACA,CADaxL,MACb,CAAAyL,QAAA,CAAWI,IAPQ,CAHqB,CAgBhD,MAAOL,WAhDgC,CAiEzCpM,KAAK3C,CAAAA,SAAUqP,CAAAA,SAAf,CAA2BC,QAAS,CAACC,KAAD,CAAQ,CAI1C,IAHA,IAAIC,EAAI,IAAKxG,CAAAA,KAAL,EAAR,CACIgD,IAAM,EADV,CAGS3L,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkP,KAAMhP,CAAAA,MAA1B,CAAkCF,CAAA,EAAlC,CAAuC,CAErCmP,CAAA,CAAIA,CAAEtD,CAAAA,EAAF,CAAKqD,KAAA,CAAMlP,CAAN,CAAL,CACJ,IAAIA,CAAJ,GAAUkP,KAAMhP,CAAAA,MAAhB;AAAyB,CAAzB,CAA4B,KAE5B,KAAIkP,SAAWD,CAAEjD,CAAAA,SAAF,EAAf,CAGImD,SAAW7I,KAAA,CAAM4I,QAAN,CAKbE,SAAA,CAHkB7I,KAAA8I,CAAMF,QAANE,CAAgBH,QAAhBG,CAEpB,CACWF,QADX,CAGW9I,GAAA,CAAI4I,CAAEjD,CAAAA,SAAF,EAAJ,CAGPsD,SAAAA,CAAI,IAAIlN,IAAJ,CAASgN,QAAT,CAAiBJ,KAAA,CAAMlP,CAAN,CAASkI,CAAAA,QAAT,EAAjB,CACRyD,IAAIzK,CAAAA,IAAJ,CAASsO,QAAT,CACAL,EAAA,CAAIjJ,QAAA,CAASiJ,CAAT,CAAYK,QAAZ,CApBiC,CA6BvC,IAASC,CAAT,CAFIC,KAEJ,CAFc,CAEd,CAAkBD,CAAlB,CAAwB9D,GAAIzL,CAAAA,MAA5B,CAAoCuP,CAAA,EAApC,CACEC,KAAA,CAAUzJ,SAAA,CAAUyJ,KAAV,CAAmB/D,GAAA,CAAI8D,CAAJ,CAASnO,CAAAA,KAA5B,CAGRmF,MAAA,CAAMiJ,KAAN,CAAe,IAAKpO,CAAAA,KAApB,CAAJ,GACE6N,CAAE7N,CAAAA,KADJ,CACY,CADZ,CAIAqK,IAAIzK,CAAAA,IAAJ,CAASiO,CAAT,CACA,OAAOxD,IA1CmC,CA6C5C,KAAIxI,SAAW,CACbC,KAAM,CACJ,GAAI,CACFjB,KAAM,EADJ,CAEFb,MAAO,CAFL,CAGFwN,WAAY,CAAA,CAHV,CADA,CADO,CAQba,MAAO,CACL,GAAI,CACFxN,KAAM,EADJ,CAEFb,MAAO,CAFL,CAGFwN,WAAY,CAAA,CAHV,CADC,CAMLc,GAAI,CACFzN,KAAM,IADJ,CAEFb,MAAO,EAFL,CAGFwN,WAAY,CAAA,CAHV,CANC,CAWLe,EAAG,CACD1N,KAAM,GADL,CAEDb,MAAO,GAFN,CAGDwN,WAAY,CAAA,CAHX,CAXE;AAgBLgB,EAAG,CACD3N,KAAM,GADL,CAEDb,MAAO,GAFN,CAGDwN,WAAY,CAAA,CAHX,CAhBE,CAqBLiB,EAAG,CACD5N,KAAM,GADL,CAEDb,MAAO,GAFN,CAGDwN,WAAY,CAAA,CAHX,CArBE,CA0BLkB,EAAG,CACD7N,KAAM,GADL,CAEDb,MAAO,GAFN,CAGDwN,WAAY,CAAA,CAHX,CA1BE,CA+BLmB,EAAG,CACD9N,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CA/BE,CAoCLoB,EAAG,CACD/N,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CApCE,CAyCLqB,EAAG,CACDhO,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CAzCE,CA8CLsB,EAAG,CACDjO,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CA9CE,CAmDLuB,EAAG,CACDlO,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CAnDE,CAwDLwB,EAAG,CACDnO,KAAM,GADL,CAEDb,MAAO,EAFN,CAGDwN,WAAY,CAAA,CAHX,CAxDE,CA6DLnL,EAAG,CACDxB,KAAM,GADL,CAEDb,MAAO,GAFN,CAGDwN,WAAY,CAAA,CAHX,CA7DE,CAkELyB,EAAG,CACDpO,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CAlEE,CAuELlM,EAAG,CACDT,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CAvEE,CA4EL0B,EAAG,CACDrO,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CA5EE,CAiFLzG,EAAG,CACDlG,KAAM,GADL,CAEDb,MAAO,KAFN;AAGDwN,WAAY,CAAA,CAHX,CAjFE,CAsFL2B,EAAG,CACDtO,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CAtFE,CA2FL4B,EAAG,CACDvO,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CA3FE,CAgGL6B,EAAG,CACDxO,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CAhGE,CAqGLU,EAAG,CACDrN,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CArGE,CARM,CAmHb8B,KAAM,CACJ,GAAI,CACFzO,KAAM,EADJ,CAEFb,MAAO,CAFL,CAGFwN,WAAY,CAAA,CAHV,CADA,CAMJ+B,KAAM,CACJ1O,KAAM,MADF,CAEJb,MAAO,EAFH,CAGJwN,WAAY,CAAA,CAHR,CANF,CAWJgC,MAAO,CACL3O,KAAM,OADD,CAELb,MAAO,GAFF,CAGLwN,WAAY,CAAA,CAHP,CAXH,CAgBJiC,KAAM,CACJ5O,KAAM,MADF,CAEJb,MAAO,GAFH,CAGJwN,WAAY,CAAA,CAHR,CAhBF,CAqBJkC,KAAM,CACJ7O,KAAM,MADF,CAEJb,MAAO,GAFH,CAGJwN,WAAY,CAAA,CAHR,CArBF,CA0BJmC,KAAM,CACJ9O,KAAM,MADF,CAEJb,MAAO,GAFH,CAGJwN,WAAY,CAAA,CAHR,CA1BF,CA+BJoC,KAAM,CACJ/O,KAAM,MADF,CAEJb,MAAO,IAFH,CAGJwN,WAAY,CAAA,CAHR,CA/BF,CAoCJqC,KAAM,CACJhP,KAAM,MADF,CAEJb,MAAO,IAFH;AAGJwN,WAAY,CAAA,CAHR,CApCF,CAyCJsC,IAAK,CACHjP,KAAM,KADH,CAEHb,MAAO,IAFJ,CAGHwN,WAAY,CAAA,CAHT,CAzCD,CA8CJuC,MAAO,CACLlP,KAAM,OADD,CAELb,MAAO,IAFF,CAGLwN,WAAY,CAAA,CAHP,CA9CH,CAmDJwC,MAAO,CACLnP,KAAM,OADD,CAELb,MAAO,IAFF,CAGLwN,WAAY,CAAA,CAHP,CAnDH,CAwDJyC,KAAM,CACJpP,KAAM,MADF,CAEJb,MAAO,EAFH,CAGJwN,WAAY,CAAA,CAHR,CAxDF,CA6DJ0C,MAAO,CACLrP,KAAM,OADD,CAELb,MAAO,GAFF,CAGLwN,WAAY,CAAA,CAHP,CA7DH,CAkEJ2C,MAAO,CACLtP,KAAM,OADD,CAELb,MAAO,IAFF,CAGLwN,WAAY,CAAA,CAHP,CAlEH,CAuEJ4C,MAAO,CACLvP,KAAM,OADD,CAELb,MAAO,IAFF,CAGLwN,WAAY,CAAA,CAHP,CAvEH,CA4EJ6C,KAAM,CACJxP,KAAM,MADF,CAEJb,MAAO,IAFH,CAGJwN,WAAY,CAAA,CAHR,CA5EF,CAiFJ8C,KAAM,CACJzP,KAAM,MADF,CAEJb,MAAO,KAFH,CAGJwN,WAAY,CAAA,CAHR,CAjFF,CAsFJ+C,MAAO,CACL1P,KAAM,OADD,CAELb,MAAO,KAFF,CAGLwN,WAAY,CAAA,CAHP,CAtFH,CA2FJgD,KAAM,CACJ3P,KAAM,MADF,CAEJb,MAAO,KAFH,CAGJwN,WAAY,CAAA,CAHR,CA3FF;AAgGJiD,MAAO,CACL5P,KAAM,OADD,CAELb,MAAO,KAFF,CAGLwN,WAAY,CAAA,CAHP,CAhGH,CAqGJkD,MAAO,CACL7P,KAAM,OADD,CAELb,MAAO,KAFF,CAGLwN,WAAY,CAAA,CAHP,CArGH,CAnHO,CA8NbmD,QAAS,CACP,GAAI,CACF9P,KAAM,EADJ,CAEFb,MAAO,CAFL,CAGFwN,WAAY,CAAA,CAHV,CADG,CAMPc,GAAI,CACFzN,KAAM,IADJ,CAEFb,MAAO,GAFL,CAGFwN,WAAY,CAAA,CAHV,CANG,CAWPe,EAAG,CACD1N,KAAM,GADL,CAEDb,MAAO,GAFN,CAGDwN,WAAY,CAAA,CAHX,CAXI,CAgBPgB,EAAG,CACD3N,KAAM,GADL,CAEDb,MAAO,GAFN,CAGDwN,WAAY,CAAA,CAHX,CAhBI,CAqBPiB,EAAG,CACD5N,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CArBI,CA0BPkB,EAAG,CACD7N,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CA1BI,CA+BPmB,EAAG,CACD9N,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CA/BI,CAoCPoB,EAAG,CACD/N,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CApCI,CAyCPqB,EAAG,CACDhO,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CAzCI,CA8CPsB,EAAG,CACDjO,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CA9CI,CAmDPuB,EAAG,CACDlO,KAAM,GADL,CAEDb,MAAO,IAFN;AAGDwN,WAAY,CAAA,CAHX,CAnDI,CAwDPwB,EAAG,CACDnO,KAAM,GADL,CAEDb,MAAO,GAFN,CAGDwN,WAAY,CAAA,CAHX,CAxDI,CA6DPnL,EAAG,CACDxB,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CA7DI,CAkEPyB,EAAG,CACDpO,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CAlEI,CAuEPlM,EAAG,CACDT,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CAvEI,CA4EP0B,EAAG,CACDrO,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CA5EI,CAiFPzG,EAAG,CACDlG,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CAjFI,CAsFP2B,EAAG,CACDtO,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CAtFI,CA2FP4B,EAAG,CACDvO,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CA3FI,CAgGP6B,EAAG,CACDxO,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CAhGI,CAqGPU,EAAG,CACDrN,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CArGI,CA9NI,CAyUboD,MAAO,CACL,GAAI,CACF/P,KAAM,EADJ,CAEFb,MAAO,CAFL,CAGFwN,WAAY,CAAA,CAHV,CADC,CAMLc,GAAI,CACFzN,KAAM,IADJ,CAEFb,MAAO,GAFL,CAGFwN,WAAY,CAAA,CAHV,CANC,CAWLe,EAAG,CACD1N,KAAM,GADL,CAEDb,MAAO,GAFN;AAGDwN,WAAY,CAAA,CAHX,CAXE,CAgBLgB,EAAG,CACD3N,KAAM,GADL,CAEDb,MAAO,GAFN,CAGDwN,WAAY,CAAA,CAHX,CAhBE,CAqBLiB,EAAG,CACD5N,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CArBE,CA0BLkB,EAAG,CACD7N,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CA1BE,CA+BLmB,EAAG,CACD9N,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CA/BE,CAoCLoB,EAAG,CACD/N,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CApCE,CAyCLqB,EAAG,CACDhO,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CAzCE,CA8CLsB,EAAG,CACDjO,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CA9CE,CAmDLuB,EAAG,CACDlO,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CAnDE,CAwDLwB,EAAG,CACDnO,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CAxDE,CA6DLnL,EAAG,CACDxB,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CA7DE,CAkELyB,EAAG,CACDpO,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CAlEE,CAuELlM,EAAG,CACDT,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CAvEE,CA4EL0B,EAAG,CACDrO,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CA5EE;AAiFLzG,EAAG,CACDlG,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CAjFE,CAsFL2B,EAAG,CACDtO,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CAtFE,CA2FL4B,EAAG,CACDvO,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CA3FE,CAgGL6B,EAAG,CACDxO,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CAhGE,CAqGLU,EAAG,CACDrN,KAAM,GADL,CAEDb,MAAO,KAFN,CAGDwN,WAAY,CAAA,CAHX,CArGE,CAzUM,CAobbqD,gBAAiB,CACf,GAAI,CACFhQ,KAAM,EADJ,CAEFb,MAAO,CAFL,CAGFwN,WAAY,CAAA,CAHV,CADW,CAMfgB,EAAG,CACD3N,KAAM,GADL,CAEDb,MAAO,GAFN,CAGDwN,WAAY,CAAA,CAHX,CANY,CAWfiB,EAAG,CACD5N,KAAM,GADL,CAEDb,MAAO,GAFN,CAGDwN,WAAY,CAAA,CAHX,CAXY,CAgBfkB,EAAG,CACD7N,KAAM,GADL,CAEDb,MAAO,GAFN,CAGDwN,WAAY,CAAA,CAHX,CAhBY,CAqBfmB,EAAG,CACD9N,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CArBY,CA0BfoB,EAAG,CACD/N,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CA1BY,CA+BfqB,EAAG,CACDhO,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CA/BY,CAoCfsB,EAAG,CACDjO,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CApCY;AAyCfuB,EAAG,CACDlO,KAAM,GADL,CAEDb,MAAO,IAFN,CAGDwN,WAAY,CAAA,CAHX,CAzCY,CApbJ,CAmebsD,iBAAkB,CAChB,GAAI,CACFjQ,KAAM,EADJ,CAEFb,MAAO,CAFL,CAGFwN,WAAY,CAAA,CAHV,CADY,CAMhBuD,GAAI,CACFlQ,KAAM,IADJ,CAEFb,MAAO,IAFL,CAGFwN,WAAY,CAAA,CAHV,CANY,CAWhBwD,GAAI,CACFnQ,KAAM,IADJ,CAEFb,MAAOqE,IAAKU,CAAAA,GAAL,CAAS,IAAT,CAAe,CAAf,CAFL,CAGFyI,WAAY,CAAA,CAHV,CAXY,CAgBhByD,GAAI,CACFpQ,KAAM,IADJ,CAEFb,MAAOqE,IAAKU,CAAAA,GAAL,CAAS,IAAT,CAAe,CAAf,CAFL,CAGFyI,WAAY,CAAA,CAHV,CAhBY,CAqBhB0D,GAAI,CACFrQ,KAAM,IADJ,CAEFb,MAAOqE,IAAKU,CAAAA,GAAL,CAAS,IAAT,CAAe,CAAf,CAFL,CAGFyI,WAAY,CAAA,CAHV,CArBY,CA0BhB2D,GAAI,CACFtQ,KAAM,IADJ,CAEFb,MAAOqE,IAAKU,CAAAA,GAAL,CAAS,IAAT,CAAe,CAAf,CAFL,CAGFyI,WAAY,CAAA,CAHV,CA1BY,CA+BhB4D,GAAI,CACFvQ,KAAM,IADJ,CAEFb,MAAOqE,IAAKU,CAAAA,GAAL,CAAS,IAAT,CAAe,CAAf,CAFL,CAGFyI,WAAY,CAAA,CAHV,CA/BY,CAoChB6D,GAAI,CACFxQ,KAAM,IADJ,CAEFb,MAAOqE,IAAKU,CAAAA,GAAL,CAAS,IAAT,CAAe,CAAf,CAFL,CAGFyI,WAAY,CAAA,CAHV,CApCY,CAyChB8D,GAAI,CACFzQ,KAAM,IADJ,CAEFb,MAAOqE,IAAKU,CAAAA,GAAL,CAAS,IAAT,CAAe,CAAf,CAFL,CAGFyI,WAAY,CAAA,CAHV,CAzCY,CAneL,CAkhBb+D,eAAgB,CACd,GAAI,CACF1Q,KAAM,EADJ;AAEFb,MAAO,CAFL,CAGFwN,WAAY,CAAA,CAHV,CADU,CAMdiC,KAAM,CACJ5O,KAAM,MADF,CAEJb,MAAO,GAFH,CAGJwN,WAAY,CAAA,CAHR,CANQ,CAWdkC,KAAM,CACJ7O,KAAM,MADF,CAEJb,MAAO,GAFH,CAGJwN,WAAY,CAAA,CAHR,CAXQ,CAgBdmC,KAAM,CACJ9O,KAAM,MADF,CAEJb,MAAO,GAFH,CAGJwN,WAAY,CAAA,CAHR,CAhBQ,CAqBdoC,KAAM,CACJ/O,KAAM,MADF,CAEJb,MAAO,IAFH,CAGJwN,WAAY,CAAA,CAHR,CArBQ,CA0BdqC,KAAM,CACJhP,KAAM,MADF,CAEJb,MAAO,IAFH,CAGJwN,WAAY,CAAA,CAHR,CA1BQ,CA+BdsC,IAAK,CACHjP,KAAM,KADH,CAEHb,MAAO,IAFJ,CAGHwN,WAAY,CAAA,CAHT,CA/BS,CAoCduC,MAAO,CACLlP,KAAM,OADD,CAELb,MAAO,IAFF,CAGLwN,WAAY,CAAA,CAHP,CApCO,CAyCdwC,MAAO,CACLnP,KAAM,OADD,CAELb,MAAO,IAFF,CAGLwN,WAAY,CAAA,CAHP,CAzCO,CAlhBH,CAikBbgE,gBAAiB,CACf,GAAI,CACF3Q,KAAM,EADJ,CAEFb,MAAO,CAFL,CAGFwN,WAAY,CAAA,CAHV,CADW,CAMfiE,KAAM,CACJ5Q,KAAM,MADF,CAEJb,MAAO,IAFH,CAGJwN,WAAY,CAAA,CAHR,CANS,CAWfkE,KAAM,CACJ7Q,KAAM,MADF,CAEJb,MAAOqE,IAAKU,CAAAA,GAAL,CAAS,IAAT;AAAe,CAAf,CAFH,CAGJyI,WAAY,CAAA,CAHR,CAXS,CAgBfmE,KAAM,CACJ9Q,KAAM,MADF,CAEJb,MAAOqE,IAAKU,CAAAA,GAAL,CAAS,IAAT,CAAe,CAAf,CAFH,CAGJyI,WAAY,CAAA,CAHR,CAhBS,CAqBfoE,KAAM,CACJ/Q,KAAM,MADF,CAEJb,MAAOqE,IAAKU,CAAAA,GAAL,CAAS,IAAT,CAAe,CAAf,CAFH,CAGJyI,WAAY,CAAA,CAHR,CArBS,CA0BfqE,KAAM,CACJhR,KAAM,MADF,CAEJb,MAAOqE,IAAKU,CAAAA,GAAL,CAAS,IAAT,CAAe,CAAf,CAFH,CAGJyI,WAAY,CAAA,CAHR,CA1BS,CA+BfsE,IAAK,CACHjR,KAAM,KADH,CAEHb,MAAOqE,IAAKU,CAAAA,GAAL,CAAS,IAAT,CAAe,CAAf,CAFJ,CAGHyI,WAAY,CAAA,CAHT,CA/BU,CAoCfuE,KAAM,CACJlR,KAAM,MADF,CAEJb,MAAOqE,IAAKU,CAAAA,GAAL,CAAS,IAAT,CAAe,CAAf,CAFH,CAGJyI,WAAY,CAAA,CAHR,CApCS,CAyCfwE,KAAM,CACJnR,KAAM,MADF,CAEJb,MAAOqE,IAAKU,CAAAA,GAAL,CAAS,IAAT,CAAe,CAAf,CAFH,CAGJyI,WAAY,CAAA,CAHR,CAzCS,CAjkBJ,CAgnBbyE,IAAK,CACH,GAAI,CACFpR,KAAM,EADJ,CAEFb,MAAO,CAFL,CAGFwN,WAAY,CAAA,CAHV,CADD,CAMH0E,GAAI,CACFrR,KAAM,IADJ,CAEFb,MAAO,GAFL,CAGFwN,WAAY,CAAA,CAHV,CAND,CAhnBQ,CA6nBf3L,SAASsQ,CAAAA,SAAT,CAAqB7T,QAAA,CAAS,EAAT,CAAauD,QAASwM,CAAAA,KAAtB,CAA6BxM,QAASyN,CAAAA,IAAtC,CACrBzN,SAASuQ,CAAAA,YAAT;AAAwB9T,QAAA,CAAS,EAAT,CAAauD,QAASgP,CAAAA,eAAtB,CAAuChP,QAASiP,CAAAA,gBAAhD,CACxBjP,SAASwQ,CAAAA,WAAT,CAAuB/T,QAAA,CAAS,EAAT,CAAauD,QAAS0P,CAAAA,cAAtB,CAAsC1P,QAAS2P,CAAAA,eAA/C,CAiBvB,KAAIxP,gBAAkB,uFAAA,CAAA,KAAA,CAAA,GAAA,CAAtB,CACIqB,WAAa,CACfvB,KAAM,CACJL,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CADR,CADS,CAIf6Q,KAAM,CACJ7Q,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CADR,CAJS,CAOf8Q,OAAQ,CACN9Q,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CADN,CAPO,CAUf+Q,KAAM,CACJ/Q,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CADR,CAVS,CAafgR,QAAS,CACPhR,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CADL,CAbM,CAgBfiR,YAAa,CACXjR,WAAY,CAAC,CAAD,CAAI,CAAJ;AAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CADD,CAhBE,CAmBfkR,mBAAoB,CAClBlR,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CADM,CAnBL,CAsBfmR,oBAAqB,CACnBnR,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CADO,CAtBN,CAyBfoR,MAAO,CACLpR,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,EAAP,CAAW,CAAX,CAAc,CAAd,CAAiB,CAAjB,CAAoB,CAApB,CAAuB,CAAvB,CAA0B,CAA1B,CADP,CAzBQ,CA4BfqR,QAAS,CACPrR,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CADL,CA5BM,CA+BfsR,OAAQ,CACNtR,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CADN,CA/BO,CAkCfuR,OAAQ,CACNvR,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,EAAP,CAAW,CAAX,CAAc,CAAd,CAAiB,CAAjB,CAAoB,CAApB,CAAuB,CAAvB,CAA0B,CAA1B,CADN,CAlCO,CAqCfwR,MAAO,CACLxR,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,EAAP,CAAW,CAAX,CAAc,CAAd,CAAiB,CAAjB,CAAoB,CAApB,CAAuB,CAAvB,CAA0B,CAA1B,CADP,CArCQ,CAwCfyR,SAAU,CACRzR,WAAY,CAAC,CAAD,CAAI,EAAJ,CAAQ,EAAR,CAAY,CAAZ,CAAe,CAAf,CAAkB,CAAlB,CAAqB,CAArB,CAAwB,CAAxB,CAA2B,CAA3B,CADJ,CAxCK,CA2Cf0R,gBAAiB,CACf1R,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CADG,CA3CF,CA8Cf2R,qBAAsB,CACpB3R,WAAY,CAAC,EAAD,CAAK,EAAL,CAAS,CAAT,CAAY,CAAZ,CAAe,CAAf,CAAkB,CAAlB,CAAqB,CAArB,CAAwB,CAAxB,CAA2B,CAA3B,CADQ,CA9CP,CAiDf4R,mBAAoB,CAClB5R,WAAY,CAAC,CAAD;AAAI,CAAJ,CAAO,EAAP,CAAW,EAAX,CAAe,CAAf,CAAkB,CAAlB,CAAqB,CAArB,CAAwB,CAAxB,CAA2B,CAA3B,CADM,CAjDL,CAoDf6R,oBAAqB,CACnB7R,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,EAAP,CAAW,EAAX,CAAe,CAAf,CAAkB,CAAlB,CAAqB,CAArB,CAAwB,CAAxB,CAA2B,CAA3B,CADO,CApDN,CAuDf8R,oBAAqB,CACnB9R,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,EAAP,CAAW,EAAX,CAAe,CAAf,CAAkB,CAAlB,CAAqB,CAArB,CAAwB,CAAxB,CAA2B,CAA3B,CADO,CAvDN,CA0Df+R,qBAAsB,CACpB/R,WAAY,CAAC,EAAD,CAAK,EAAL,CAAS,CAAT,CAAY,CAAZ,CAAe,CAAf,CAAkB,CAAlB,CAAqB,CAArB,CAAwB,CAAxB,CAA2B,CAA3B,CADQ,CA1DP,CA6DfgS,cAAe,CACbhS,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,EAAP,CAAW,EAAX,CAAe,CAAf,CAAkB,CAAlB,CAAqB,CAArB,CAAwB,CAAxB,CAA2B,CAA3B,CADC,CA7DA,CAgEfiS,sBAAuB,CACrBjS,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,EAAP,CAAW,EAAX,CAAe,CAAf,CAAkB,CAAlB,CAAqB,CAArB,CAAwB,CAAxB,CAA2B,CAA3B,CADS,CAhER,CAmEfkS,UAAW,CACTlS,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,EAAP,CAAW,CAAX,CAAc,CAAd,CAAiB,CAAjB,CAAoB,CAApB,CAAuB,CAAvB,CAA0B,CAA1B,CADH,CAnEI,CAsEfmS,MAAO,CACLnS,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CADP,CAtEQ,CAyEfoS,IAAK,CACHpS,WAAY,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CADT,CAzEU,CADjB,CA+ES3C,YAAT,KAASA,YAAT,GAAgBuE,WAAhB,CACM,CAAC,CAAA,CAAG3C,OAAQ3B,CAAAA,cAAZ,EAA4BsE,UAA5B,CAAwCvE,YAAxC,CAAJ;CACEuE,UAAA,CAAWvE,YAAX,CAAgBA,CAAAA,GADlB,CACwBA,YADxB,CAMF,KAAI6C,UAAY,CACdd,KAAM,EADQ,CAEdoG,KAHmB6M,EACL,CAGd9T,MAAO,CAHO,CAIdkI,OAAQ,CAJM,CAKdzG,WAAYO,eAAgB+R,CAAAA,GAAhB,CAAoB,QAAS,CAAClG,CAAD,CAAI,CAC3C,MAAO,EADoC,CAAjC,CALE,CAAhB,CASIjK,MAAQ,CAEVoQ,MAAO,CACLnT,KAAM,OADD,CAELoG,KAAM5D,UAAWkP,CAAAA,MAFZ,CAGLhK,SAAU1G,QAASyN,CAAAA,IAHd,CAILtP,MAAO,CAJF,CAKLkI,OAAQ,CALH,CAFG,CASV+L,KAAM,CACJpT,KAAM,MADF,CAEJoG,KAAM5D,UAAWkP,CAAAA,MAFb,CAGJhK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,KAJH,CAKJkI,OAAQ,CALJ,CATI,CAgBVgM,KAAM,CACJrT,KAAM,MADF,CAEJoG,KAAM5D,UAAWkP,CAAAA,MAFb,CAGJhK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,KAJH,CAKJkI,OAAQ,CALJ,CAhBI,CAuBViM,KAAM,CACJtT,KAAM,MADF,CAEJoG,KAAM5D,UAAWkP,CAAAA,MAFb,CAGJhK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,KAJH,CAKJkI,OAAQ,CALJ,CAvBI,CA8BVkM,KAAM,CACJvT,KAAM,MADF;AAEJoG,KAAM5D,UAAWkP,CAAAA,MAFb,CAGJhK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,QAJH,CAKJkI,OAAQ,CALJ,CA9BI,CAqCVmM,KAAM,CACJxT,KAAM,MADF,CAEJoG,KAAM5D,UAAWkP,CAAAA,MAFb,CAGJhK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,OAJH,CAKJkI,OAAQ,CALJ,CArCI,CA4CVoM,IAAK,CACHzT,KAAM,KADH,CAEHoG,KAAM5D,UAAWkP,CAAAA,MAFd,CAGHhK,SAAU1G,QAASC,CAAAA,IAHhB,CAIH9B,MAAO,MAJJ,CAKHkI,OAAQ,CALL,CA5CK,CAmDVqM,MAAO,CACL1T,KAAM,OADD,CAELoG,KAAM5D,UAAWkP,CAAAA,MAFZ,CAGLhK,SAAU1G,QAASC,CAAAA,IAHd,CAIL9B,MAAO,OAJF,CAKLkI,OAAQ,CALH,CAnDG,CA0DVsM,SAAU,CACR3T,KAAM,UADE,CAERoG,KAAM5D,UAAWkP,CAAAA,MAFT,CAGRhK,SAAU1G,QAASC,CAAAA,IAHX,CAIR9B,MAAO,KAJC,CAKRkI,OAAQ,CALA,CA1DA,CAiEV+G,EAAG,CACDpO,KAAM,GADL,CAEDoG,KAAM5D,UAAWkP,CAAAA,MAFhB,CAGDhK,SAAU1G,QAASwM,CAAAA,KAHlB,CAIDrO,MAAO,CAJN,CAKDkI,OAAQ,CALP,CAjEO;AAwEV,KAAM,CACJrH,KAAM,IADF,CAEJoG,KAAM5D,UAAWkP,CAAAA,MAFb,CAGJhK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,KAJH,CAKJkI,OAAQ,CALJ,CAxEI,CA+EVuM,GAAI,CACF5T,KAAM,IADJ,CAEFoG,KAAM5D,UAAWkP,CAAAA,MAFf,CAGFhK,SAAU1G,QAASC,CAAAA,IAHjB,CAIF9B,MAAO,KAJL,CAKFkI,OAAQ,CALN,CA/EM,CAsFVwM,GAAI,CACF7T,KAAM,IADJ,CAEFoG,KAAM5D,UAAWkP,CAAAA,MAFf,CAGFhK,SAAU1G,QAASC,CAAAA,IAHjB,CAIF9B,MAAO,KAJL,CAKFkI,OAAQ,CALN,CAtFM,CA6FVyM,GAAI,CACF9T,KAAM,IADJ,CAEFoG,KAAM5D,UAAWkP,CAAAA,MAFf,CAGFhK,SAAU1G,QAASC,CAAAA,IAHjB,CAIF9B,MAAO,QAJL,CAKFkI,OAAQ,CALN,CA7FM,CAoGV0M,GAAI,CACF/T,KAAM,IADJ,CAEFoG,KAAM5D,UAAWkP,CAAAA,MAFf,CAGFhK,SAAU1G,QAASC,CAAAA,IAHjB,CAIF9B,MAAO,OAJL,CAKFkI,OAAQ,CALN,CApGM,CA2GV2M,GAAI,CACFhU,KAAM,IADJ,CAEFoG,KAAM5D,UAAWkP,CAAAA,MAFf,CAGFhK,SAAU1G,QAASC,CAAAA,IAHjB,CAIF9B,MAAO,OAJL,CAKFkI,OAAQ,CALN,CA3GM;AAkHV4M,GAAI,CACFjU,KAAM,IADJ,CAEFoG,KAAM5D,UAAWkP,CAAAA,MAFf,CAGFhK,SAAU1G,QAASC,CAAAA,IAHjB,CAIF9B,MAAO,OAJL,CAKFkI,OAAQ,CALN,CAlHM,CAyHV6M,IAAK,CACHlU,KAAM,KADH,CAEHoG,KAAM5D,UAAWkP,CAAAA,MAFd,CAGHhK,SAAU1G,QAASC,CAAAA,IAHhB,CAIH9B,MAAO,OAJJ,CAKHkI,OAAQ,CALL,CAzHK,CAkIV8M,GAAI,CACFnU,KAAM,IADJ,CAEFoG,KAAM5D,UAAWyP,CAAAA,OAFf,CAGFvK,SAAU1G,QAAS8O,CAAAA,OAHjB,CAIF3Q,MAAO,CAJL,CAKFkI,OAAQ,CALN,CAlIM,CAyIV+M,KAAM,CACJpU,KAAM,MADF,CAEJoG,KAAM5D,UAAWyP,CAAAA,OAFb,CAGJvK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,SAJH,CAKJkI,OAAQ,CALJ,CAzII,CAiJVgN,KAAM,CACJrU,KAAM,MADF,CAEJoG,KAAM5D,UAAWyP,CAAAA,OAFb,CAGJvK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,SAJH,CAKJkI,OAAQ,CALJ,CAjJI,CAyJViN,KAAM,CACJtU,KAAM,MADF,CAEJoG,KAAM5D,UAAWyP,CAAAA,OAFb,CAGJvK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,SAJH;AAKJkI,OAAQ,CALJ,CAzJI,CAiKVkN,KAAM,CACJvU,KAAM,MADF,CAEJoG,KAAM5D,UAAWyP,CAAAA,OAFb,CAGJvK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,cAJH,CAKJkI,OAAQ,CALJ,CAjKI,CAyKVmN,KAAM,CACJxU,KAAM,MADF,CAEJoG,KAAM5D,UAAWyP,CAAAA,OAFb,CAGJvK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,QAJH,CAKJkI,OAAQ,CALJ,CAzKI,CAiLVoN,KAAM,CACJzU,KAAM,MADF,CAEJoG,KAAM5D,UAAWyP,CAAAA,OAFb,CAGJvK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,QAJH,CAKJkI,OAAQ,CALJ,CAjLI,CAyLVqN,MAAO,CACL1U,KAAM,OADD,CAELoG,KAAM5D,UAAWyP,CAAAA,OAFZ,CAGLvK,SAAU1G,QAASC,CAAAA,IAHd,CAIL9B,MAAO,UAJF,CAKLkI,OAAQ,CALH,CAzLG,CAiMVsN,KAAM,CACJ3U,KAAM,MADF,CAEJoG,KAAM5D,UAAWyP,CAAAA,OAFb,CAGJvK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,OAJH,CAKJkI,OAAQ,CALJ,CAjMI,CAyMVuN,QAAS,CACP5U,KAAM,SADC,CAEPoG,KAAM5D,UAAWyP,CAAAA,OAFV;AAGPvK,SAAU1G,QAASC,CAAAA,IAHZ,CAIP9B,MAAO,GAJA,CAKPkI,OAAQ,CALD,CAzMC,CAkNVwN,GAAI,CACF7U,KAAM,IADJ,CAEFoG,KAAM5D,UAAW0P,CAAAA,MAFf,CAGFxK,SAAU1G,QAAS+O,CAAAA,KAHjB,CAIF5Q,MAAO,CAJL,CAKFkI,OAAQ,CALN,CAlNM,CAyNVyN,EAAG,CACD9U,KAAM,GADL,CAEDoG,KAAM5D,UAAW0P,CAAAA,MAFhB,CAGDxK,SAAU1G,QAASwM,CAAAA,KAHlB,CAIDrO,MAAO,IAJN,CAKDkI,OAAQ,CALP,CAzNO,CAiOV0N,EAAG,CACD/U,KAAM,GADL,CAEDoG,KAAM5D,UAAW0P,CAAAA,MAFhB,CAGDxK,SAAU1G,QAASwM,CAAAA,KAHlB,CAIDrO,MAAO,IAJN,CAKDkI,OAAQ,CALP,CAjOO,CAyOV2N,MAAO,CACLhV,KAAM,OADD,CAELoG,KAAM5D,UAAW0P,CAAAA,MAFZ,CAGLxK,SAAU1G,QAASyN,CAAAA,IAHd,CAILtP,MAAO,IAJF,CAKLkI,OAAQ,CALH,CAzOG,CAgPV4N,KAAM,CACJjV,KAAM,MADF,CAEJoG,KAAM5D,UAAW0P,CAAAA,MAFb,CAGJxK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,YAJH,CAKJkI,OAAQ,CALJ,CAhPI,CAwPV6N,KAAM,CACJlV,KAAM,MADF,CAEJoG,KAAM5D,UAAW0P,CAAAA,MAFb;AAGJxK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,aAJH,CAKJkI,OAAQ,CALJ,CAxPI,CAgQV8N,KAAM,CACJnV,KAAM,MADF,CAEJoG,KAAM5D,UAAW0P,CAAAA,MAFb,CAGJxK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,aAJH,CAKJkI,OAAQ,CALJ,CAhQI,CAwQV+N,SAAU,CACRpV,KAAM,UADE,CAERoG,KAAM5D,UAAW0P,CAAAA,MAFT,CAGRxK,SAAU1G,QAASC,CAAAA,IAHX,CAIR9B,MAAO,IAJC,CAKRkI,OAAQ,CALA,CAxQA,CAgRVgO,WAAY,CACVrV,KAAM,YADI,CAEVoG,KAAM5D,UAAW0P,CAAAA,MAFP,CAGVxK,SAAU1G,QAASC,CAAAA,IAHT,CAIV9B,MAAO,MAJG,CAKVkI,OAAQ,CALE,CAhRF,CAyRViO,KAAM,CACJtV,KAAM,MADF,CAEJoG,KAAM5D,UAAW0P,CAAAA,MAFb,CAGJxK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,IAJH,CAKJkI,OAAQ,CALJ,CAzRI,CAiSVkO,IAAK,CACHvV,KAAM,KADH,CAEHoG,KAAM5D,UAAW0P,CAAAA,MAFd,CAGHxK,SAAU1G,QAASC,CAAAA,IAHhB,CAIH9B,MAAO,IAJJ,CAKHkI,OAAQ,CALL,CAjSK;AA0SVmO,MAAO,CACLxV,KAAM,OADD,CAELoG,KAAM5D,UAAW0P,CAAAA,MAFZ,CAGLxK,SAAU1G,QAASC,CAAAA,IAHd,CAIL9B,MAAO,WAJF,CAKLkI,OAAQ,CALH,CA1SG,CAkTVoO,UAAW,CACTzV,KAAM,WADG,CAEToG,KAAM5D,UAAW0P,CAAAA,MAFR,CAGTxK,SAAU1G,QAASC,CAAAA,IAHV,CAIT9B,MAAO,YAJE,CAKTkI,OAAQ,CALC,CAlTD,CA0TVqO,WAAY,CACV1V,KAAM,YADI,CAEVoG,KAAM5D,UAAW0P,CAAAA,MAFP,CAGVxK,SAAU1G,QAASC,CAAAA,IAHT,CAIV9B,MAAO,WAJG,CAKVkI,OAAQ,CALE,CA1TF,CAkUVsO,KAAM,CACJ3V,KAAM,MADF,CAEJoG,KAAM5D,UAAW0P,CAAAA,MAFb,CAGJxK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,WAJH,CAKJkI,OAAQ,CALJ,CAlUI,CA0UVuO,GAAI,CACF5V,KAAM,IADJ,CAEFoG,KAAM5D,UAAW0P,CAAAA,MAFf,CAGFxK,SAAU1G,QAASC,CAAAA,IAHjB,CAIF9B,MAAO,IAJL,CAKFkI,OAAQ,CALN,CA1UM,CAkVVwO,IAAK,CACH7V,KAAM,KADH,CAEHoG,KAAM5D,UAAW0P,CAAAA,MAFd;AAGHxK,SAAU1G,QAASC,CAAAA,IAHhB,CAIH9B,MAAO,WAJJ,CAKHkI,OAAQ,CALL,CAlVK,CA0VVyO,KAAM,CACJ9V,KAAM,MADF,CAEJoG,KAAM5D,UAAW0P,CAAAA,MAFb,CAGJxK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,WAJH,CAKJkI,OAAQ,CALJ,CA1VI,CAkWV0O,MAAO,CACL/V,KAAM,OADD,CAELoG,KAAM5D,UAAW0P,CAAAA,MAFZ,CAGLxK,SAAU1G,QAASC,CAAAA,IAHd,CAIL9B,MAAO,WAJF,CAKLkI,OAAQ,CALH,CAlWG,CA0WV2O,OAAQ,CACNhW,KAAM,QADA,CAENoG,KAAM5D,UAAW0P,CAAAA,MAFX,CAGNxK,SAAU1G,QAASC,CAAAA,IAHb,CAIN9B,MAAO,UAJD,CAKNkI,OAAQ,CALF,CA1WE,CAkXV4O,WAAY,CACVjW,KAAM,YADI,CAEVoG,KAAM5D,UAAW0P,CAAAA,MAFP,CAGVxK,SAAU1G,QAASC,CAAAA,IAHT,CAIV9B,MAAO,QAJG,CAKVkI,OAAQ,CALE,CAlXF,CA0XV6O,UAAW,CACTlW,KAAM,WADG,CAEToG,KAAM5D,UAAW0P,CAAAA,MAFR,CAGTxK,SAAU1G,QAASC,CAAAA,IAHV;AAIT9B,MAAO,QAJE,CAKTkI,OAAQ,CALC,CA1XD,CAkYV8O,SAAU,CACRnW,KAAM,UADE,CAERoG,KAAM5D,UAAW0P,CAAAA,MAFT,CAGRxK,SAAU1G,QAASC,CAAAA,IAHX,CAIR9B,MAAO,OAJC,CAKRkI,OAAQ,CALA,CAlYA,CA2YV+O,KAAM,CACJpW,KAAM,MADF,CAEJoG,KAAM5D,UAAW0P,CAAAA,MAFb,CAGJxK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,YAJH,CAKJkI,OAAQ,CALJ,CA3YI,CAmZVgP,KAAM,CACJrW,KAAM,MADF,CAEJoG,KAAM5D,UAAW0P,CAAAA,MAFb,CAGJxK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,WAJH,CAKJkI,OAAQ,CALJ,CAnZI,CA2ZViP,GAAI,CACFtW,KAAM,IADJ,CAEFoG,KAAM5D,UAAW0P,CAAAA,MAFf,CAGFxK,SAAU1G,QAASC,CAAAA,IAHjB,CAIF9B,MAAO,WAJL,CAKFkI,OAAQ,CALN,CA3ZM,CAmaVkP,GAAI,CACFvW,KAAM,IADJ,CAEFoG,KAAM5D,UAAW0P,CAAAA,MAFf,CAGFxK,SAAU1G,QAASC,CAAAA,IAHjB,CAIF9B,MAAO,WAJL,CAKFkI,OAAQ,CALN,CAnaM,CA2aVmP,GAAI,CACFxW,KAAM,IADJ,CAEFoG,KAAM5D,UAAW0P,CAAAA,MAFf;AAGFxK,SAAU1G,QAASC,CAAAA,IAHjB,CAIF9B,MAAO,WAJL,CAKFkI,OAAQ,CALN,CA3aM,CAmbVoP,GAAI,CACFzW,KAAM,IADJ,CAEFoG,KAAM5D,UAAW0P,CAAAA,MAFf,CAGFxK,SAAU1G,QAASC,CAAAA,IAHjB,CAIF9B,MAAO,WAJL,CAKFkI,OAAQ,CALN,CAnbM,CA2bVqP,IAAK,CACH1W,KAAM,KADH,CAEHoG,KAAM5D,UAAW0P,CAAAA,MAFd,CAGHxK,SAAU1G,QAASC,CAAAA,IAHhB,CAIH9B,MAAO,UAJJ,CAKHkI,OAAQ,CALL,CA3bK,CAmcVsP,IAAK,CACH3W,KAAM,KADH,CAEHoG,KAAM5D,UAAW0P,CAAAA,MAFd,CAGHxK,SAAU1G,QAASC,CAAAA,IAHhB,CAIH9B,MAAO,QAJJ,CAKHkI,OAAQ,CALL,CAncK,CA2cVuP,IAAK,CACH5W,KAAM,KADH,CAEHoG,KAAM5D,UAAW0P,CAAAA,MAFd,CAGHxK,SAAU1G,QAASC,CAAAA,IAHhB,CAIH9B,MAAO,QAJJ,CAKHkI,OAAQ,CALL,CA3cK,CAqdVwP,EAAG,CACD7W,KAAM,GADL,CAEDoG,KAAM5D,UAAWiP,CAAAA,IAFhB,CAGD/J,SAAU1G,QAASwM,CAAAA,KAHlB,CAIDrO,MAAO,IAJN,CAKDkI,OAAQ,CALP,CArdO,CA4dVyP,KAAM,CACJ9W,KAAM,MADF,CAEJoG,KAAM5D,UAAWiP,CAAAA,IAFb;AAGJ/J,SAAU1G,QAASyN,CAAAA,IAHf,CAIJtP,MAAO,IAJH,CAKJkI,OAAQ,CALJ,CA5dI,CAmeV0P,IAAK,CACH/W,KAAM,KADH,CAEHoG,KAAM5D,UAAWiP,CAAAA,IAFd,CAGH/J,SAAU1G,QAASwM,CAAAA,KAHhB,CAIHrO,MAAO,SAJJ,CAKHkI,OAAQ,CALL,CAneK,CA0eV2P,EAAG,CACDhX,KAAM,GADL,CAEDoG,KAAM5D,UAAWiP,CAAAA,IAFhB,CAGD/J,SAAU1G,QAASwM,CAAAA,KAHlB,CAIDrO,MAAO,GAJN,CAKDkI,OAAQ,CALP,CA1eO,CAifV4P,MAAO,CACLjX,KAAM,OADD,CAELoG,KAAM5D,UAAWiP,CAAAA,IAFZ,CAGL/J,SAAU1G,QAASyN,CAAAA,IAHd,CAILtP,MAAO,GAJF,CAKLkI,OAAQ,CALH,CAjfG,CAwfV6P,MAAO,CACLlX,KAAM,OADD,CAELoG,KAAM5D,UAAWiP,CAAAA,IAFZ,CAGL/J,SAAU1G,QAASC,CAAAA,IAHd,CAIL9B,MAAO,WAJF,CAKLkI,OAAQ,CALH,CAxfG,CA+fV8P,KAAM,CACJnX,KAAM,MADF,CAEJoG,KAAM5D,UAAWiP,CAAAA,IAFb,CAGJ/J,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,iBAJH,CAKJkI,OAAQ,CALJ,CA/fI,CAsgBV+P,MAAO,CACLpX,KAAM,OADD,CAELoG,KAAM5D,UAAWiP,CAAAA,IAFZ;AAGL/J,SAAU1G,QAASC,CAAAA,IAHd,CAIL9B,MAAO,aAJF,CAKLkI,OAAQ,CALH,CAtgBG,CA6gBVgQ,UAAW,CACTrX,KAAM,WADG,CAEToG,KAAM5D,UAAWiP,CAAAA,IAFR,CAGT/J,SAAU1G,QAASC,CAAAA,IAHV,CAIT9B,MAAO,SAJE,CAKTkI,OAAQ,CALC,CA7gBD,CAohBViQ,cAAe,CACbtX,KAAM,eADO,CAEboG,KAAM5D,UAAWiP,CAAAA,IAFJ,CAGb/J,SAAU1G,QAASC,CAAAA,IAHN,CAIb9B,MAAO,SAJM,CAKbkI,OAAQ,CALK,CAphBL,CA2hBVkQ,MAAO,CACLvX,KAAM,OADD,CAELoG,KAAM5D,UAAWiP,CAAAA,IAFZ,CAGL/J,SAAU1G,QAASC,CAAAA,IAHd,CAIL9B,MAAO,IAJF,CAKLkI,OAAQ,CALH,CA3hBG,CAkiBVmQ,MAAO,CACLxX,KAAM,OADD,CAELoG,KAAM5D,UAAWiP,CAAAA,IAFZ,CAGL/J,SAAU1G,QAASC,CAAAA,IAHd,CAIL9B,MAAO,UAJF,CAKLkI,OAAQ,CALH,CAliBG,CAyiBVoQ,GAAI,CACFzX,KAAM,IADJ,CAEFoG,KAAM5D,UAAWiP,CAAAA,IAFf,CAGF/J,SAAU1G,QAASC,CAAAA,IAHjB,CAIF9B,MAAO,WAJL;AAKFkI,OAAQ,CALN,CAziBM,CAgjBVqQ,GAAI,CACF1X,KAAM,IADJ,CAEFoG,KAAM5D,UAAWiP,CAAAA,IAFf,CAGF/J,SAAU1G,QAASC,CAAAA,IAHjB,CAIF9B,MAAO,iBAJL,CAKFkI,OAAQ,CALN,CAhjBM,CAujBVsQ,GAAI,CACF3X,KAAM,IADJ,CAEFoG,KAAM5D,UAAWiP,CAAAA,IAFf,CAGF/J,SAAU1G,QAASC,CAAAA,IAHjB,CAIF9B,MAAO,aAJL,CAKFkI,OAAQ,CALN,CAvjBM,CA8jBVuQ,IAAK,CACH5X,KAAM,KADH,CAEHoG,KAAM5D,UAAWiP,CAAAA,IAFd,CAGH/J,SAAU1G,QAASC,CAAAA,IAHhB,CAIH9B,MAAO,SAJJ,CAKHkI,OAAQ,CALL,CA9jBK,CAqkBVwQ,IAAK,CACH7X,KAAM,KADH,CAEHoG,KAAM5D,UAAWiP,CAAAA,IAFd,CAGH/J,SAAU1G,QAASC,CAAAA,IAHhB,CAIH9B,MAAO,SAJJ,CAKHkI,OAAQ,CALL,CArkBK,CA6kBVyQ,EAAG,CACD9X,KAAM,GADL,CAEDoG,KAAM5D,UAAWmP,CAAAA,IAFhB,CAGDjK,SAAU1G,QAASwM,CAAAA,KAHlB,CAIDrO,MAAO,CAJN,CAKDkI,OAAQ,CALP,CA7kBO,CAolBV0Q,IAAK,CACH/X,KAAM,KADH,CAEHoG,KAAM5D,UAAWmP,CAAAA,IAFd,CAGHjK,SAAU1G,QAASC,CAAAA,IAHhB,CAIH9B,MAAO,EAJJ;AAKHkI,OAAQ,CALL,CAplBK,CA2lBVqG,EAAG,CACD1N,KAAM,GADL,CAEDoG,KAAM5D,UAAWmP,CAAAA,IAFhB,CAGDjK,SAAU1G,QAASC,CAAAA,IAHlB,CAID9B,MAAO,IAJN,CAKDkI,OAAQ,CALP,CA3lBO,CAkmBV2Q,OAAQ,CACNhY,KAAM,QADA,CAENoG,KAAM5D,UAAWmP,CAAAA,IAFX,CAGNjK,SAAU1G,QAASyN,CAAAA,IAHb,CAINtP,MAAO,CAJD,CAKNkI,OAAQ,CALF,CAlmBE,CAymBV4Q,IAAK,CACHjY,KAAM,KADH,CAEHoG,KAAM5D,UAAWmP,CAAAA,IAFd,CAGHjK,SAAU1G,QAASyN,CAAAA,IAHhB,CAIHtP,MAAO,CAJJ,CAKHkI,OAAQ,CALL,CAzmBK,CAgnBV6Q,OAAQ,CACNlY,KAAM,QADA,CAENoG,KAAM5D,UAAWmP,CAAAA,IAFX,CAGNjK,SAAU1G,QAASC,CAAAA,IAHb,CAIN9B,MAAO,EAJD,CAKNkI,OAAQ,CALF,CAhnBE,CAunBV8Q,KAAM,CACJnY,KAAM,MADF,CAEJoG,KAAM5D,UAAWmP,CAAAA,IAFb,CAGJjK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,IAJH,CAKJkI,OAAQ,CALJ,CAvnBI,CA8nBV+Q,IAAK,CACHpY,KAAM,KADH,CAEHoG,KAAM5D,UAAWmP,CAAAA,IAFd,CAGHjK,SAAU1G,QAASC,CAAAA,IAHhB,CAIH9B,MAAO,KAJJ,CAKHkI,OAAQ,CALL,CA9nBK,CAqoBVgR,KAAM,CACJrY,KAAM,MADF;AAEJoG,KAAM5D,UAAWmP,CAAAA,IAFb,CAGJjK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,MAJH,CAKJkI,OAAQ,CALJ,CAroBI,CA4oBViR,MAAO,CACLtY,KAAM,OADD,CAELoG,KAAM5D,UAAWmP,CAAAA,IAFZ,CAGLjK,SAAU1G,QAASC,CAAAA,IAHd,CAIL9B,MAAO,OAJF,CAMLkI,OAAQ,CANH,CA5oBG,CAopBVkR,KAAM,CACJvY,KAAM,MADF,CAEJoG,KAAM5D,UAAWmP,CAAAA,IAFb,CAGJjK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,QAJH,CAMJkI,OAAQ,CANJ,CAppBI,CA4pBVmR,OAAQ,CACNxY,KAAM,QADA,CAENoG,KAAM5D,UAAWmP,CAAAA,IAFX,CAGNjK,SAAU1G,QAASC,CAAAA,IAHb,CAIN9B,MAAO,QAJD,CAMNkI,OAAQ,CANF,CA5pBE,CAoqBVoR,QAAS,CACPzY,KAAM,SADC,CAEPoG,KAAM5D,UAAWmP,CAAAA,IAFV,CAGPjK,SAAU1G,QAASC,CAAAA,IAHZ,CAIP9B,MAAO,QAJA,CAMPkI,OAAQ,CAND,CApqBC,CA4qBVqR,WAAY,CACV1Y,KAAM,YADI,CAEVoG,KAAM5D,UAAWmP,CAAAA,IAFP,CAGVjK,SAAU1G,QAASC,CAAAA,IAHT,CAIV9B,MAAO,QAJG;AAMVkI,OAAQ,CANE,CA5qBF,CAqrBVsR,MAAO,CACL3Y,KAAM,OADD,CAELoG,KAAM5D,UAAWsQ,CAAAA,SAFZ,CAGLpL,SAAU1G,QAASyN,CAAAA,IAHd,CAILtP,MAAO,CAJF,CAKLkI,OAAQ,CALH,CAMLuR,WAAY,CAAA,CANP,CArrBG,CA6rBVC,GAAI,CACF7Y,KAAM,IADJ,CAEFoG,KAAM5D,UAAWsQ,CAAAA,SAFf,CAGFpL,SAAU1G,QAASwM,CAAAA,KAHjB,CAIFrO,MAAO,CAJL,CAKFkI,OAAQ,CALN,CAMFuR,WAAY,CAAA,CANV,CA7rBM,CAssBV5V,IAAK,CACHhD,KAAM,KADH,CAEHoG,KAAM5D,UAAWuQ,CAAAA,KAFd,CAGHrL,SAAU1G,QAASwM,CAAAA,KAHhB,CAIHrO,MAAO,CAJJ,CAKHkI,OAAQ,CALL,CAtsBK,CA6sBV3D,OAAQ,CACN1D,KAAM,QADA,CAENoG,KAAM5D,UAAWuQ,CAAAA,KAFX,CAGNrL,SAAU1G,QAASyN,CAAAA,IAHb,CAINtP,MAAO,CAJD,CAKNkI,OAAQ,CALF,CA7sBE,CAqtBVpE,IAAK,CACHjD,KAAM,KADH,CAEHoG,KAAM5D,UAAWuQ,CAAAA,KAFd,CAGHrL,SAAU1G,QAASwM,CAAAA,KAHhB,CAIHrO,MAAO,IAJJ,CAMHkI,OAAQ,CANL,CArtBK,CA6tBV1D,OAAQ,CACN3D,KAAM,QADA,CAENoG,KAAM5D,UAAWuQ,CAAAA,KAFX,CAGNrL,SAAU1G,QAASyN,CAAAA,IAHb;AAINtP,MAAO,IAJD,CAMNkI,OAAQ,CANF,CA7tBE,CAsuBVlE,KAAM,CACJnD,KAAM,MADF,CAEJoG,KAAM5D,UAAWuQ,CAAAA,KAFb,CAGJrL,SAAU1G,QAASwM,CAAAA,KAHf,CAIJrO,MAAO,IAJH,CAMJkI,OAAQ,CANJ,CAtuBI,CA8uBVzD,QAAS,CACP5D,KAAM,SADC,CAEPoG,KAAM5D,UAAWuQ,CAAAA,KAFV,CAGPrL,SAAU1G,QAASyN,CAAAA,IAHZ,CAIPtP,MAAO,IAJA,CAMPkI,OAAQ,CAND,CA9uBC,CAuvBVjE,MAAO,CACLpD,KAAM,OADD,CAELoG,KAAM5D,UAAWuQ,CAAAA,KAFZ,CAGLrL,SAAU1G,QAASC,CAAAA,IAHd,CAIL9B,MAAO,IAJF,CAMLkI,OAAQ,CANH,CAvvBG,CAgwBV/D,OAAQ,CACNtD,KAAM,QADA,CAENoG,KAAM5D,UAAWuQ,CAAAA,KAFX,CAGNrL,SAAU1G,QAASC,CAAAA,IAHb,CAIN9B,MAAO,IAJD,CAMNkI,OAAQ,CANF,CAhwBE,CAywBV9D,OAAQ,CACNvD,KAAM,QADA,CAENoG,KAAM5D,UAAWuQ,CAAAA,KAFX,CAGNrL,SAAU1G,QAASC,CAAAA,IAHb,CAIN9B,MAAO,IAJD,CAMNkI,OAAQ,CANF,CAzwBE,CAkxBVyR,EAAG,CACD9Y,KAAM,GADL,CAEDoG,KAAM5D,UAAWoP,CAAAA,OAFhB,CAGDlK,SAAU1G,QAASwM,CAAAA,KAHlB;AAIDrO,MAAO,CAJN,CAKDkI,OAAQ,CALP,CAlxBO,CAyxBV0R,OAAQ,CACN/Y,KAAM,QADA,CAENoG,KAAM5D,UAAWoP,CAAAA,OAFX,CAGNlK,SAAU1G,QAASyN,CAAAA,IAHb,CAINtP,MAAO,CAJD,CAKNkI,OAAQ,CALF,CAzxBE,CAoyBV2R,EAAG,CACDhZ,KAAM,GADL,CAEDoG,KAAM5D,UAAWqP,CAAAA,WAFhB,CAGDnK,SAAU1G,QAASC,CAAAA,IAHlB,CAID9B,MAAO,CAJN,CAKDkI,OAAQ,CALP,CApyBO,CA2yBV4R,KAAM,CACJjZ,KAAM,MADF,CAEJoG,KAAM5D,UAAWqP,CAAAA,WAFb,CAGJnK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,CAJH,CAKJkI,OAAQ,MALJ,CA3yBI,CAkzBV6R,KAAM,CACJlZ,KAAM,MADF,CAEJoG,KAAM5D,UAAWqP,CAAAA,WAFb,CAGJnK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,CAAPA,CAAW,GAJP,CAKJkI,OAAQ,MALJ,CAlzBI,CAyzBV8R,KAAM,CACJnZ,KAAM,MADF,CAEJoG,KAAM5D,UAAWqP,CAAAA,WAFb,CAGJnK,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,CAAPA,CAAW,GAJP,CAKJkI,OAAQ,CALJ,CAzzBI,CAg0BV+R,OAAQ,CACNpZ,KAAM,QADA,CAENoG,KAAM5D,UAAWqP,CAAAA,WAFX;AAGNnK,SAAU1G,QAASC,CAAAA,IAHb,CAIN9B,MAAO,CAJD,CAKNkI,OAAQ,CALF,CAh0BE,CAu0BVgS,QAAS,CACPrZ,KAAM,SADC,CAEPoG,KAAM5D,UAAWqP,CAAAA,WAFV,CAGPnK,SAAU1G,QAASC,CAAAA,IAHZ,CAIP9B,MAAO,CAJA,CAKPkI,OAAQ,MALD,CAv0BC,CA80BViS,WAAY,CACVtZ,KAAM,YADI,CAEVoG,KAAM5D,UAAWqP,CAAAA,WAFP,CAGVnK,SAAU1G,QAASC,CAAAA,IAHT,CAIV9B,MAAO,CAAPA,CAAW,GAJD,CAKVkI,OAAQ,MALE,CA90BF,CAq1BVkS,QAAS,CACPvZ,KAAM,SADC,CAEPoG,KAAM5D,UAAWqP,CAAAA,WAFV,CAGPnK,SAAU1G,QAASC,CAAAA,IAHZ,CAIP9B,MAAO,CAAPA,CAAW,GAJJ,CAKPkI,OAAQ,CALD,CAr1BC,CA61BVmS,IAAK,CACHxZ,KAAM,KADH,CAEHoG,KAAM5D,UAAWuP,CAAAA,mBAFd,CAGHrK,SAAU1G,QAASwM,CAAAA,KAHhB,CAIHrO,MAAO,CAJJ,CAKHkI,OAAQ,CALL,CA71BK,CAo2BVoS,KAAM,CACJzZ,KAAM,MADF,CAEJoG,KAAM5D,UAAWuP,CAAAA,mBAFb,CAGJrK,SAAU1G,QAASyN,CAAAA,IAHf;AAIJtP,MAAO,CAJH,CAKJkI,OAAQ,CALJ,CAp2BI,CA42BVqS,GAAI,CACF1Z,KAAM,IADJ,CAEFoG,KAAM5D,UAAWsP,CAAAA,kBAFf,CAGFpK,SAAU1G,QAASwM,CAAAA,KAHjB,CAIFrO,MAAO,CAJL,CAKFkI,OAAQ,CALN,CA52BM,CAm3BVsS,QAAS,CACP3Z,KAAM,SADC,CAEPoG,KAAM5D,UAAWsP,CAAAA,kBAFV,CAGPpK,SAAU1G,QAASyN,CAAAA,IAHZ,CAIPtP,MAAO,CAJA,CAKPkI,OAAQ,CALD,CAn3BC,CA83BVuS,EAAG,CACD5Z,KAAM,GADL,CAEDoG,KAAM5D,UAAWwP,CAAAA,KAFhB,CAGDtK,SAAU1G,QAASwM,CAAAA,KAHlB,CAIDrO,MAAO,CAJN,CAKDkI,OAAQ,CALP,CA93BO,CAq4BVwS,OAAQ,CACN7Z,KAAM,QADA,CAENoG,KAAM5D,UAAWwP,CAAAA,KAFX,CAGNtK,SAAU1G,QAASyN,CAAAA,IAHb,CAINtP,MAAO,CAJD,CAKNkI,OAAQ,CALF,CAr4BE,CA44BVyS,IAAK,CACH9Z,KAAM,KADH,CAEHoG,KAAM5D,UAAWwP,CAAAA,KAFd,CAGHtK,SAAU1G,QAASwM,CAAAA,KAHhB,CAIHrO,MAAO,IAJJ,CAKHkI,OAAQ,CALL,CA54BK,CAm5BV0S,KAAM,CACJ/Z,KAAM,MADF,CAEJoG,KAAM5D,UAAWwP,CAAAA,KAFb,CAGJtK,SAAU1G,QAASyN,CAAAA,IAHf;AAIJtP,MAAO,IAJH,CAKJkI,OAAQ,CALJ,CAn5BI,CA05BV2S,IAAK,CACHha,KAAM,KADH,CAEHoG,KAAM5D,UAAWwP,CAAAA,KAFd,CAGHtK,SAAU1G,QAASC,CAAAA,IAHhB,CAIH9B,MAAO,eAJJ,CAKHkI,OAAQ,CALL,CA15BK,CAi6BV4S,WAAY,CACVja,KAAM,YADI,CAEVoG,KAAM5D,UAAWwP,CAAAA,KAFP,CAGVtK,SAAU1G,QAASC,CAAAA,IAHT,CAIV9B,MAAO,eAJG,CAKVkI,OAAQ,CALE,CAj6BF,CAw6BV6S,IAAK,CACHla,KAAM,KADH,CAEHoG,KAAM5D,UAAWwP,CAAAA,KAFd,CAGHtK,SAAU1G,QAASyN,CAAAA,IAHhB,CAIHtP,MAAO,SAJJ,CAKHkI,OAAQ,CALL,CAx6BK,CA+6BV8S,cAAe,CACbna,KAAM,eADO,CAEboG,KAAM5D,UAAWwP,CAAAA,KAFJ,CAGbtK,SAAU1G,QAASC,CAAAA,IAHN,CAIb9B,MAAO,OAJM,CAKbkI,OAAQ,CALK,CA/6BL,CAu7BV+S,EAAG,CACDpa,KAAM,GADL,CAEDoG,KAAM5D,UAAW2P,CAAAA,MAFhB,CAGDzK,SAAU1G,QAASwM,CAAAA,KAHlB,CAIDrO,MAAO,CAJN,CAKDkI,OAAQ,CALP,CAv7BO,CA87BVgT,MAAO,CACLra,KAAM,OADD;AAELoG,KAAM5D,UAAW2P,CAAAA,MAFZ,CAGLzK,SAAU1G,QAASwM,CAAAA,KAHd,CAILrO,MAAO,CAJF,CAKLkI,OAAQ,CALH,CA97BG,CAq8BViT,IAAK,CACHta,KAAM,KADH,CAEHoG,KAAM5D,UAAW2P,CAAAA,MAFd,CAGHzK,SAAU1G,QAASC,CAAAA,IAHhB,CAIH9B,MAAO,IAJJ,CAKHkI,OAAQ,CALL,CAr8BK,CA48BVkT,GAAI,CACFva,KAAM,IADJ,CAEFoG,KAAM5D,UAAW2P,CAAAA,MAFf,CAGFzK,SAAU1G,QAASwM,CAAAA,KAHjB,CAIFrO,MAAO,IAJL,CAKFkI,OAAQ,CALN,CA58BM,CAm9BV+J,IAAK,CACHpR,KAAM,KADH,CAEHoG,KAAM5D,UAAW2P,CAAAA,MAFd,CAGHzK,SAAU1G,QAASoQ,CAAAA,GAHhB,CAIHjS,MAAO,aAJJ,CAKHkI,OAAQ,CALL,CAn9BK,CA09BVmT,GAAI,CACFxa,KAAM,IADJ,CAEFoG,KAAM5D,UAAW2P,CAAAA,MAFf,CAGFzK,SAAU1G,QAASwM,CAAAA,KAHjB,CAIFrO,MAAO,eAJL,CAKFkI,OAAQ,CALN,CA19BM,CAi+BVoT,aAAc,CACZza,KAAM,cADM,CAEZoG,KAAM5D,UAAW2P,CAAAA,MAFL,CAGZzK,SAAU1G,QAASyN,CAAAA,IAHP,CAIZtP,MAAO,eAJK;AAKZkI,OAAQ,CALI,CAj+BJ,CAy+BVoC,EAAG,CACDzJ,KAAM,GADL,CAEDoG,KAAM5D,UAAW4P,CAAAA,KAFhB,CAGD1K,SAAU1G,QAASwM,CAAAA,KAHlB,CAIDrO,MAAO,CAJN,CAKDkI,OAAQ,CALP,CAz+BO,CAg/BVqT,KAAM,CACJ1a,KAAM,MADF,CAEJoG,KAAM5D,UAAW4P,CAAAA,KAFb,CAGJ1K,SAAU1G,QAASyN,CAAAA,IAHf,CAIJtP,MAAO,CAJH,CAKJkI,OAAQ,CALJ,CAh/BI,CAu/BVsT,GAAI,CACF3a,KAAM,IADJ,CAEFoG,KAAM5D,UAAW4P,CAAAA,KAFf,CAGF1K,SAAU1G,QAASC,CAAAA,IAHjB,CAIF9B,MAAO,cAJL,CAKFkI,OAAQ,CALN,CAv/BM,CA+/BV2E,IAAK,CACHhM,KAAM,KADH,CAEHoG,KAAM5D,UAAW4P,CAAAA,KAFd,CAGH1K,SAAU1G,QAASwM,CAAAA,KAHhB,CAIHrO,MAAOqF,OAAQoW,CAAAA,CAJZ,CAKHvT,OAAQ,CALL,CA//BK,CAsgCV4E,GAAI,CACFjM,KAAM,IADJ,CAEFoG,KAAM5D,UAAW4P,CAAAA,KAFf,CAGF1K,SAAU1G,QAASwM,CAAAA,KAHjB,CAIFrO,MAAO,CAJL,CAKFkI,OAAQ,CALN,CAtgCM,CA8gCVwT,GAAI,CACF7a,KAAM,IADJ,CAEFoG,KAAM5D,UAAW6P,CAAAA,QAFf,CAGF3K,SAAU1G,QAASwM,CAAAA,KAHjB,CAIFrO,MAAO,CAJL,CAKFkI,OAAQ,CALN,CA9gCM;AAqhCVyT,IAAK,CACH9a,KAAM,KADH,CAEHoG,KAAM5D,UAAW6P,CAAAA,QAFd,CAGH3K,SAAU1G,QAASC,CAAAA,IAHhB,CAIH9B,MAAO,gBAJJ,CAKHkI,OAAQ,CALL,CArhCK,CA4hCV0T,IAAK,CACH/a,KAAM,KADH,CAEHoG,KAAM5D,UAAW6P,CAAAA,QAFd,CAGH3K,SAAU1G,QAASC,CAAAA,IAHhB,CAIH9B,MAAO,MAJJ,CAKHkI,OAAQ,CALL,CA5hCK,CAmiCV2T,IAAK,CACHhb,KAAM,KADH,CAEHoG,KAAM5D,UAAW6P,CAAAA,QAFd,CAGH3K,SAAU1G,QAASsQ,CAAAA,SAHhB,CAIHnS,MAAO,GAJJ,CAKHkI,OAAQ,CALL,CAniCK,CA0iCV4T,KAAM,CACJjb,KAAM,MADF,CAEJoG,KAAM5D,UAAW6P,CAAAA,QAFb,CAGJ3K,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,OAJH,CAKJkI,OAAQ,CALJ,CA1iCI,CAijCV6T,KAAM,CACJlb,KAAM,MADF,CAEJoG,KAAM5D,UAAW6P,CAAAA,QAFb,CAGJ3K,SAAU1G,QAASC,CAAAA,IAHf,CAIJ9B,MAAO,OAJH,CAKJkI,OAAQ,CALJ,CAjjCI,CAwjCV8T,MAAO,CACLnb,KAAM,OADD,CAELoG,KAAM5D,UAAW6P,CAAAA,QAFZ,CAGL3K,SAAU1G,QAASC,CAAAA,IAHd;AAIL9B,MAAO,OAJF,CAKLkI,OAAQ,CALH,CAxjCG,CA+jCV+T,MAAO,CACLpb,KAAM,OADD,CAELoG,KAAM5D,UAAW6P,CAAAA,QAFZ,CAGL3K,SAAU1G,QAASC,CAAAA,IAHd,CAIL9B,MAAO,OAJF,CAKLkI,OAAQ,CALH,CA/jCG,CAukCVgU,QAAS,CACPrb,KAAM,SADC,CAEPoG,KAAM5D,UAAW8P,CAAAA,eAFV,CAGP5K,SAAU1G,QAASyN,CAAAA,IAHZ,CAIPtP,MAAO,CAJA,CAKPkI,OAAQ,CALD,CAvkCC,CA8kCViU,EAAG,CACDtb,KAAM,GADL,CAEDoG,KAAM5D,UAAW8P,CAAAA,eAFhB,CAGD5K,SAAU1G,QAASwM,CAAAA,KAHlB,CAIDrO,MAAO,CAJN,CAKDkI,OAAQ,CALP,CA9kCO,CAslCVkU,MAAO,CACLvb,KAAM,OADD,CAELoG,KAAM5D,UAAW+P,CAAAA,oBAFZ,CAGL7K,SAAU1G,QAASyN,CAAAA,IAHd,CAILtP,MAAO,CAJF,CAKLkI,OAAQ,CALH,CAtlCG,CA6lCVmU,EAAG,CACDxb,KAAM,GADL,CAEDoG,KAAM5D,UAAW+P,CAAAA,oBAFhB,CAGD7K,SAAU1G,QAASwM,CAAAA,KAHlB,CAIDrO,MAAO,CAJN,CAKDkI,OAAQ,CALP,CA7lCO,CAqmCVoU,KAAM,CACJzb,KAAM,MADF;AAEJoG,KAAM5D,UAAWgQ,CAAAA,kBAFb,CAGJ9K,SAAU1G,QAASyN,CAAAA,IAHf,CAIJtP,MAAO,CAJH,CAKJkI,OAAQ,CALJ,CArmCI,CA4mCVqU,EAAG,CACD1b,KAAM,GADL,CAEDoG,KAAM5D,UAAWgQ,CAAAA,kBAFhB,CAGD9K,SAAU1G,QAASwM,CAAAA,KAHlB,CAIDrO,MAAO,CAJN,CAKDkI,OAAQ,CALP,CA5mCO,CAonCVsU,IAAK,CACH3b,KAAM,KADH,CAEHoG,KAAM5D,UAAWiQ,CAAAA,mBAFd,CAGH/K,SAAU1G,QAASsQ,CAAAA,SAHhB,CAKHnS,MAAO,CALJ,CAMHkI,OAAQ,CANL,CApnCK,CAwoCVuU,MAAO,CACL5b,KAAM,OADD,CAELoG,KAAM5D,UAAWkQ,CAAAA,mBAFZ,CAGLhL,SAAU1G,QAASyN,CAAAA,IAHd,CAILtP,MAAO,CAJF,CAKLkI,OAAQ,CALH,CAxoCG,CA+oCVwU,EAAG,CACD7b,KAAM,GADL,CAEDoG,KAAM5D,UAAWkQ,CAAAA,mBAFhB,CAGDhL,SAAU1G,QAASwM,CAAAA,KAHlB,CAIDrO,MAAO,CAJN,CAKDkI,OAAQ,CALP,CA/oCO,CAupCVyU,QAAS,CACP9b,KAAM,SADC,CAEPoG,KAAM5D,UAAWmQ,CAAAA,oBAFV;AAGPjL,SAAU1G,QAASyN,CAAAA,IAHZ,CAIPtP,MAAO,CAJA,CAKPkI,OAAQ,CALD,CAvpCC,CA8pCV0U,EAAG,CACD/b,KAAM,GADL,CAEDoG,KAAM5D,UAAWmQ,CAAAA,oBAFhB,CAGDjL,SAAU1G,QAASwM,CAAAA,KAHlB,CAIDrO,MAAO,CAJN,CAKDkI,OAAQ,CALP,CA9pCO,CAsqCV2U,MAAO,CACLhc,KAAM,OADD,CAELoG,KAAM5D,UAAWoQ,CAAAA,aAFZ,CAGLlL,SAAU1G,QAASyN,CAAAA,IAHd,CAILtP,MAAO,CAJF,CAKLkI,OAAQ,CALH,CAtqCG,CA6qCV4U,GAAI,CACFjc,KAAM,IADJ,CAEFoG,KAAM5D,UAAWoQ,CAAAA,aAFf,CAGFlL,SAAU1G,QAASwM,CAAAA,KAHjB,CAIFrO,MAAO,CAJL,CAKFkI,OAAQ,CALN,CA7qCM,CAqrCV6U,MAAO,CACLlc,KAAM,OADD,CAELoG,KAAM5D,UAAWqQ,CAAAA,qBAFZ,CAGLnL,SAAU1G,QAASyN,CAAAA,IAHd,CAILtP,MAAO,CAJF,CAKLkI,OAAQ,CALH,CArrCG,CA4rCVyG,EAAG,CACD9N,KAAM,GADL,CAEDoG,KAAM5D,UAAWqQ,CAAAA,qBAFhB,CAGDnL,SAAU1G,QAASwM,CAAAA,KAHlB,CAIDrO,MAAO,CAJN,CAKDkI,OAAQ,CALP,CA5rCO,CAosCV8U,EAAG,CACDnc,KAAM,GADL;AAEDoG,KAAM5D,UAAWwQ,CAAAA,GAFhB,CAGDtL,SAAU1G,QAASuQ,CAAAA,YAHlB,CAIDpS,MAAO,CAJN,CAKDkI,OAAQ,CALP,CApsCO,CA2sCV+U,KAAM,CACJpc,KAAM,MADF,CAEJoG,KAAM5D,UAAWwQ,CAAAA,GAFb,CAGJtL,SAAU1G,QAASwQ,CAAAA,WAHf,CAIJrS,MAAO,CAJH,CAKJkI,OAAQ,CALJ,CA3sCI,CAktCVgV,EAAG,CACDrc,KAAM,GADL,CAEDoG,KAAM5D,UAAWwQ,CAAAA,GAFhB,CAGDtL,SAAU1G,QAASuQ,CAAAA,YAHlB,CAIDpS,MAAO,CAJN,CAKDkI,OAAQ,CALP,CAltCO,CAytCViV,MAAO,CACLtc,KAAM,OADD,CAELoG,KAAM5D,UAAWwQ,CAAAA,GAFZ,CAGLtL,SAAU1G,QAASwQ,CAAAA,WAHd,CAILrS,MAAO,CAJF,CAKLkI,OAAQ,CALH,CAztCG,CAkuCRkV,KAAAA,CAAU,CACZC,OAAQ,OADI,CAEZC,OAAQ,MAFI,CAGZC,KAAM,MAHM,CAIZC,MAAO,MAJK,CAKZC,MAAO,MALK,CAMZC,MAAO,MANK,CAOZC,KAAM,KAPM,CAQZC,OAAQ,OARI,CASZC,UAAW,UATC,CAUZC,GAAI,GAVQ,CAWZC,OAAQ,OAXI,CAYZC,MAAO,OAZK,CAaZC,OAAQ,OAbI;AAcZC,UAAW,UAdC,CAeZC,YAAa,YAfD,CAgBZC,OAAQ,OAhBI,CAiBZC,WAAY,WAjBA,CAkBZC,YAAa,YAlBD,CAmBZC,MAAO,MAnBK,CAoBZC,KAAM,KApBM,CAqBZC,MAAO,MArBK,CAsBZC,OAAQ,OAtBI,CAuBZC,QAAS,QAvBG,CAwBZC,YAAa,YAxBD,CAyBZC,WAAY,WAzBA,CA0BZC,UAAW,UA1BC,CA2BZC,KAAM,KA3BM,CA4BZC,MAAO,MA5BK,CA6BZC,KAAM,KA7BM,CA8BZC,OAAQ,OA9BI,CA+BZC,OAAQ,OA/BI,CAgCZC,MAAO,MAhCK,CAiCZC,OAAQ,OAjCI,CAkCZC,YAAa,WAlCD,CAmCZC,eAAgB,eAnCJ,CAoCZC,OAAQ,OApCI,CAqCZC,GAAI,KArCQ,CAsCZC,IAAK,KAtCO,CAuCZC,KAAM,KAvCM,CAwCZC,IAAK,eAxCO,CAyCZC,MAAO,MAzCK,CA0CZC,SAAU,SA1CE,CA2CZC,OAAQ,MA3CI;AA4CZC,OAAQ,MA5CI,CA6CZC,OAAQ,MA7CI,CA8CZC,QAAS,MA9CG,CA+CZC,KAAM,MA/CM,CAgDZC,MAAO,OAhDK,CAiDZC,MAAO,OAjDK,CAkDZC,QAAS,QAlDG,CAmDZC,KAAM,QAnDM,CAoDZC,QAAS,QApDG,CAqDZC,KAAM,QArDM,CAsDZC,MAAO,MAtDK,CAuDZC,GAAI,MAvDQ,CAwDZC,IAAK,MAxDO,CAyDZC,KAAM,KAzDM,CA0DZC,MAAO,MA1DK,CA2DZC,OAAQ,OA3DI,CA4DZC,MAAO,MA5DK,CA6DZC,QAAS,QA7DG,CA8DZC,UAAW,SA9DC,CA+DZC,UAAW,YA/DC,CAgEZ3H,MAAO,OAhEK,CAiEZ4H,QAAS,QAjEG,CAkEZC,QAAS,QAlEG,CAmEZC,SAAU,SAnEE,CAoEZC,OAAQ,OApEI,CAqEZC,UAAW,QArEC,CAsEZC,WAAY,QAtEA,CAuEZC,UAAW,QAvEC,CAwEZC,WAAY,QAxEA,CAyEZC,KAAM,KAzEM,CA0EZC,MAAO,MA1EK,CA2EZC,OAAQ,OA3EI,CA4EZC,QAAS,QA5EG;AA6EZC,SAAU,SA7EE,CA8EZC,MAAO,MA9EK,CA+EZC,KAAM,KA/EM,CAgFZC,OAAQ,OAhFI,CAiFZC,OAAQ,OAjFI,CAkFZC,OAAQ,OAlFI,CAmFZC,cAAe,cAnFH,CAoFZC,MAAO,MApFK,CAqFZC,IAAK,MArFO,CAsFZ,OAAQ,OAtFI,CAgIdhf,qBAAA,CAAqBF,eAArB,CAEIoB,GAAJ,EAEEA,EAAA,CAAG,QAAH,CAAa,QAAS,CAAC+d,IAAD,CAAOC,IAAP,CAAa,CAC7BD,IAAK3f,CAAAA,MAAT,GAAoB4f,IAAK5f,CAAAA,MAAzB,EACEU,oBAAA,CAAqBif,IAArB,CAF+B,CAAnC,CAaF,KAAIvb,aAAe,CACjB+E,GAAI,CAEFnK,KAAM,CACJJ,KAAMC,SADF,CAEJC,OAAQC,QAASC,CAAAA,IAAT,CAAc,EAAd,CAFJ,CAFJ,CAMFyQ,OAAQ,CACN7Q,KAAMkC,KAAMqL,CAAAA,CADN,CAENrN,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFF,CANN,CAUFiE,KAAM,CACJ5Q,KAAMkC,KAAM8T,CAAAA,CADR,CAEJ9V,OAAQC,QAASwM,CAAAA,KAAMG,CAAAA,CAFnB,CAVJ,CAcFgE,KAAM,CACJ9Q,KAAMkC,KAAM+U,CAAAA,CADR,CAEJ/W,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFJ,CAdJ,CAkBFoE,QAAS,CACP/Q,KAAMkC,KAAM+V,CAAAA,CADL;AAEP/X,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFD,CAlBP,CAsBFqE,YAAa,CACXhR,KAAMkC,KAAMiW,CAAAA,CADD,CAEXjY,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFG,CAtBX,CA0BFsE,mBAAoB,CAClBjR,KAAMkC,KAAM2W,CAAAA,EADM,CAElB3Y,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFU,CA1BlB,CA8BFuE,oBAAqB,CACnBlR,KAAMkC,KAAMyW,CAAAA,GADO,CAEnBzY,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFW,CA9BnB,CAkCFuF,MAAO,CACLlS,KAAMkC,KAAMC,CAAAA,GADP,CAELjC,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFH,CAlCL,CAsCFwF,IAAK,CACHnS,KAAMkC,KAAMqZ,CAAAA,IADT,CAEHrb,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFL,CAtCH,CA2CFwE,MAAO,CACLnR,KAAMkC,KAAM6W,CAAAA,CADP,CAEL7Y,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFH,CA3CL,CA+CF2E,OAAQ,CACNtR,KAAMkC,KAAMqX,CAAAA,CADN,CAENrZ,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFF,CA/CN,CAmDF4E,MAAO,CACLvR,KAAMkC,KAAM0G,CAAAA,CADP,CAEL1I,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFH,CAnDL,CAuDF6E,SAAU,CACRxR,KAAMkC,KAAM8X,CAAAA,EADJ,CAER9Z,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFA,CAvDR,CA2DF8E,gBAAiB,CACfzR,KAAMkC,KAAMuY,CAAAA,CADG;AAEfva,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFO,CA3Df,CA+DF+E,qBAAsB,CACpB1R,KAAMkC,KAAMyY,CAAAA,CADQ,CAEpBza,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFY,CA/DpB,CAmEFgF,mBAAoB,CAClB3R,KAAMkC,KAAM2Y,CAAAA,CADM,CAElB3a,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFU,CAnElB,CAuEFiF,oBAAqB,CACnB5R,KAAMkC,KAAM4Y,CAAAA,GADO,CAEnB5a,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFW,CAvEnB,CA2EFkF,oBAAqB,CACnB7R,KAAMkC,KAAM8Y,CAAAA,CADO,CAEnB9a,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFW,CA3EnB,CA+EFmF,qBAAsB,CACpB9R,KAAMkC,KAAMgZ,CAAAA,CADQ,CAEpBhb,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFY,CA/EpB,CAmFFoF,cAAe,CACb/R,KAAMkC,KAAMkZ,CAAAA,EADC,CAEblb,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFK,CAnFb,CAuFFqF,sBAAuB,CACrBhS,KAAMkC,KAAM+K,CAAAA,CADS,CAErB/M,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFa,CAvFrB,CA2FFsF,UAAW,CACTjS,KAAMkC,KAAM8V,CAAAA,EADH,CAET9X,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFC,CA3FT,CADa,CAmGnBnH;YAAayb,CAAAA,GAAb,CAAmBC,IAAKrhB,CAAAA,KAAL,CAAWqhB,IAAKC,CAAAA,SAAL,CAAe3b,YAAa+E,CAAAA,EAA5B,CAAX,CACnB/E,aAAayb,CAAAA,GAAIpQ,CAAAA,MAAjB,CAA0B,CACxB7Q,KAAMkC,KAAMqL,CAAAA,CADY,CAExBrN,OAAQC,QAASwM,CAAAA,KAAMhM,CAAAA,CAFC,CAI1B6E,aAAayb,CAAAA,GAAIrQ,CAAAA,IAAjB,CAAwB,CACtB5Q,KAAMkC,KAAM8T,CAAAA,CADU,CAEtB9V,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFc,CAIxBnH,aAAayb,CAAAA,GAAI9P,CAAAA,KAAjB,CAAyB,CACvBnR,KAAMkC,KAAM+W,CAAAA,GADW,CAEvB/Y,OAAQC,QAASwM,CAAAA,KAAT,CAAe,EAAf,CAFe,CAIzBnH,aAAayb,CAAAA,GAAI3P,CAAAA,MAAjB,CAA0B,CACxBtR,KAAMkC,KAAMuX,CAAAA,GADY,CAExBvZ,OAAQC,QAASC,CAAAA,IAAT,CAAc,EAAd,CAFgB,CAM1BoF,aAAa4b,CAAAA,EAAb,CAAkBF,IAAKrhB,CAAAA,KAAL,CAAWqhB,IAAKC,CAAAA,SAAL,CAAe3b,YAAa+E,CAAAA,EAA5B,CAAX,CAClB/E,aAAa4b,CAAAA,EAAGvQ,CAAAA,MAAhB,CAAyB,CACvB7Q,KAAMkC,KAAM6Q,CAAAA,EADW,CAEvB7S,OAAQC,QAASC,CAAAA,IAAT,CAAc,EAAd,CAFe,CAIzBoF,aAAa4b,CAAAA,EAAGxQ,CAAAA,IAAhB,CAAuB,CACrB5Q,KAAMkC,KAAM6U,CAAAA,GADS,CAErB7W,OAAQC,QAASC,CAAAA,IAAT,CAAc,EAAd,CAFa,CAIvBoF;YAAa4b,CAAAA,EAAGpQ,CAAAA,WAAhB,CAA8B,CAC5BhR,KAAMkC,KAAMmW,CAAAA,IADgB,CAE5BnY,OAAQC,QAASC,CAAAA,IAAT,CAAc,EAAd,CAFoB,CAI9BoF,aAAa4b,CAAAA,EAAGjQ,CAAAA,KAAhB,CAAwB,CACtBnR,KAAMkC,KAAMiX,CAAAA,GADU,CAEtBjZ,OAAQC,QAASC,CAAAA,IAAT,CAAc,EAAd,CAFc,CAIxBoF,aAAa4b,CAAAA,EAAG9P,CAAAA,MAAhB,CAAyB,CACvBtR,KAAMkC,KAAMqO,CAAAA,GADW,CAEvBrQ,OAAQC,QAASoQ,CAAAA,GAAT,CAAa,EAAb,CAFe,CAIzB/K,aAAa4b,CAAAA,EAAG7P,CAAAA,KAAhB,CAAwB,CACtBvR,KAAMkC,KAAM4X,CAAAA,EADU,CAEtB5Z,OAAQC,QAASC,CAAAA,IAAT,CAAc,EAAd,CAFc,CAIxBoF,aAAa4b,CAAAA,EAAG5P,CAAAA,QAAhB,CAA2B,CACzBxR,KAAMkC,KAAM+X,CAAAA,GADa,CAEzB/Z,OAAQC,QAASC,CAAAA,IAAT,CAAc,EAAd,CAFiB,CAM3BoF,aAAaC,CAAAA,IAAb,CAAoByb,IAAKrhB,CAAAA,KAAL,CAAWqhB,IAAKC,CAAAA,SAAL,CAAe3b,YAAa+E,CAAAA,EAA5B,CAAX,CAEpB,KAAIP,kBAAoBxE,YAAaC,CAAAA,IAMrCnG,KAAK+hB,CAAAA,aAAL,CAAqBC,QAAS,CAACniB,IAAD,CAAO,CACnC,GAAI,CAAC,CAAA,CAAGH,OAAQ3B,CAAAA,cAAZ,EAA4BmI,YAA5B;AAA0CrG,IAA1C,CAAJ,CACE6K,iBAAA,CAAoBxE,YAAA,CAAarG,IAAb,CADtB,KAGE,MAAUI,MAAJ,CAAU,cAAV,CAA2BJ,IAA3B,CAAkC,gCAAlC,CAAqEtC,MAAOc,CAAAA,IAAP,CAAY6H,YAAZ,CAA0B+b,CAAAA,IAA1B,CAA+B,IAA/B,CAArE,CAAN,CAJiC,CAarCjiB,KAAKkiB,CAAAA,aAAL,CAAqBC,QAAS,EAAG,CAC/B,IAAKC,IAAIA,IAAT,GAAiBlc,aAAjB,CACE,GAAI,CAAC,CAAA,CAAGxG,OAAQ3B,CAAAA,cAAZ,EAA4BmI,YAA5B,CAA0Ckc,IAA1C,CAAJ,EACMlc,YAAA,CAAakc,IAAb,CADN,GAC6B1X,iBAD7B,CAEI,MAAO0X,KAJkB,CAejCpiB,KAAKqiB,CAAAA,cAAL,CAAsB,CACpB/d,UAAWA,QAAkB,CAACuI,CAAD,CAAI,CAC/B,MAAO,KAAIlK,UAAJ,CAAekK,CAAf,CAAmB,EAAnB,CADwB,CADb,CAIpBrI,SAAUA,QAAiB,CAACqI,CAAD,CAAI,CAC7B,MAAO,KAAItI,SAAJ,CAAcsI,CAAd,CADsB,CAJX,CAOpBxI,QAASA,QAAgB,CAACwI,CAAD,CAAI,CAC3B,MAAOA,EADoB,CAPT,CAUpB/K,OAAQA,QAAe,CAAC+K,CAAD,CAAI,CACzB,MAAOA,EADkB,CAVP,CAuBtB7M,KAAK4G,CAAAA,mBAAL;AAA2B0b,QAAS,CAAC5d,IAAD,CAAO,CACzC,GAAI,CAAC1E,IAAKqiB,CAAAA,cAAL,CAAoB3d,IAApB,CAAL,CACE,KAAM,KAAIrE,SAAJ,CAAc,oBAAd,CAAqCqE,IAArC,CAA4C,GAA5C,CAAN,CAGF,MAAO1E,KAAKqiB,CAAAA,cAAL,CAAoB3d,IAApB,CALkC,CAS3C,KAAK6d,IAAIA,KAAT,GAAkB3f,MAAlB,CACM,CAAC,CAAA,CAAGlD,OAAQ3B,CAAAA,cAAZ,EAA4B6E,KAA5B,CAAmC2f,KAAnC,CAAJ,GACM7hB,EACJ,CADWkC,KAAA,CAAM2f,KAAN,CACX,CAAA7hB,EAAKD,CAAAA,UAAL,CAAkBC,EAAKuF,CAAAA,IAAKxF,CAAAA,UAF9B,CAOF,KAAK+hB,IAAIA,MAAT,GAAmBpG,KAAnB,CACE,GAAI,CAAC,CAAA,CAAG1c,OAAQ3B,CAAAA,cAAZ,EAA4Bqe,IAA5B,CAAqCoG,MAArC,CAAJ,CAAkD,CAC5CC,KAAAA,CAAS7f,KAAA,CAAMwZ,IAAA,CAAQoG,MAAR,CAAN,CACTE,GAAAA,CAAQ,EAEZ,KAAKC,IAAIA,KAAT,GAAkBF,MAAlB,CACM,CAAC,CAAA,CAAG/iB,OAAQ3B,CAAAA,cAAZ,EAA4B0kB,KAA5B,CAAoCE,KAApC,CAAJ,GACED,EAAA,CAAMC,KAAN,CADF,CACiBF,KAAA,CAAOE,KAAP,CADjB,CAKFD,GAAM7iB,CAAAA,IAAN,CAAa2iB,MACb5f,MAAA,CAAM4f,MAAN,CAAA,CAAgBE,EAXgC,CAqBpD1iB,IAAKwF,CAAAA,YAAL,CAAoBod,QAAqB,CAACvhB,CAAD,CAAI,CAC3C,MAAO,YAAawhB,CAAAA,IAAb,CAAkBxhB,CAAlB,CADoC,CAqC7CrB;IAAK8iB,CAAAA,UAAL,CAAkBC,QAAS,CAAC9lB,GAAD,CAAM6H,OAAN,CAAe,CACxC,GAAqB,QAArB,GAAI9H,OAAA,CAAQC,GAAR,CAAJ,CACE,KAAM,KAAIoD,SAAJ,CAAc,2DAAd,CAAN,CAIF,GAAIyE,OAAJ,EAAeA,OAAQke,CAAAA,QAAvB,CACE,IAAKC,IAAIA,KAAT,GAAkBhmB,IAAlB,CAKE,GAJI,CAAC,CAAA,CAAGyC,OAAQ3B,CAAAA,cAAZ,EAA4Bd,GAA5B,CAAiCgmB,KAAjC,CAIWC,EAHbljB,IAAKmjB,CAAAA,UAAL,CAAgBF,KAAhB,CAGaC,CAAXjmB,GAAA,CAAIgmB,KAAJ,CAAWC,CAAAA,OAAf,CACE,IAASxlB,OAAT,CAAa,CAAb,CAAgBA,OAAhB,CAAoBT,GAAA,CAAIgmB,KAAJ,CAAWC,CAAAA,OAAQtlB,CAAAA,MAAvC,CAA+CF,OAAA,EAA/C,CACEsC,IAAKmjB,CAAAA,UAAL,CAAgBlmB,GAAA,CAAIgmB,KAAJ,CAAWC,CAAAA,OAAX,CAAmBxlB,OAAnB,CAAhB,CAOR,KAAI0lB,QAAJ,CAESC,KAAT,KAASA,KAAT,GAAkBpmB,IAAlB,CACM,CAAC,CAAA,CAAGyC,OAAQ3B,CAAAA,cAAZ,EAA4Bd,GAA5B,CAAiComB,KAAjC,CAAJ,GACED,QADF,CACapjB,IAAKsjB,CAAAA,gBAAL,CAAsBD,KAAtB,CAA6BpmB,GAAA,CAAIomB,KAAJ,CAA7B,CADb,CAKF;MAAOD,SA7BiC,CA6D1CpjB,KAAKsjB,CAAAA,gBAAL,CAAwBC,QAAS,CAAC1jB,IAAD,CAAO5C,GAAP,CAAY6H,OAAZ,CAAqB,CACpD,GAAmB,WAAnB,GAAI,MAAO7H,IAAX,EAA0C,IAA1C,GAAkCA,GAAlC,CACEA,GAAA,CAAM,EAGR,IAAoB,QAApB,GAAI,MAAO4C,KAAX,CACE,KAAM,KAAIQ,SAAJ,CAAc,iEAAd,CAAN,CAIF,GAAI,CAAC,CAAA,CAAGX,OAAQ3B,CAAAA,cAAZ,EAA4B6E,KAA5B,CAAmC/C,IAAnC,CAAJ,CACE,KAAUI,MAAJ,CAAU,sBAAV,CAAmCJ,IAAnC,CAA0C,yCAA1C,CAAN,CAxGF,IAASnC,OAAT,CAAa,CAAb,CAAgBA,OAAhB,CA4GsBmC,IA5GGjC,CAAAA,MAAzB,CAAiCF,OAAA,EAAjC,CAAsC,CACpC2D,UAAA,CA2GoBxB,IA3GX6B,CAAAA,MAAL,CAAYhE,OAAZ,CAEJ,IAAU,CAAV,GAAIA,OAAJ,EAAe,CAACsC,IAAKwF,CAAAA,YAAL,CAAkBnE,UAAlB,CAAhB,CACE,KAAUpB,MAAJ,CAAU,wDAAV;AAwGYJ,IAxGZ,CAA4E,GAA5E,CAAN,CAGF,GAAQ,CAAR,CAAInC,OAAJ,EAAe,CAAAsC,IAAKwF,CAAAA,YAAL,CAAkBnE,UAAlB,CAAf,EAAuC,CAAAE,OAAA,CAAQF,UAAR,CAAvC,CACE,KAAUpB,MAAJ,CAAU,iEAAV,CAoGYJ,IApGZ,CAAqF,GAArF,CAAN,CARkC,CA6GtC,IAAI2jB,QAAU,IAEVN,QAAAA,CAAU,EACd,KAAIhc,OAAS,CAAb,CACIuc,UAIJ,IAAIxmB,GAAJ,EAAwB,MAAxB,GAAWA,GAAIyH,CAAAA,IAAf,CACE8e,OAAA,CAAUvmB,GAAIoJ,CAAAA,KAAJ,EADZ,KAEO,IAAmB,QAAnB,GAAI,MAAOpJ,IAAX,CACO,EAAZ,GAAIA,GAAJ,GACEwmB,UADF,CACexmB,GADf,CADK,KAIA,IAAqB,QAArB,GAAID,OAAA,CAAQC,GAAR,CAAJ,CAA+B,CACpCwmB,UAAA,CAAaxmB,GAAIwmB,CAAAA,UACjB,KAAAlc,SAAWtK,GAAIsK,CAAAA,QACfL,OAAA,CAASjK,GAAIiK,CAAAA,MACb,KAAAwc,SAAWzmB,GAAIymB,CAAAA,QAEXzmB,IAAIimB,CAAAA,OAAR,GACEA,OADF,CACYjmB,GAAIimB,CAAAA,OAAQ5Y,CAAAA,OAAZ,EADZ,CANoC,CAA/B,IAUL,MAAM,KAAIjK,SAAJ,CAAc,sBAAd;AAAuCR,IAAvC,CAA8C,UAA9C,CAA2D5C,GAAI2I,CAAAA,QAAJ,EAA3D,CAA4E,6CAA5E,CAAN,CAGF,GAAIsd,OAAJ,CACE,IAASxlB,GAAT,CAAa,CAAb,CAAgBA,GAAhB,CAAoBwlB,OAAQtlB,CAAAA,MAA5B,CAAoCF,GAAA,EAApC,CACE,GAAI,CAAC,CAAA,CAAGgC,OAAQ3B,CAAAA,cAAZ,EAA4B6E,KAA5B,CAAmCsgB,OAAA,CAAQxlB,GAAR,CAAnC,CAAJ,CACE,KAAUuC,MAAJ,CAAU,uBAAV,CAAoCijB,OAAA,CAAQxlB,GAAR,CAApC,CAAiD,yCAAjD,CAAN,CAKN,GAAI+lB,UAAJ,EAAwC,QAAxC,GAAkB,MAAOA,WAAzB,EAAoD,CAACD,OAArD,CACE,GAAI,CACFA,OAAA,CAAUxjB,IAAKO,CAAAA,KAAL,CAAWkjB,UAAX,CAAuB,CAC/Brd,aAAc,CAAA,CADiB,CAAvB,CADR,CAIF,MAAOud,EAAP,CAAW,CAEX,KADAA,GAAGC,CAAAA,OACGD,CADO,yBACPA,CADmC9jB,IACnC8jB,CAD0C,UAC1CA,CADuDF,UACvDE,CADoE,KACpEA,CAD4EA,EAAGC,CAAAA,OAC/ED,CAAAA,EAAN,CAFW,CALf,IASWF,WAAJ,EAAsC,MAAtC,GAAkBA,UAAW/e,CAAAA,IAA7B;CACL8e,OADK,CACKC,UAAWpd,CAAAA,KAAX,EADL,CAIP6c,QAAA,CAAUA,OAAV,EAAqB,EACrBhc,OAAA,CAASA,MAAT,EAAmB,CAGjBK,SAAA,CADEA,QAAJ,EAAgBA,QAASsc,CAAAA,WAAzB,CACahjB,QAAA,CAAS0G,QAASsc,CAAAA,WAAT,EAAT,CADb,EACiDhjB,QAASC,CAAAA,IAD1D,CAGaD,QAASC,CAAAA,IAOtB,IAAK0iB,OAAL,CAwCO,CACLM,QAAA,CAAU,CACRjkB,KAAMA,IADE,CAERb,MAAOwkB,OAAQxkB,CAAAA,KAFP,CAGRyB,WAAY+iB,OAAQ/iB,CAAAA,UAAW8F,CAAAA,KAAnB,CAAyB,CAAzB,CAHJ,CAIRgB,SAAUA,QAJF,CAKRL,OAAQA,MALA,CAQN6c,OAAAA,CAAW,CAAA,CAEf,KAAKC,IAAIA,GAAT,GAAgB3hB,WAAhB,CACE,GAAI,CAAC,CAAA,CAAG3C,OAAQ3B,CAAAA,cAAZ,EAA4BsE,UAA5B,CAAwC2hB,GAAxC,CAAJ,CAAkD,CAC5CC,UAAAA,CAAQ,CAAA,CAEZ,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBljB,eAAgBpD,CAAAA,MAApC,CAA4CsmB,CAAA,EAA5C,CACE,GAAoF,KAApF,CAAI7gB,IAAKW,CAAAA,GAAL,EAAU8f,QAAQrjB,CAAAA,UAAR,CAAmByjB,CAAnB,CAAV,EAAmC,CAAnC,GAAyC7hB,UAAA,CAAW2hB,GAAX,CAAgBvjB,CAAAA,UAAhB,CAA2ByjB,CAA3B,CAAzC;AAA0E,CAA1E,EAAJ,CAA2F,CACzFD,UAAA,CAAQ,CAAA,CACR,MAFyF,CAM7F,GAAIA,UAAJ,CAAW,CACTF,MAAA,CAAW,CAAA,CACXD,SAAQ7d,CAAAA,IAAR,CAAe5D,UAAA,CAAW2hB,GAAX,CACf,MAHS,CAVqC,CAkB/CD,MAAL,GACEL,QAYA,CAZWA,QAYX,EAZuB7jB,IAYvB,CAZ8B,QAY9B,CATIskB,GASJ,CATmB,CACjB1jB,WAAY+iB,OAAQ/iB,CAAAA,UAAW8F,CAAAA,KAAnB,CAAyB,CAAzB,CADK,CASnB,CANA4d,GAAarmB,CAAAA,GAMb,CANmB4lB,QAMnB,CALArhB,UAAA,CAAWqhB,QAAX,CAKA,CALuBS,GAKvB,CAJAzZ,iBAAA,CAAkBgZ,QAAlB,CAIA,CAJ8B,CAC5BhjB,KAAMojB,QADsB,CAE5BljB,OAAQC,QAASC,CAAAA,IAAT,CAAc,EAAd,CAFoB,CAI9B,CAAAgjB,QAAQ7d,CAAAA,IAAR,CAAe5D,UAAA,CAAWqhB,QAAX,CAbjB,CA9BK,CAxCP,IAAc,CAEZA,QAAA,CAAWA,QAAX,EAAuB7jB,IAAvB,CAA8B,QAE9B,IAAyC,CAAzC,EAAImB,eAAgBojB,CAAAA,OAAhB,CAAwBV,QAAxB,CAAJ,CACE,KAAUzjB,MAAJ,CAAU,+BAAV,CAA4CJ,IAA5C,CAAmD,yEAAnD,CAAN;AAGFmB,eAAgBpC,CAAAA,IAAhB,CAAqB8kB,QAArB,CAEA,KAAS1H,CAAT,GAAc3Z,WAAd,CACM,CAAC,CAAA,CAAG3C,OAAQ3B,CAAAA,cAAZ,EAA4BsE,UAA5B,CAAwC2Z,CAAxC,CAAJ,GACE3Z,UAAA,CAAW2Z,CAAX,CAAcvb,CAAAA,UAAd,CAAyBO,eAAgBpD,CAAAA,MAAzC,CAAkD,CAAlD,CADF,CACyD,CADzD,CAMEymB,IAAAA,CAAc,CAChB5jB,WAAY,EADI,CAIlB,KAAS6jB,OAAT,CAAe,CAAf,CAAkBA,OAAlB,CAAwBtjB,eAAgBpD,CAAAA,MAAxC,CAAgD0mB,OAAA,EAAhD,CACED,GAAY5jB,CAAAA,UAAZ,CAAuB6jB,OAAvB,CAAA,CAA8B,CAGhCD,IAAY5jB,CAAAA,UAAZ,CAAuBO,eAAgBpD,CAAAA,MAAvC,CAAgD,CAAhD,CAAA,CAAqD,CACrDymB,IAAYvmB,CAAAA,GAAZ,CAAkB4lB,QAClBrhB,WAAA,CAAWqhB,QAAX,CAAA,CAAuBW,GACvBP,SAAA,CAAU,CACRjkB,KAAMA,IADE,CAERb,MAAO,CAFC,CAGRyB,WAAY4B,UAAA,CAAWqhB,QAAX,CAAqBjjB,CAAAA,UAAW8F,CAAAA,KAAhC,CAAsC,CAAtC,CAHJ,CAIRgB,SAAUA,QAJF,CAKRL,OAAQA,MALA,CAMRjB,KAAM5D,UAAA,CAAWqhB,QAAX,CANE,CAQVhZ,kBAAA,CAAkBgZ,QAAlB,CAAA;AAA8B,CAC5BhjB,KAAMojB,QADsB,CAE5BljB,OAAQC,QAASC,CAAAA,IAAT,CAAc,EAAd,CAFoB,CApClB,CAuFdd,IAAK4C,CAAAA,KAAL,CAAW/C,IAAX,CAAA,CAAmBikB,QAEnB,KAASS,QAAT,CAAe,CAAf,CAAkBA,QAAlB,CAAwBrB,OAAQtlB,CAAAA,MAAhC,CAAwC2mB,QAAA,EAAxC,CAA+C,CACzCC,GAAAA,CAAYtB,OAAA,CAAQqB,QAAR,CACZE,QAAAA,CAAS,EAEb,KAAKC,IAAIA,KAAT,GAAkBZ,SAAlB,CACM,CAAC,CAAA,CAAGpkB,OAAQ3B,CAAAA,cAAZ,EAA4B+lB,QAA5B,CAAqCY,KAArC,CAAJ,GACED,OAAA,CAAOC,KAAP,CADF,CACkBZ,QAAA,CAAQY,KAAR,CADlB,CAKFD,QAAO5kB,CAAAA,IAAP,CAAc2kB,GACdxkB,KAAK4C,CAAAA,KAAL,CAAW4hB,GAAX,CAAA,CAAwBC,OAXqB,CAgB/C,OAAO3e,SAAU6e,CAAAA,KACjB,OAAO,KAAI3kB,IAAJ,CAAS,IAAT,CAAeH,IAAf,CAvL6C,CA0LtDG,KAAKmjB,CAAAA,UAAL,CAAkByB,QAAS,CAAC/kB,IAAD,CAAO,CAChC,OAAOG,IAAK4C,CAAAA,KAAL,CAAW/C,IAAX,CADyB,CAKlCG,KAAKa,CAAAA,QAAL,CAAgBA,QAChBb,KAAKgB,CAAAA,eAAL,CAAuBA,eACvBhB,KAAKqC,CAAAA,UAAL,CAAkBA,UAClBrC,KAAKkG,CAAAA,YAAL;AAAoBA,YACpBlG,KAAK4C,CAAAA,KAAL,CAAaA,KACb,OAAO5C,KAl4HsF,CAA1D,CAm4HlC,CACD6kB,QAAS,CAAA,CADR,CAn4HkC,CAs4HrC9nB,QAAQsC,CAAAA,eAAR,CAA0BA,OAt6HoF;",
"sources":["node_modules/mathjs/lib/cjs/type/unit/Unit.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$type$unit$Unit\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createUnitClass = void 0;\n\nvar _is = require(\"../../utils/is.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _function = require(\"../../utils/function.js\");\n\nvar _string = require(\"../../utils/string.js\");\n\nvar _object = require(\"../../utils/object.js\");\n\nvar _constants = require(\"../../utils/bignumber/constants.js\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar name = 'Unit';\nvar dependencies = ['?on', 'config', 'addScalar', 'subtract', 'multiplyScalar', 'divideScalar', 'pow', 'abs', 'fix', 'round', 'equal', 'isNumeric', 'format', 'number', 'Complex', 'BigNumber', 'Fraction'];\nvar createUnitClass = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var on = _ref.on,\n      config = _ref.config,\n      addScalar = _ref.addScalar,\n      subtract = _ref.subtract,\n      multiplyScalar = _ref.multiplyScalar,\n      divideScalar = _ref.divideScalar,\n      pow = _ref.pow,\n      abs = _ref.abs,\n      fix = _ref.fix,\n      round = _ref.round,\n      equal = _ref.equal,\n      isNumeric = _ref.isNumeric,\n      format = _ref.format,\n      number = _ref.number,\n      Complex = _ref.Complex,\n      _BigNumber = _ref.BigNumber,\n      _Fraction = _ref.Fraction;\n  var toNumber = number;\n  /**\n   * A unit can be constructed in the following ways:\n   *\n   *     const a = new Unit(value, name)\n   *     const b = new Unit(null, name)\n   *     const c = Unit.parse(str)\n   *\n   * Example usage:\n   *\n   *     const a = new Unit(5, 'cm')               // 50 mm\n   *     const b = Unit.parse('23 kg')             // 23 kg\n   *     const c = math.in(a, new Unit(null, 'm')  // 0.05 m\n   *     const d = new Unit(9.81, \"m/s^2\")         // 9.81 m/s^2\n   *\n   * @class Unit\n   * @constructor Unit\n   * @param {number | BigNumber | Fraction | Complex | boolean} [value]  A value like 5.2\n   * @param {string} [name]   A unit name like \"cm\" or \"inch\", or a derived unit of the form: \"u1[^ex1] [u2[^ex2] ...] [/ u3[^ex3] [u4[^ex4]]]\", such as \"kg m^2/s^2\", where each unit appearing after the forward slash is taken to be in the denominator. \"kg m^2 s^-2\" is a synonym and is also acceptable. Any of the units can include a prefix.\n   */\n\n  function Unit(value, name) {\n    if (!(this instanceof Unit)) {\n      throw new Error('Constructor must be called with the new operator');\n    }\n\n    if (!(value === null || value === undefined || isNumeric(value) || (0, _is.isComplex)(value))) {\n      throw new TypeError('First parameter in Unit constructor must be number, BigNumber, Fraction, Complex, or undefined');\n    }\n\n    if (name !== undefined && (typeof name !== 'string' || name === '')) {\n      throw new TypeError('Second parameter in Unit constructor must be a string');\n    }\n\n    if (name !== undefined) {\n      var u = Unit.parse(name);\n      this.units = u.units;\n      this.dimensions = u.dimensions;\n    } else {\n      this.units = [{\n        unit: UNIT_NONE,\n        prefix: PREFIXES.NONE,\n        // link to a list with supported prefixes\n        power: 0\n      }];\n      this.dimensions = [];\n\n      for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n        this.dimensions[i] = 0;\n      }\n    }\n\n    this.value = value !== undefined && value !== null ? this._normalize(value) : null;\n    this.fixPrefix = false; // if true, function format will not search for the\n    // best prefix but leave it as initially provided.\n    // fixPrefix is set true by the method Unit.to\n    // The justification behind this is that if the constructor is explicitly called,\n    // the caller wishes the units to be returned exactly as he supplied.\n\n    this.skipAutomaticSimplification = true;\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Unit.prototype.type = 'Unit';\n  Unit.prototype.isUnit = true; // private variables and functions for the Unit parser\n\n  var text, index, c;\n\n  function skipWhitespace() {\n    while (c === ' ' || c === '\\t') {\n      next();\n    }\n  }\n\n  function isDigitDot(c) {\n    return c >= '0' && c <= '9' || c === '.';\n  }\n\n  function isDigit(c) {\n    return c >= '0' && c <= '9';\n  }\n\n  function next() {\n    index++;\n    c = text.charAt(index);\n  }\n\n  function revert(oldIndex) {\n    index = oldIndex;\n    c = text.charAt(index);\n  }\n\n  function parseNumber() {\n    var number = '';\n    var oldIndex = index;\n\n    if (c === '+') {\n      next();\n    } else if (c === '-') {\n      number += c;\n      next();\n    }\n\n    if (!isDigitDot(c)) {\n      // a + or - must be followed by a digit\n      revert(oldIndex);\n      return null;\n    } // get number, can have a single dot\n\n\n    if (c === '.') {\n      number += c;\n      next();\n\n      if (!isDigit(c)) {\n        // this is no legal number, it is just a dot\n        revert(oldIndex);\n        return null;\n      }\n    } else {\n      while (isDigit(c)) {\n        number += c;\n        next();\n      }\n\n      if (c === '.') {\n        number += c;\n        next();\n      }\n    }\n\n    while (isDigit(c)) {\n      number += c;\n      next();\n    } // check for exponential notation like \"2.3e-4\" or \"1.23e50\"\n\n\n    if (c === 'E' || c === 'e') {\n      // The grammar branches here. This could either be part of an exponent or the start of a unit that begins with the letter e, such as \"4exabytes\"\n      var tentativeNumber = '';\n      var tentativeIndex = index;\n      tentativeNumber += c;\n      next();\n\n      if (c === '+' || c === '-') {\n        tentativeNumber += c;\n        next();\n      } // Scientific notation MUST be followed by an exponent (otherwise we assume it is not scientific notation)\n\n\n      if (!isDigit(c)) {\n        // The e or E must belong to something else, so return the number without the e or E.\n        revert(tentativeIndex);\n        return number;\n      } // We can now safely say that this is scientific notation.\n\n\n      number = number + tentativeNumber;\n\n      while (isDigit(c)) {\n        number += c;\n        next();\n      }\n    }\n\n    return number;\n  }\n\n  function parseUnit() {\n    var unitName = ''; // Alphanumeric characters only; matches [a-zA-Z0-9]\n\n    while (isDigit(c) || Unit.isValidAlpha(c)) {\n      unitName += c;\n      next();\n    } // Must begin with [a-zA-Z]\n\n\n    var firstC = unitName.charAt(0);\n\n    if (Unit.isValidAlpha(firstC)) {\n      return unitName;\n    } else {\n      return null;\n    }\n  }\n\n  function parseCharacter(toFind) {\n    if (c === toFind) {\n      next();\n      return toFind;\n    } else {\n      return null;\n    }\n  }\n  /**\n   * Parse a string into a unit. The value of the unit is parsed as number,\n   * BigNumber, or Fraction depending on the math.js config setting `number`.\n   *\n   * Throws an exception if the provided string does not contain a valid unit or\n   * cannot be parsed.\n   * @memberof Unit\n   * @param {string} str        A string like \"5.2 inch\", \"4e2 cm/s^2\"\n   * @return {Unit} unit\n   */\n\n\n  Unit.parse = function (str, options) {\n    options = options || {};\n    text = str;\n    index = -1;\n    c = '';\n\n    if (typeof text !== 'string') {\n      throw new TypeError('Invalid argument in Unit.parse, string expected');\n    }\n\n    var unit = new Unit();\n    unit.units = [];\n    var powerMultiplierCurrent = 1;\n    var expectingUnit = false; // A unit should follow this pattern:\n    // [number] ...[ [*/] unit[^number] ]\n    // unit[^number] ... [ [*/] unit[^number] ]\n    // Rules:\n    // number is any floating point number.\n    // unit is any alphanumeric string beginning with an alpha. Units with names like e3 should be avoided because they look like the exponent of a floating point number!\n    // The string may optionally begin with a number.\n    // Each unit may optionally be followed by ^number.\n    // Whitespace or a forward slash is recommended between consecutive units, although the following technically is parseable:\n    //   2m^2kg/s^2\n    // it is not good form. If a unit starts with e, then it could be confused as a floating point number:\n    //   4erg\n\n    next();\n    skipWhitespace(); // Optional number at the start of the string\n\n    var valueStr = parseNumber();\n    var value = null;\n\n    if (valueStr) {\n      if (config.number === 'BigNumber') {\n        value = new _BigNumber(valueStr);\n      } else if (config.number === 'Fraction') {\n        try {\n          // not all numbers can be turned in Fractions, for example very small numbers not\n          value = new _Fraction(valueStr);\n        } catch (err) {\n          value = parseFloat(valueStr);\n        }\n      } else {\n        // number\n        value = parseFloat(valueStr);\n      }\n\n      skipWhitespace(); // Whitespace is not required here\n      // handle multiplication or division right after the value, like '1/s'\n\n      if (parseCharacter('*')) {\n        powerMultiplierCurrent = 1;\n        expectingUnit = true;\n      } else if (parseCharacter('/')) {\n        powerMultiplierCurrent = -1;\n        expectingUnit = true;\n      }\n    } // Stack to keep track of powerMultipliers applied to each parentheses group\n\n\n    var powerMultiplierStack = []; // Running product of all elements in powerMultiplierStack\n\n    var powerMultiplierStackProduct = 1;\n\n    while (true) {\n      skipWhitespace(); // Check for and consume opening parentheses, pushing powerMultiplierCurrent to the stack\n      // A '(' will always appear directly before a unit.\n\n      while (c === '(') {\n        powerMultiplierStack.push(powerMultiplierCurrent);\n        powerMultiplierStackProduct *= powerMultiplierCurrent;\n        powerMultiplierCurrent = 1;\n        next();\n        skipWhitespace();\n      } // Is there something here?\n\n\n      var uStr = void 0;\n\n      if (c) {\n        var oldC = c;\n        uStr = parseUnit();\n\n        if (uStr === null) {\n          throw new SyntaxError('Unexpected \"' + oldC + '\" in \"' + text + '\" at index ' + index.toString());\n        }\n      } else {\n        // End of input.\n        break;\n      } // Verify the unit exists and get the prefix (if any)\n\n\n      var res = _findUnit(uStr);\n\n      if (res === null) {\n        // Unit not found.\n        throw new SyntaxError('Unit \"' + uStr + '\" not found.');\n      }\n\n      var power = powerMultiplierCurrent * powerMultiplierStackProduct; // Is there a \"^ number\"?\n\n      skipWhitespace();\n\n      if (parseCharacter('^')) {\n        skipWhitespace();\n        var p = parseNumber();\n\n        if (p === null) {\n          // No valid number found for the power!\n          throw new SyntaxError('In \"' + str + '\", \"^\" must be followed by a floating-point number');\n        }\n\n        power *= p;\n      } // Add the unit to the list\n\n\n      unit.units.push({\n        unit: res.unit,\n        prefix: res.prefix,\n        power: power\n      });\n\n      for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n        unit.dimensions[i] += (res.unit.dimensions[i] || 0) * power;\n      } // Check for and consume closing parentheses, popping from the stack.\n      // A ')' will always follow a unit.\n\n\n      skipWhitespace();\n\n      while (c === ')') {\n        if (powerMultiplierStack.length === 0) {\n          throw new SyntaxError('Unmatched \")\" in \"' + text + '\" at index ' + index.toString());\n        }\n\n        powerMultiplierStackProduct /= powerMultiplierStack.pop();\n        next();\n        skipWhitespace();\n      } // \"*\" and \"/\" should mean we are expecting something to come next.\n      // Is there a forward slash? If so, negate powerMultiplierCurrent. The next unit or paren group is in the denominator.\n\n\n      expectingUnit = false;\n\n      if (parseCharacter('*')) {\n        // explicit multiplication\n        powerMultiplierCurrent = 1;\n        expectingUnit = true;\n      } else if (parseCharacter('/')) {\n        // division\n        powerMultiplierCurrent = -1;\n        expectingUnit = true;\n      } else {\n        // implicit multiplication\n        powerMultiplierCurrent = 1;\n      } // Replace the unit into the auto unit system\n\n\n      if (res.unit.base) {\n        var baseDim = res.unit.base.key;\n        UNIT_SYSTEMS.auto[baseDim] = {\n          unit: res.unit,\n          prefix: res.prefix\n        };\n      }\n    } // Has the string been entirely consumed?\n\n\n    skipWhitespace();\n\n    if (c) {\n      throw new SyntaxError('Could not parse: \"' + str + '\"');\n    } // Is there a trailing slash?\n\n\n    if (expectingUnit) {\n      throw new SyntaxError('Trailing characters: \"' + str + '\"');\n    } // Is the parentheses stack empty?\n\n\n    if (powerMultiplierStack.length !== 0) {\n      throw new SyntaxError('Unmatched \"(\" in \"' + text + '\"');\n    } // Are there any units at all?\n\n\n    if (unit.units.length === 0 && !options.allowNoUnits) {\n      throw new SyntaxError('\"' + str + '\" contains no units');\n    }\n\n    unit.value = value !== undefined ? unit._normalize(value) : null;\n    return unit;\n  };\n  /**\n   * create a copy of this unit\n   * @memberof Unit\n   * @return {Unit} Returns a cloned version of the unit\n   */\n\n\n  Unit.prototype.clone = function () {\n    var unit = new Unit();\n    unit.fixPrefix = this.fixPrefix;\n    unit.skipAutomaticSimplification = this.skipAutomaticSimplification;\n    unit.value = (0, _object.clone)(this.value);\n    unit.dimensions = this.dimensions.slice(0);\n    unit.units = [];\n\n    for (var i = 0; i < this.units.length; i++) {\n      unit.units[i] = {};\n\n      for (var p in this.units[i]) {\n        if ((0, _object.hasOwnProperty)(this.units[i], p)) {\n          unit.units[i][p] = this.units[i][p];\n        }\n      }\n    }\n\n    return unit;\n  };\n  /**\n   * Return whether the unit is derived (such as m/s, or cm^2, but not N)\n   * @memberof Unit\n   * @return {boolean} True if the unit is derived\n   */\n\n\n  Unit.prototype._isDerived = function () {\n    if (this.units.length === 0) {\n      return false;\n    }\n\n    return this.units.length > 1 || Math.abs(this.units[0].power - 1.0) > 1e-15;\n  };\n  /**\n   * Normalize a value, based on its currently set unit(s)\n   * @memberof Unit\n   * @param {number | BigNumber | Fraction | boolean} value\n   * @return {number | BigNumber | Fraction | boolean} normalized value\n   * @private\n   */\n\n\n  Unit.prototype._normalize = function (value) {\n    var unitValue, unitOffset, unitPower, unitPrefixValue;\n    var convert;\n\n    if (value === null || value === undefined || this.units.length === 0) {\n      return value;\n    } else if (this._isDerived()) {\n      // This is a derived unit, so do not apply offsets.\n      // For example, with J kg^-1 degC^-1 you would NOT want to apply the offset.\n      var res = value;\n      convert = Unit._getNumberConverter((0, _is.typeOf)(value)); // convert to Fraction or BigNumber if needed\n\n      for (var i = 0; i < this.units.length; i++) {\n        unitValue = convert(this.units[i].unit.value);\n        unitPrefixValue = convert(this.units[i].prefix.value);\n        unitPower = convert(this.units[i].power);\n        res = multiplyScalar(res, pow(multiplyScalar(unitValue, unitPrefixValue), unitPower));\n      }\n\n      return res;\n    } else {\n      // This is a single unit of power 1, like kg or degC\n      convert = Unit._getNumberConverter((0, _is.typeOf)(value)); // convert to Fraction or BigNumber if needed\n\n      unitValue = convert(this.units[0].unit.value);\n      unitOffset = convert(this.units[0].unit.offset);\n      unitPrefixValue = convert(this.units[0].prefix.value);\n      return multiplyScalar(addScalar(value, unitOffset), multiplyScalar(unitValue, unitPrefixValue));\n    }\n  };\n  /**\n   * Denormalize a value, based on its currently set unit(s)\n   * @memberof Unit\n   * @param {number} value\n   * @param {number} [prefixValue]    Optional prefix value to be used (ignored if this is a derived unit)\n   * @return {number} denormalized value\n   * @private\n   */\n\n\n  Unit.prototype._denormalize = function (value, prefixValue) {\n    var unitValue, unitOffset, unitPower, unitPrefixValue;\n    var convert;\n\n    if (value === null || value === undefined || this.units.length === 0) {\n      return value;\n    } else if (this._isDerived()) {\n      // This is a derived unit, so do not apply offsets.\n      // For example, with J kg^-1 degC^-1 you would NOT want to apply the offset.\n      // Also, prefixValue is ignored--but we will still use the prefix value stored in each unit, since kg is usually preferable to g unless the user decides otherwise.\n      var res = value;\n      convert = Unit._getNumberConverter((0, _is.typeOf)(value)); // convert to Fraction or BigNumber if needed\n\n      for (var i = 0; i < this.units.length; i++) {\n        unitValue = convert(this.units[i].unit.value);\n        unitPrefixValue = convert(this.units[i].prefix.value);\n        unitPower = convert(this.units[i].power);\n        res = divideScalar(res, pow(multiplyScalar(unitValue, unitPrefixValue), unitPower));\n      }\n\n      return res;\n    } else {\n      // This is a single unit of power 1, like kg or degC\n      convert = Unit._getNumberConverter((0, _is.typeOf)(value)); // convert to Fraction or BigNumber if needed\n\n      unitValue = convert(this.units[0].unit.value);\n      unitPrefixValue = convert(this.units[0].prefix.value);\n      unitOffset = convert(this.units[0].unit.offset);\n\n      if (prefixValue === undefined || prefixValue === null) {\n        return subtract(divideScalar(divideScalar(value, unitValue), unitPrefixValue), unitOffset);\n      } else {\n        return subtract(divideScalar(divideScalar(value, unitValue), prefixValue), unitOffset);\n      }\n    }\n  };\n  /**\n   * Find a unit from a string\n   * @memberof Unit\n   * @param {string} str              A string like 'cm' or 'inch'\n   * @returns {Object | null} result  When found, an object with fields unit and\n   *                                  prefix is returned. Else, null is returned.\n   * @private\n   */\n\n\n  var _findUnit = (0, _function.memoize)(function (str) {\n    // First, match units names exactly. For example, a user could define 'mm' as 10^-4 m, which is silly, but then we would want 'mm' to match the user-defined unit.\n    if ((0, _object.hasOwnProperty)(UNITS, str)) {\n      var unit = UNITS[str];\n      var prefix = unit.prefixes[''];\n      return {\n        unit: unit,\n        prefix: prefix\n      };\n    }\n\n    for (var _name in UNITS) {\n      if ((0, _object.hasOwnProperty)(UNITS, _name)) {\n        if ((0, _string.endsWith)(str, _name)) {\n          var _unit = UNITS[_name];\n          var prefixLen = str.length - _name.length;\n          var prefixName = str.substring(0, prefixLen);\n\n          var _prefix = (0, _object.hasOwnProperty)(_unit.prefixes, prefixName) ? _unit.prefixes[prefixName] : undefined;\n\n          if (_prefix !== undefined) {\n            // store unit, prefix, and value\n            return {\n              unit: _unit,\n              prefix: _prefix\n            };\n          }\n        }\n      }\n    }\n\n    return null;\n  }, {\n    hasher: function hasher(args) {\n      return args[0];\n    },\n    limit: 100\n  });\n  /**\n   * Test if the given expression is a unit.\n   * The unit can have a prefix but cannot have a value.\n   * @memberof Unit\n   * @param {string} name   A string to be tested whether it is a value less unit.\n   *                        The unit can have prefix, like \"cm\"\n   * @return {boolean}      true if the given string is a unit\n   */\n\n\n  Unit.isValuelessUnit = function (name) {\n    return _findUnit(name) !== null;\n  };\n  /**\n   * check if this unit has given base unit\n   * If this unit is a derived unit, this will ALWAYS return false, since by definition base units are not derived.\n   * @memberof Unit\n   * @param {BASE_UNITS | string | undefined} base\n   */\n\n\n  Unit.prototype.hasBase = function (base) {\n    if (typeof base === 'string') {\n      base = BASE_UNITS[base];\n    }\n\n    if (!base) {\n      return false;\n    } // All dimensions must be the same\n\n\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      if (Math.abs((this.dimensions[i] || 0) - (base.dimensions[i] || 0)) > 1e-12) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Check if this unit has a base or bases equal to another base or bases\n   * For derived units, the exponent on each base also must match\n   * @memberof Unit\n   * @param {Unit} other\n   * @return {boolean} true if equal base\n   */\n\n\n  Unit.prototype.equalBase = function (other) {\n    // All dimensions must be the same\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      if (Math.abs((this.dimensions[i] || 0) - (other.dimensions[i] || 0)) > 1e-12) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Check if this unit equals another unit\n   * @memberof Unit\n   * @param {Unit} other\n   * @return {boolean} true if both units are equal\n   */\n\n\n  Unit.prototype.equals = function (other) {\n    return this.equalBase(other) && equal(this.value, other.value);\n  };\n  /**\n   * Multiply this unit with another one\n   * @memberof Unit\n   * @param {Unit} other\n   * @return {Unit} product of this unit and the other unit\n   */\n\n\n  Unit.prototype.multiply = function (other) {\n    var res = this.clone();\n\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      // Dimensions arrays may be of different lengths. Default to 0.\n      res.dimensions[i] = (this.dimensions[i] || 0) + (other.dimensions[i] || 0);\n    } // Append other's units list onto res\n\n\n    for (var _i = 0; _i < other.units.length; _i++) {\n      // Make a shallow copy of every unit\n      var inverted = _objectSpread({}, other.units[_i]);\n\n      res.units.push(inverted);\n    } // If at least one operand has a value, then the result should also have a value\n\n\n    if (this.value !== null || other.value !== null) {\n      var valThis = this.value === null ? this._normalize(1) : this.value;\n      var valOther = other.value === null ? other._normalize(1) : other.value;\n      res.value = multiplyScalar(valThis, valOther);\n    } else {\n      res.value = null;\n    }\n\n    res.skipAutomaticSimplification = false;\n    return getNumericIfUnitless(res);\n  };\n  /**\n   * Divide this unit by another one\n   * @memberof Unit\n   * @param {Unit} other\n   * @return {Unit} result of dividing this unit by the other unit\n   */\n\n\n  Unit.prototype.divide = function (other) {\n    var res = this.clone();\n\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      // Dimensions arrays may be of different lengths. Default to 0.\n      res.dimensions[i] = (this.dimensions[i] || 0) - (other.dimensions[i] || 0);\n    } // Invert and append other's units list onto res\n\n\n    for (var _i2 = 0; _i2 < other.units.length; _i2++) {\n      // Make a shallow copy of every unit\n      var inverted = _objectSpread(_objectSpread({}, other.units[_i2]), {}, {\n        power: -other.units[_i2].power\n      });\n\n      res.units.push(inverted);\n    } // If at least one operand has a value, the result should have a value\n\n\n    if (this.value !== null || other.value !== null) {\n      var valThis = this.value === null ? this._normalize(1) : this.value;\n      var valOther = other.value === null ? other._normalize(1) : other.value;\n      res.value = divideScalar(valThis, valOther);\n    } else {\n      res.value = null;\n    }\n\n    res.skipAutomaticSimplification = false;\n    return getNumericIfUnitless(res);\n  };\n  /**\n   * Calculate the power of a unit\n   * @memberof Unit\n   * @param {number | Fraction | BigNumber} p\n   * @returns {Unit}      The result: this^p\n   */\n\n\n  Unit.prototype.pow = function (p) {\n    var res = this.clone();\n\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      // Dimensions arrays may be of different lengths. Default to 0.\n      res.dimensions[i] = (this.dimensions[i] || 0) * p;\n    } // Adjust the power of each unit in the list\n\n\n    for (var _i3 = 0; _i3 < res.units.length; _i3++) {\n      res.units[_i3].power *= p;\n    }\n\n    if (res.value !== null) {\n      res.value = pow(res.value, p); // only allow numeric output, we don't want to return a Complex number\n      // if (!isNumeric(res.value)) {\n      //  res.value = NaN\n      // }\n      // Update: Complex supported now\n    } else {\n      res.value = null;\n    }\n\n    res.skipAutomaticSimplification = false;\n    return getNumericIfUnitless(res);\n  };\n  /**\n   * Return the numeric value of this unit if it is dimensionless, has a value, and config.predictable == false; or the original unit otherwise\n   * @param {Unit} unit\n   * @returns {number | Fraction | BigNumber | Unit}  The numeric value of the unit if conditions are met, or the original unit otherwise\n   */\n\n\n  function getNumericIfUnitless(unit) {\n    if (unit.equalBase(BASE_UNITS.NONE) && unit.value !== null && !config.predictable) {\n      return unit.value;\n    } else {\n      return unit;\n    }\n  }\n  /**\n   * Calculate the absolute value of a unit\n   * @memberof Unit\n   * @param {number | Fraction | BigNumber} x\n   * @returns {Unit}      The result: |x|, absolute value of x\n   */\n\n\n  Unit.prototype.abs = function () {\n    // This gives correct, but unexpected, results for units with an offset.\n    // For example, abs(-283.15 degC) = -263.15 degC !!!\n    var ret = this.clone();\n    ret.value = ret.value !== null ? abs(ret.value) : null;\n\n    for (var i in ret.units) {\n      if (ret.units[i].unit.name === 'VA' || ret.units[i].unit.name === 'VAR') {\n        ret.units[i].unit = UNITS.W;\n      }\n    }\n\n    return ret;\n  };\n  /**\n   * Convert the unit to a specific unit name.\n   * @memberof Unit\n   * @param {string | Unit} valuelessUnit   A unit without value. Can have prefix, like \"cm\"\n   * @returns {Unit} Returns a clone of the unit with a fixed prefix and unit.\n   */\n\n\n  Unit.prototype.to = function (valuelessUnit) {\n    var other;\n    var value = this.value === null ? this._normalize(1) : this.value;\n\n    if (typeof valuelessUnit === 'string') {\n      // other = new Unit(null, valuelessUnit)\n      other = Unit.parse(valuelessUnit);\n\n      if (!this.equalBase(other)) {\n        throw new Error(\"Units do not match ('\".concat(other.toString(), \"' != '\").concat(this.toString(), \"')\"));\n      }\n\n      if (other.value !== null) {\n        throw new Error('Cannot convert to a unit with a value');\n      }\n\n      other.value = (0, _object.clone)(value);\n      other.fixPrefix = true;\n      other.skipAutomaticSimplification = true;\n      return other;\n    } else if ((0, _is.isUnit)(valuelessUnit)) {\n      if (!this.equalBase(valuelessUnit)) {\n        throw new Error(\"Units do not match ('\".concat(valuelessUnit.toString(), \"' != '\").concat(this.toString(), \"')\"));\n      }\n\n      if (valuelessUnit.value !== null) {\n        throw new Error('Cannot convert to a unit with a value');\n      }\n\n      other = valuelessUnit.clone();\n      other.value = (0, _object.clone)(value);\n      other.fixPrefix = true;\n      other.skipAutomaticSimplification = true;\n      return other;\n    } else {\n      throw new Error('String or Unit expected as parameter');\n    }\n  };\n  /**\n   * Return the value of the unit when represented with given valueless unit\n   * @memberof Unit\n   * @param {string | Unit} valuelessUnit    For example 'cm' or 'inch'\n   * @return {number} Returns the unit value as number.\n   */\n  // TODO: deprecate Unit.toNumber? It's always better to use toNumeric\n\n\n  Unit.prototype.toNumber = function (valuelessUnit) {\n    return toNumber(this.toNumeric(valuelessUnit));\n  };\n  /**\n   * Return the value of the unit in the original numeric type\n   * @memberof Unit\n   * @param {string | Unit} valuelessUnit    For example 'cm' or 'inch'\n   * @return {number | BigNumber | Fraction} Returns the unit value\n   */\n\n\n  Unit.prototype.toNumeric = function (valuelessUnit) {\n    var other;\n\n    if (valuelessUnit) {\n      // Allow getting the numeric value without converting to a different unit\n      other = this.to(valuelessUnit);\n    } else {\n      other = this.clone();\n    }\n\n    if (other._isDerived() || other.units.length === 0) {\n      return other._denormalize(other.value);\n    } else {\n      return other._denormalize(other.value, other.units[0].prefix.value);\n    }\n  };\n  /**\n   * Get a string representation of the unit.\n   * @memberof Unit\n   * @return {string}\n   */\n\n\n  Unit.prototype.toString = function () {\n    return this.format();\n  };\n  /**\n   * Get a JSON representation of the unit\n   * @memberof Unit\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Unit\", \"value\": 2, \"unit\": \"cm\", \"fixPrefix\": false}`\n   */\n\n\n  Unit.prototype.toJSON = function () {\n    return {\n      mathjs: 'Unit',\n      value: this._denormalize(this.value),\n      unit: this.formatUnits(),\n      fixPrefix: this.fixPrefix\n    };\n  };\n  /**\n   * Instantiate a Unit from a JSON object\n   * @memberof Unit\n   * @param {Object} json  A JSON object structured as:\n   *                       `{\"mathjs\": \"Unit\", \"value\": 2, \"unit\": \"cm\", \"fixPrefix\": false}`\n   * @return {Unit}\n   */\n\n\n  Unit.fromJSON = function (json) {\n    var unit = new Unit(json.value, json.unit);\n    unit.fixPrefix = json.fixPrefix || false;\n    return unit;\n  };\n  /**\n   * Returns the string representation of the unit.\n   * @memberof Unit\n   * @return {string}\n   */\n\n\n  Unit.prototype.valueOf = Unit.prototype.toString;\n  /**\n   * Simplify this Unit's unit list and return a new Unit with the simplified list.\n   * The returned Unit will contain a list of the \"best\" units for formatting.\n   */\n\n  Unit.prototype.simplify = function () {\n    var ret = this.clone();\n    var proposedUnitList = []; // Search for a matching base\n\n    var matchingBase;\n\n    for (var key in currentUnitSystem) {\n      if ((0, _object.hasOwnProperty)(currentUnitSystem, key)) {\n        if (ret.hasBase(BASE_UNITS[key])) {\n          matchingBase = key;\n          break;\n        }\n      }\n    }\n\n    if (matchingBase === 'NONE') {\n      ret.units = [];\n    } else {\n      var matchingUnit;\n\n      if (matchingBase) {\n        // Does the unit system have a matching unit?\n        if ((0, _object.hasOwnProperty)(currentUnitSystem, matchingBase)) {\n          matchingUnit = currentUnitSystem[matchingBase];\n        }\n      }\n\n      if (matchingUnit) {\n        ret.units = [{\n          unit: matchingUnit.unit,\n          prefix: matchingUnit.prefix,\n          power: 1.0\n        }];\n      } else {\n        // Multiple units or units with powers are formatted like this:\n        // 5 (kg m^2) / (s^3 mol)\n        // Build an representation from the base units of the current unit system\n        var missingBaseDim = false;\n\n        for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n          var baseDim = BASE_DIMENSIONS[i];\n\n          if (Math.abs(ret.dimensions[i] || 0) > 1e-12) {\n            if ((0, _object.hasOwnProperty)(currentUnitSystem, baseDim)) {\n              proposedUnitList.push({\n                unit: currentUnitSystem[baseDim].unit,\n                prefix: currentUnitSystem[baseDim].prefix,\n                power: ret.dimensions[i] || 0\n              });\n            } else {\n              missingBaseDim = true;\n            }\n          }\n        } // Is the proposed unit list \"simpler\" than the existing one?\n\n\n        if (proposedUnitList.length < ret.units.length && !missingBaseDim) {\n          // Replace this unit list with the proposed list\n          ret.units = proposedUnitList;\n        }\n      }\n    }\n\n    return ret;\n  };\n  /**\n   * Returns a new Unit in the SI system with the same value as this one\n   */\n\n\n  Unit.prototype.toSI = function () {\n    var ret = this.clone();\n    var proposedUnitList = []; // Multiple units or units with powers are formatted like this:\n    // 5 (kg m^2) / (s^3 mol)\n    // Build an representation from the base units of the SI unit system\n\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      var baseDim = BASE_DIMENSIONS[i];\n\n      if (Math.abs(ret.dimensions[i] || 0) > 1e-12) {\n        if ((0, _object.hasOwnProperty)(UNIT_SYSTEMS.si, baseDim)) {\n          proposedUnitList.push({\n            unit: UNIT_SYSTEMS.si[baseDim].unit,\n            prefix: UNIT_SYSTEMS.si[baseDim].prefix,\n            power: ret.dimensions[i] || 0\n          });\n        } else {\n          throw new Error('Cannot express custom unit ' + baseDim + ' in SI units');\n        }\n      }\n    } // Replace this unit list with the proposed list\n\n\n    ret.units = proposedUnitList;\n    ret.fixPrefix = true;\n    ret.skipAutomaticSimplification = true;\n    return ret;\n  };\n  /**\n   * Get a string representation of the units of this Unit, without the value. The unit list is formatted as-is without first being simplified.\n   * @memberof Unit\n   * @return {string}\n   */\n\n\n  Unit.prototype.formatUnits = function () {\n    var strNum = '';\n    var strDen = '';\n    var nNum = 0;\n    var nDen = 0;\n\n    for (var i = 0; i < this.units.length; i++) {\n      if (this.units[i].power > 0) {\n        nNum++;\n        strNum += ' ' + this.units[i].prefix.name + this.units[i].unit.name;\n\n        if (Math.abs(this.units[i].power - 1.0) > 1e-15) {\n          strNum += '^' + this.units[i].power;\n        }\n      } else if (this.units[i].power < 0) {\n        nDen++;\n      }\n    }\n\n    if (nDen > 0) {\n      for (var _i4 = 0; _i4 < this.units.length; _i4++) {\n        if (this.units[_i4].power < 0) {\n          if (nNum > 0) {\n            strDen += ' ' + this.units[_i4].prefix.name + this.units[_i4].unit.name;\n\n            if (Math.abs(this.units[_i4].power + 1.0) > 1e-15) {\n              strDen += '^' + -this.units[_i4].power;\n            }\n          } else {\n            strDen += ' ' + this.units[_i4].prefix.name + this.units[_i4].unit.name;\n            strDen += '^' + this.units[_i4].power;\n          }\n        }\n      }\n    } // Remove leading \" \"\n\n\n    strNum = strNum.substr(1);\n    strDen = strDen.substr(1); // Add parans for better copy/paste back into evaluate, for example, or for better pretty print formatting\n\n    if (nNum > 1 && nDen > 0) {\n      strNum = '(' + strNum + ')';\n    }\n\n    if (nDen > 1 && nNum > 0) {\n      strDen = '(' + strDen + ')';\n    }\n\n    var str = strNum;\n\n    if (nNum > 0 && nDen > 0) {\n      str += ' / ';\n    }\n\n    str += strDen;\n    return str;\n  };\n  /**\n   * Get a string representation of the Unit, with optional formatting options.\n   * @memberof Unit\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @return {string}\n   */\n\n\n  Unit.prototype.format = function (options) {\n    // Simplfy the unit list, unless it is valueless or was created directly in the\n    // constructor or as the result of to or toSI\n    var simp = this.skipAutomaticSimplification || this.value === null ? this.clone() : this.simplify(); // Apply some custom logic for handling VA and VAR. The goal is to express the value of the unit as a real value, if possible. Otherwise, use a real-valued unit instead of a complex-valued one.\n\n    var isImaginary = false;\n\n    if (typeof simp.value !== 'undefined' && simp.value !== null && (0, _is.isComplex)(simp.value)) {\n      // TODO: Make this better, for example, use relative magnitude of re and im rather than absolute\n      isImaginary = Math.abs(simp.value.re) < 1e-14;\n    }\n\n    for (var i in simp.units) {\n      if ((0, _object.hasOwnProperty)(simp.units, i)) {\n        if (simp.units[i].unit) {\n          if (simp.units[i].unit.name === 'VA' && isImaginary) {\n            simp.units[i].unit = UNITS.VAR;\n          } else if (simp.units[i].unit.name === 'VAR' && !isImaginary) {\n            simp.units[i].unit = UNITS.VA;\n          }\n        }\n      }\n    } // Now apply the best prefix\n    // Units must have only one unit and not have the fixPrefix flag set\n\n\n    if (simp.units.length === 1 && !simp.fixPrefix) {\n      // Units must have integer powers, otherwise the prefix will change the\n      // outputted value by not-an-integer-power-of-ten\n      if (Math.abs(simp.units[0].power - Math.round(simp.units[0].power)) < 1e-14) {\n        // Apply the best prefix\n        simp.units[0].prefix = simp._bestPrefix();\n      }\n    }\n\n    var value = simp._denormalize(simp.value);\n\n    var str = simp.value !== null ? format(value, options || {}) : '';\n    var unitStr = simp.formatUnits();\n\n    if (simp.value && (0, _is.isComplex)(simp.value)) {\n      str = '(' + str + ')'; // Surround complex values with ( ) to enable better parsing\n    }\n\n    if (unitStr.length > 0 && str.length > 0) {\n      str += ' ';\n    }\n\n    str += unitStr;\n    return str;\n  };\n  /**\n   * Calculate the best prefix using current value.\n   * @memberof Unit\n   * @returns {Object} prefix\n   * @private\n   */\n\n\n  Unit.prototype._bestPrefix = function () {\n    if (this.units.length !== 1) {\n      throw new Error('Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!');\n    }\n\n    if (Math.abs(this.units[0].power - Math.round(this.units[0].power)) >= 1e-14) {\n      throw new Error('Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!');\n    } // find the best prefix value (resulting in the value of which\n    // the absolute value of the log10 is closest to zero,\n    // though with a little offset of 1.2 for nicer values: you get a\n    // sequence 1mm 100mm 500mm 0.6m 1m 10m 100m 500m 0.6km 1km ...\n    // Note: the units value can be any numeric type, but to find the best\n    // prefix it's enough to work with limited precision of a regular number\n    // Update: using mathjs abs since we also allow complex numbers\n\n\n    var absValue = this.value !== null ? abs(this.value) : 0;\n    var absUnitValue = abs(this.units[0].unit.value);\n    var bestPrefix = this.units[0].prefix;\n\n    if (absValue === 0) {\n      return bestPrefix;\n    }\n\n    var power = this.units[0].power;\n    var bestDiff = Math.log(absValue / Math.pow(bestPrefix.value * absUnitValue, power)) / Math.LN10 - 1.2;\n    if (bestDiff > -2.200001 && bestDiff < 1.800001) return bestPrefix; // Allow the original prefix\n\n    bestDiff = Math.abs(bestDiff);\n    var prefixes = this.units[0].unit.prefixes;\n\n    for (var p in prefixes) {\n      if ((0, _object.hasOwnProperty)(prefixes, p)) {\n        var prefix = prefixes[p];\n\n        if (prefix.scientific) {\n          var diff = Math.abs(Math.log(absValue / Math.pow(prefix.value * absUnitValue, power)) / Math.LN10 - 1.2);\n\n          if (diff < bestDiff || diff === bestDiff && prefix.name.length < bestPrefix.name.length) {\n            // choose the prefix with the smallest diff, or if equal, choose the one\n            // with the shortest name (can happen with SHORTLONG for example)\n            bestPrefix = prefix;\n            bestDiff = diff;\n          }\n        }\n      }\n    }\n\n    return bestPrefix;\n  };\n  /**\n   * Returns an array of units whose sum is equal to this unit\n   * @memberof Unit\n   * @param {Array} [parts] An array of strings or valueless units.\n   *\n   *   Example:\n   *\n   *   const u = new Unit(1, 'm')\n   *   u.splitUnit(['feet', 'inch'])\n   *     [ 3 feet, 3.3700787401575 inch ]\n   *\n   * @return {Array} An array of units.\n   */\n\n\n  Unit.prototype.splitUnit = function (parts) {\n    var x = this.clone();\n    var ret = [];\n\n    for (var i = 0; i < parts.length; i++) {\n      // Convert x to the requested unit\n      x = x.to(parts[i]);\n      if (i === parts.length - 1) break; // Get the numeric value of this unit\n\n      var xNumeric = x.toNumeric(); // Check to see if xNumeric is nearly equal to an integer,\n      // since fix can incorrectly round down if there is round-off error\n\n      var xRounded = round(xNumeric);\n      var xFixed = void 0;\n      var isNearlyEqual = equal(xRounded, xNumeric);\n\n      if (isNearlyEqual) {\n        xFixed = xRounded;\n      } else {\n        xFixed = fix(x.toNumeric());\n      }\n\n      var y = new Unit(xFixed, parts[i].toString());\n      ret.push(y);\n      x = subtract(x, y);\n    } // This little bit fixes a bug where the remainder should be 0 but is a little bit off.\n    // But instead of comparing x, the remainder, with zero--we will compare the sum of\n    // all the parts so far with the original value. If they are nearly equal,\n    // we set the remainder to 0.\n\n\n    var testSum = 0;\n\n    for (var _i5 = 0; _i5 < ret.length; _i5++) {\n      testSum = addScalar(testSum, ret[_i5].value);\n    }\n\n    if (equal(testSum, this.value)) {\n      x.value = 0;\n    }\n\n    ret.push(x);\n    return ret;\n  };\n\n  var PREFIXES = {\n    NONE: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      }\n    },\n    SHORT: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      da: {\n        name: 'da',\n        value: 1e1,\n        scientific: false\n      },\n      h: {\n        name: 'h',\n        value: 1e2,\n        scientific: false\n      },\n      k: {\n        name: 'k',\n        value: 1e3,\n        scientific: true\n      },\n      M: {\n        name: 'M',\n        value: 1e6,\n        scientific: true\n      },\n      G: {\n        name: 'G',\n        value: 1e9,\n        scientific: true\n      },\n      T: {\n        name: 'T',\n        value: 1e12,\n        scientific: true\n      },\n      P: {\n        name: 'P',\n        value: 1e15,\n        scientific: true\n      },\n      E: {\n        name: 'E',\n        value: 1e18,\n        scientific: true\n      },\n      Z: {\n        name: 'Z',\n        value: 1e21,\n        scientific: true\n      },\n      Y: {\n        name: 'Y',\n        value: 1e24,\n        scientific: true\n      },\n      d: {\n        name: 'd',\n        value: 1e-1,\n        scientific: false\n      },\n      c: {\n        name: 'c',\n        value: 1e-2,\n        scientific: false\n      },\n      m: {\n        name: 'm',\n        value: 1e-3,\n        scientific: true\n      },\n      u: {\n        name: 'u',\n        value: 1e-6,\n        scientific: true\n      },\n      n: {\n        name: 'n',\n        value: 1e-9,\n        scientific: true\n      },\n      p: {\n        name: 'p',\n        value: 1e-12,\n        scientific: true\n      },\n      f: {\n        name: 'f',\n        value: 1e-15,\n        scientific: true\n      },\n      a: {\n        name: 'a',\n        value: 1e-18,\n        scientific: true\n      },\n      z: {\n        name: 'z',\n        value: 1e-21,\n        scientific: true\n      },\n      y: {\n        name: 'y',\n        value: 1e-24,\n        scientific: true\n      }\n    },\n    LONG: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      deca: {\n        name: 'deca',\n        value: 1e1,\n        scientific: false\n      },\n      hecto: {\n        name: 'hecto',\n        value: 1e2,\n        scientific: false\n      },\n      kilo: {\n        name: 'kilo',\n        value: 1e3,\n        scientific: true\n      },\n      mega: {\n        name: 'mega',\n        value: 1e6,\n        scientific: true\n      },\n      giga: {\n        name: 'giga',\n        value: 1e9,\n        scientific: true\n      },\n      tera: {\n        name: 'tera',\n        value: 1e12,\n        scientific: true\n      },\n      peta: {\n        name: 'peta',\n        value: 1e15,\n        scientific: true\n      },\n      exa: {\n        name: 'exa',\n        value: 1e18,\n        scientific: true\n      },\n      zetta: {\n        name: 'zetta',\n        value: 1e21,\n        scientific: true\n      },\n      yotta: {\n        name: 'yotta',\n        value: 1e24,\n        scientific: true\n      },\n      deci: {\n        name: 'deci',\n        value: 1e-1,\n        scientific: false\n      },\n      centi: {\n        name: 'centi',\n        value: 1e-2,\n        scientific: false\n      },\n      milli: {\n        name: 'milli',\n        value: 1e-3,\n        scientific: true\n      },\n      micro: {\n        name: 'micro',\n        value: 1e-6,\n        scientific: true\n      },\n      nano: {\n        name: 'nano',\n        value: 1e-9,\n        scientific: true\n      },\n      pico: {\n        name: 'pico',\n        value: 1e-12,\n        scientific: true\n      },\n      femto: {\n        name: 'femto',\n        value: 1e-15,\n        scientific: true\n      },\n      atto: {\n        name: 'atto',\n        value: 1e-18,\n        scientific: true\n      },\n      zepto: {\n        name: 'zepto',\n        value: 1e-21,\n        scientific: true\n      },\n      yocto: {\n        name: 'yocto',\n        value: 1e-24,\n        scientific: true\n      }\n    },\n    SQUARED: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      da: {\n        name: 'da',\n        value: 1e2,\n        scientific: false\n      },\n      h: {\n        name: 'h',\n        value: 1e4,\n        scientific: false\n      },\n      k: {\n        name: 'k',\n        value: 1e6,\n        scientific: true\n      },\n      M: {\n        name: 'M',\n        value: 1e12,\n        scientific: true\n      },\n      G: {\n        name: 'G',\n        value: 1e18,\n        scientific: true\n      },\n      T: {\n        name: 'T',\n        value: 1e24,\n        scientific: true\n      },\n      P: {\n        name: 'P',\n        value: 1e30,\n        scientific: true\n      },\n      E: {\n        name: 'E',\n        value: 1e36,\n        scientific: true\n      },\n      Z: {\n        name: 'Z',\n        value: 1e42,\n        scientific: true\n      },\n      Y: {\n        name: 'Y',\n        value: 1e48,\n        scientific: true\n      },\n      d: {\n        name: 'd',\n        value: 1e-2,\n        scientific: false\n      },\n      c: {\n        name: 'c',\n        value: 1e-4,\n        scientific: false\n      },\n      m: {\n        name: 'm',\n        value: 1e-6,\n        scientific: true\n      },\n      u: {\n        name: 'u',\n        value: 1e-12,\n        scientific: true\n      },\n      n: {\n        name: 'n',\n        value: 1e-18,\n        scientific: true\n      },\n      p: {\n        name: 'p',\n        value: 1e-24,\n        scientific: true\n      },\n      f: {\n        name: 'f',\n        value: 1e-30,\n        scientific: true\n      },\n      a: {\n        name: 'a',\n        value: 1e-36,\n        scientific: true\n      },\n      z: {\n        name: 'z',\n        value: 1e-42,\n        scientific: true\n      },\n      y: {\n        name: 'y',\n        value: 1e-48,\n        scientific: true\n      }\n    },\n    CUBIC: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      da: {\n        name: 'da',\n        value: 1e3,\n        scientific: false\n      },\n      h: {\n        name: 'h',\n        value: 1e6,\n        scientific: false\n      },\n      k: {\n        name: 'k',\n        value: 1e9,\n        scientific: true\n      },\n      M: {\n        name: 'M',\n        value: 1e18,\n        scientific: true\n      },\n      G: {\n        name: 'G',\n        value: 1e27,\n        scientific: true\n      },\n      T: {\n        name: 'T',\n        value: 1e36,\n        scientific: true\n      },\n      P: {\n        name: 'P',\n        value: 1e45,\n        scientific: true\n      },\n      E: {\n        name: 'E',\n        value: 1e54,\n        scientific: true\n      },\n      Z: {\n        name: 'Z',\n        value: 1e63,\n        scientific: true\n      },\n      Y: {\n        name: 'Y',\n        value: 1e72,\n        scientific: true\n      },\n      d: {\n        name: 'd',\n        value: 1e-3,\n        scientific: false\n      },\n      c: {\n        name: 'c',\n        value: 1e-6,\n        scientific: false\n      },\n      m: {\n        name: 'm',\n        value: 1e-9,\n        scientific: true\n      },\n      u: {\n        name: 'u',\n        value: 1e-18,\n        scientific: true\n      },\n      n: {\n        name: 'n',\n        value: 1e-27,\n        scientific: true\n      },\n      p: {\n        name: 'p',\n        value: 1e-36,\n        scientific: true\n      },\n      f: {\n        name: 'f',\n        value: 1e-45,\n        scientific: true\n      },\n      a: {\n        name: 'a',\n        value: 1e-54,\n        scientific: true\n      },\n      z: {\n        name: 'z',\n        value: 1e-63,\n        scientific: true\n      },\n      y: {\n        name: 'y',\n        value: 1e-72,\n        scientific: true\n      }\n    },\n    BINARY_SHORT_SI: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      k: {\n        name: 'k',\n        value: 1e3,\n        scientific: true\n      },\n      M: {\n        name: 'M',\n        value: 1e6,\n        scientific: true\n      },\n      G: {\n        name: 'G',\n        value: 1e9,\n        scientific: true\n      },\n      T: {\n        name: 'T',\n        value: 1e12,\n        scientific: true\n      },\n      P: {\n        name: 'P',\n        value: 1e15,\n        scientific: true\n      },\n      E: {\n        name: 'E',\n        value: 1e18,\n        scientific: true\n      },\n      Z: {\n        name: 'Z',\n        value: 1e21,\n        scientific: true\n      },\n      Y: {\n        name: 'Y',\n        value: 1e24,\n        scientific: true\n      }\n    },\n    BINARY_SHORT_IEC: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      Ki: {\n        name: 'Ki',\n        value: 1024,\n        scientific: true\n      },\n      Mi: {\n        name: 'Mi',\n        value: Math.pow(1024, 2),\n        scientific: true\n      },\n      Gi: {\n        name: 'Gi',\n        value: Math.pow(1024, 3),\n        scientific: true\n      },\n      Ti: {\n        name: 'Ti',\n        value: Math.pow(1024, 4),\n        scientific: true\n      },\n      Pi: {\n        name: 'Pi',\n        value: Math.pow(1024, 5),\n        scientific: true\n      },\n      Ei: {\n        name: 'Ei',\n        value: Math.pow(1024, 6),\n        scientific: true\n      },\n      Zi: {\n        name: 'Zi',\n        value: Math.pow(1024, 7),\n        scientific: true\n      },\n      Yi: {\n        name: 'Yi',\n        value: Math.pow(1024, 8),\n        scientific: true\n      }\n    },\n    BINARY_LONG_SI: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      kilo: {\n        name: 'kilo',\n        value: 1e3,\n        scientific: true\n      },\n      mega: {\n        name: 'mega',\n        value: 1e6,\n        scientific: true\n      },\n      giga: {\n        name: 'giga',\n        value: 1e9,\n        scientific: true\n      },\n      tera: {\n        name: 'tera',\n        value: 1e12,\n        scientific: true\n      },\n      peta: {\n        name: 'peta',\n        value: 1e15,\n        scientific: true\n      },\n      exa: {\n        name: 'exa',\n        value: 1e18,\n        scientific: true\n      },\n      zetta: {\n        name: 'zetta',\n        value: 1e21,\n        scientific: true\n      },\n      yotta: {\n        name: 'yotta',\n        value: 1e24,\n        scientific: true\n      }\n    },\n    BINARY_LONG_IEC: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      kibi: {\n        name: 'kibi',\n        value: 1024,\n        scientific: true\n      },\n      mebi: {\n        name: 'mebi',\n        value: Math.pow(1024, 2),\n        scientific: true\n      },\n      gibi: {\n        name: 'gibi',\n        value: Math.pow(1024, 3),\n        scientific: true\n      },\n      tebi: {\n        name: 'tebi',\n        value: Math.pow(1024, 4),\n        scientific: true\n      },\n      pebi: {\n        name: 'pebi',\n        value: Math.pow(1024, 5),\n        scientific: true\n      },\n      exi: {\n        name: 'exi',\n        value: Math.pow(1024, 6),\n        scientific: true\n      },\n      zebi: {\n        name: 'zebi',\n        value: Math.pow(1024, 7),\n        scientific: true\n      },\n      yobi: {\n        name: 'yobi',\n        value: Math.pow(1024, 8),\n        scientific: true\n      }\n    },\n    BTU: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      MM: {\n        name: 'MM',\n        value: 1e6,\n        scientific: true\n      }\n    }\n  };\n  PREFIXES.SHORTLONG = _extends({}, PREFIXES.SHORT, PREFIXES.LONG);\n  PREFIXES.BINARY_SHORT = _extends({}, PREFIXES.BINARY_SHORT_SI, PREFIXES.BINARY_SHORT_IEC);\n  PREFIXES.BINARY_LONG = _extends({}, PREFIXES.BINARY_LONG_SI, PREFIXES.BINARY_LONG_IEC);\n  /* Internally, each unit is represented by a value and a dimension array. The elements of the dimensions array have the following meaning:\n   * Index  Dimension\n   * -----  ---------\n   *   0    Length\n   *   1    Mass\n   *   2    Time\n   *   3    Current\n   *   4    Temperature\n   *   5    Luminous intensity\n   *   6    Amount of substance\n   *   7    Angle\n   *   8    Bit (digital)\n   * For example, the unit \"298.15 K\" is a pure temperature and would have a value of 298.15 and a dimension array of [0, 0, 0, 0, 1, 0, 0, 0, 0]. The unit \"1 cal / (gm \u00b0C)\" can be written in terms of the 9 fundamental dimensions as [length^2] / ([time^2] * [temperature]), and would a value of (after conversion to SI) 4184.0 and a dimensions array of [2, 0, -2, 0, -1, 0, 0, 0, 0].\n   *\n   */\n\n  var BASE_DIMENSIONS = ['MASS', 'LENGTH', 'TIME', 'CURRENT', 'TEMPERATURE', 'LUMINOUS_INTENSITY', 'AMOUNT_OF_SUBSTANCE', 'ANGLE', 'BIT'];\n  var BASE_UNITS = {\n    NONE: {\n      dimensions: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n    },\n    MASS: {\n      dimensions: [1, 0, 0, 0, 0, 0, 0, 0, 0]\n    },\n    LENGTH: {\n      dimensions: [0, 1, 0, 0, 0, 0, 0, 0, 0]\n    },\n    TIME: {\n      dimensions: [0, 0, 1, 0, 0, 0, 0, 0, 0]\n    },\n    CURRENT: {\n      dimensions: [0, 0, 0, 1, 0, 0, 0, 0, 0]\n    },\n    TEMPERATURE: {\n      dimensions: [0, 0, 0, 0, 1, 0, 0, 0, 0]\n    },\n    LUMINOUS_INTENSITY: {\n      dimensions: [0, 0, 0, 0, 0, 1, 0, 0, 0]\n    },\n    AMOUNT_OF_SUBSTANCE: {\n      dimensions: [0, 0, 0, 0, 0, 0, 1, 0, 0]\n    },\n    FORCE: {\n      dimensions: [1, 1, -2, 0, 0, 0, 0, 0, 0]\n    },\n    SURFACE: {\n      dimensions: [0, 2, 0, 0, 0, 0, 0, 0, 0]\n    },\n    VOLUME: {\n      dimensions: [0, 3, 0, 0, 0, 0, 0, 0, 0]\n    },\n    ENERGY: {\n      dimensions: [1, 2, -2, 0, 0, 0, 0, 0, 0]\n    },\n    POWER: {\n      dimensions: [1, 2, -3, 0, 0, 0, 0, 0, 0]\n    },\n    PRESSURE: {\n      dimensions: [1, -1, -2, 0, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_CHARGE: {\n      dimensions: [0, 0, 1, 1, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_CAPACITANCE: {\n      dimensions: [-1, -2, 4, 2, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_POTENTIAL: {\n      dimensions: [1, 2, -3, -1, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_RESISTANCE: {\n      dimensions: [1, 2, -3, -2, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_INDUCTANCE: {\n      dimensions: [1, 2, -2, -2, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_CONDUCTANCE: {\n      dimensions: [-1, -2, 3, 2, 0, 0, 0, 0, 0]\n    },\n    MAGNETIC_FLUX: {\n      dimensions: [1, 2, -2, -1, 0, 0, 0, 0, 0]\n    },\n    MAGNETIC_FLUX_DENSITY: {\n      dimensions: [1, 0, -2, -1, 0, 0, 0, 0, 0]\n    },\n    FREQUENCY: {\n      dimensions: [0, 0, -1, 0, 0, 0, 0, 0, 0]\n    },\n    ANGLE: {\n      dimensions: [0, 0, 0, 0, 0, 0, 0, 1, 0]\n    },\n    BIT: {\n      dimensions: [0, 0, 0, 0, 0, 0, 0, 0, 1]\n    }\n  };\n\n  for (var key in BASE_UNITS) {\n    if ((0, _object.hasOwnProperty)(BASE_UNITS, key)) {\n      BASE_UNITS[key].key = key;\n    }\n  }\n\n  var BASE_UNIT_NONE = {};\n  var UNIT_NONE = {\n    name: '',\n    base: BASE_UNIT_NONE,\n    value: 1,\n    offset: 0,\n    dimensions: BASE_DIMENSIONS.map(function (x) {\n      return 0;\n    })\n  };\n  var UNITS = {\n    // length\n    meter: {\n      name: 'meter',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    inch: {\n      name: 'inch',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.0254,\n      offset: 0\n    },\n    foot: {\n      name: 'foot',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.3048,\n      offset: 0\n    },\n    yard: {\n      name: 'yard',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.9144,\n      offset: 0\n    },\n    mile: {\n      name: 'mile',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 1609.344,\n      offset: 0\n    },\n    link: {\n      name: 'link',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.201168,\n      offset: 0\n    },\n    rod: {\n      name: 'rod',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 5.0292,\n      offset: 0\n    },\n    chain: {\n      name: 'chain',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 20.1168,\n      offset: 0\n    },\n    angstrom: {\n      name: 'angstrom',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 1e-10,\n      offset: 0\n    },\n    m: {\n      name: 'm',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    \"in\": {\n      name: 'in',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.0254,\n      offset: 0\n    },\n    ft: {\n      name: 'ft',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.3048,\n      offset: 0\n    },\n    yd: {\n      name: 'yd',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.9144,\n      offset: 0\n    },\n    mi: {\n      name: 'mi',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 1609.344,\n      offset: 0\n    },\n    li: {\n      name: 'li',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.201168,\n      offset: 0\n    },\n    rd: {\n      name: 'rd',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 5.029210,\n      offset: 0\n    },\n    ch: {\n      name: 'ch',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 20.1168,\n      offset: 0\n    },\n    mil: {\n      name: 'mil',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.0000254,\n      offset: 0\n    },\n    // 1/1000 inch\n    // Surface\n    m2: {\n      name: 'm2',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.SQUARED,\n      value: 1,\n      offset: 0\n    },\n    sqin: {\n      name: 'sqin',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 0.00064516,\n      offset: 0\n    },\n    // 645.16 mm2\n    sqft: {\n      name: 'sqft',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 0.09290304,\n      offset: 0\n    },\n    // 0.09290304 m2\n    sqyd: {\n      name: 'sqyd',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 0.83612736,\n      offset: 0\n    },\n    // 0.83612736 m2\n    sqmi: {\n      name: 'sqmi',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 2589988.110336,\n      offset: 0\n    },\n    // 2.589988110336 km2\n    sqrd: {\n      name: 'sqrd',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 25.29295,\n      offset: 0\n    },\n    // 25.29295 m2\n    sqch: {\n      name: 'sqch',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 404.6873,\n      offset: 0\n    },\n    // 404.6873 m2\n    sqmil: {\n      name: 'sqmil',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 6.4516e-10,\n      offset: 0\n    },\n    // 6.4516 * 10^-10 m2\n    acre: {\n      name: 'acre',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 4046.86,\n      offset: 0\n    },\n    // 4046.86 m2\n    hectare: {\n      name: 'hectare',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 10000,\n      offset: 0\n    },\n    // 10000 m2\n    // Volume\n    m3: {\n      name: 'm3',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.CUBIC,\n      value: 1,\n      offset: 0\n    },\n    L: {\n      name: 'L',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.SHORT,\n      value: 0.001,\n      offset: 0\n    },\n    // litre\n    l: {\n      name: 'l',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.SHORT,\n      value: 0.001,\n      offset: 0\n    },\n    // litre\n    litre: {\n      name: 'litre',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.LONG,\n      value: 0.001,\n      offset: 0\n    },\n    cuin: {\n      name: 'cuin',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 1.6387064e-5,\n      offset: 0\n    },\n    // 1.6387064e-5 m3\n    cuft: {\n      name: 'cuft',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.028316846592,\n      offset: 0\n    },\n    // 28.316 846 592 L\n    cuyd: {\n      name: 'cuyd',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.764554857984,\n      offset: 0\n    },\n    // 764.554 857 984 L\n    teaspoon: {\n      name: 'teaspoon',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.000005,\n      offset: 0\n    },\n    // 5 mL\n    tablespoon: {\n      name: 'tablespoon',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.000015,\n      offset: 0\n    },\n    // 15 mL\n    // {name: 'cup', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.000240, offset: 0}, // 240 mL  // not possible, we have already another cup\n    drop: {\n      name: 'drop',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 5e-8,\n      offset: 0\n    },\n    // 0.05 mL = 5e-8 m3\n    gtt: {\n      name: 'gtt',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 5e-8,\n      offset: 0\n    },\n    // 0.05 mL = 5e-8 m3\n    // Liquid volume\n    minim: {\n      name: 'minim',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.00000006161152,\n      offset: 0\n    },\n    // 0.06161152 mL\n    fluiddram: {\n      name: 'fluiddram',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0000036966911,\n      offset: 0\n    },\n    // 3.696691 mL\n    fluidounce: {\n      name: 'fluidounce',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.00002957353,\n      offset: 0\n    },\n    // 29.57353 mL\n    gill: {\n      name: 'gill',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0001182941,\n      offset: 0\n    },\n    // 118.2941 mL\n    cc: {\n      name: 'cc',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 1e-6,\n      offset: 0\n    },\n    // 1e-6 L\n    cup: {\n      name: 'cup',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0002365882,\n      offset: 0\n    },\n    // 236.5882 mL\n    pint: {\n      name: 'pint',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0004731765,\n      offset: 0\n    },\n    // 473.1765 mL\n    quart: {\n      name: 'quart',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0009463529,\n      offset: 0\n    },\n    // 946.3529 mL\n    gallon: {\n      name: 'gallon',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.003785412,\n      offset: 0\n    },\n    // 3.785412 L\n    beerbarrel: {\n      name: 'beerbarrel',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.1173478,\n      offset: 0\n    },\n    // 117.3478 L\n    oilbarrel: {\n      name: 'oilbarrel',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.1589873,\n      offset: 0\n    },\n    // 158.9873 L\n    hogshead: {\n      name: 'hogshead',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.2384810,\n      offset: 0\n    },\n    // 238.4810 L\n    // {name: 'min', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.00000006161152, offset: 0}, // 0.06161152 mL // min is already in use as minute\n    fldr: {\n      name: 'fldr',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0000036966911,\n      offset: 0\n    },\n    // 3.696691 mL\n    floz: {\n      name: 'floz',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.00002957353,\n      offset: 0\n    },\n    // 29.57353 mL\n    gi: {\n      name: 'gi',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0001182941,\n      offset: 0\n    },\n    // 118.2941 mL\n    cp: {\n      name: 'cp',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0002365882,\n      offset: 0\n    },\n    // 236.5882 mL\n    pt: {\n      name: 'pt',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0004731765,\n      offset: 0\n    },\n    // 473.1765 mL\n    qt: {\n      name: 'qt',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0009463529,\n      offset: 0\n    },\n    // 946.3529 mL\n    gal: {\n      name: 'gal',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.003785412,\n      offset: 0\n    },\n    // 3.785412 L\n    bbl: {\n      name: 'bbl',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.1173478,\n      offset: 0\n    },\n    // 117.3478 L\n    obl: {\n      name: 'obl',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.1589873,\n      offset: 0\n    },\n    // 158.9873 L\n    // {name: 'hogshead', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.2384810, offset: 0}, // 238.4810 L // TODO: hh?\n    // Mass\n    g: {\n      name: 'g',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.SHORT,\n      value: 0.001,\n      offset: 0\n    },\n    gram: {\n      name: 'gram',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.LONG,\n      value: 0.001,\n      offset: 0\n    },\n    ton: {\n      name: 'ton',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.SHORT,\n      value: 907.18474,\n      offset: 0\n    },\n    t: {\n      name: 't',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.SHORT,\n      value: 1000,\n      offset: 0\n    },\n    tonne: {\n      name: 'tonne',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.LONG,\n      value: 1000,\n      offset: 0\n    },\n    grain: {\n      name: 'grain',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 64.79891e-6,\n      offset: 0\n    },\n    dram: {\n      name: 'dram',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 1.7718451953125e-3,\n      offset: 0\n    },\n    ounce: {\n      name: 'ounce',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 28.349523125e-3,\n      offset: 0\n    },\n    poundmass: {\n      name: 'poundmass',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 453.59237e-3,\n      offset: 0\n    },\n    hundredweight: {\n      name: 'hundredweight',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 45.359237,\n      offset: 0\n    },\n    stick: {\n      name: 'stick',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 115e-3,\n      offset: 0\n    },\n    stone: {\n      name: 'stone',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 6.35029318,\n      offset: 0\n    },\n    gr: {\n      name: 'gr',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 64.79891e-6,\n      offset: 0\n    },\n    dr: {\n      name: 'dr',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 1.7718451953125e-3,\n      offset: 0\n    },\n    oz: {\n      name: 'oz',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 28.349523125e-3,\n      offset: 0\n    },\n    lbm: {\n      name: 'lbm',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 453.59237e-3,\n      offset: 0\n    },\n    cwt: {\n      name: 'cwt',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 45.359237,\n      offset: 0\n    },\n    // Time\n    s: {\n      name: 's',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    min: {\n      name: 'min',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 60,\n      offset: 0\n    },\n    h: {\n      name: 'h',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 3600,\n      offset: 0\n    },\n    second: {\n      name: 'second',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    sec: {\n      name: 'sec',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    minute: {\n      name: 'minute',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 60,\n      offset: 0\n    },\n    hour: {\n      name: 'hour',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 3600,\n      offset: 0\n    },\n    day: {\n      name: 'day',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 86400,\n      offset: 0\n    },\n    week: {\n      name: 'week',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 7 * 86400,\n      offset: 0\n    },\n    month: {\n      name: 'month',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 2629800,\n      // 1/12th of Julian year\n      offset: 0\n    },\n    year: {\n      name: 'year',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 31557600,\n      // Julian year\n      offset: 0\n    },\n    decade: {\n      name: 'decade',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 315576000,\n      // Julian decade\n      offset: 0\n    },\n    century: {\n      name: 'century',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 3155760000,\n      // Julian century\n      offset: 0\n    },\n    millennium: {\n      name: 'millennium',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 31557600000,\n      // Julian millennium\n      offset: 0\n    },\n    // Frequency\n    hertz: {\n      name: 'Hertz',\n      base: BASE_UNITS.FREQUENCY,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0,\n      reciprocal: true\n    },\n    Hz: {\n      name: 'Hz',\n      base: BASE_UNITS.FREQUENCY,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0,\n      reciprocal: true\n    },\n    // Angle\n    rad: {\n      name: 'rad',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    radian: {\n      name: 'radian',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    // deg = rad / (2*pi) * 360 = rad / 0.017453292519943295769236907684888\n    deg: {\n      name: 'deg',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.SHORT,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    degree: {\n      name: 'degree',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.LONG,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    // grad = rad / (2*pi) * 400  = rad / 0.015707963267948966192313216916399\n    grad: {\n      name: 'grad',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.SHORT,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    gradian: {\n      name: 'gradian',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.LONG,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    // cycle = rad / (2*pi) = rad / 6.2831853071795864769252867665793\n    cycle: {\n      name: 'cycle',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.NONE,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    // arcsec = rad / (3600 * (360 / 2 * pi)) = rad / 0.0000048481368110953599358991410235795\n    arcsec: {\n      name: 'arcsec',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.NONE,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    // arcmin = rad / (60 * (360 / 2 * pi)) = rad / 0.00029088820866572159615394846141477\n    arcmin: {\n      name: 'arcmin',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.NONE,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    // Electric current\n    A: {\n      name: 'A',\n      base: BASE_UNITS.CURRENT,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    ampere: {\n      name: 'ampere',\n      base: BASE_UNITS.CURRENT,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    // Temperature\n    // K(C) = \u00b0C + 273.15\n    // K(F) = (\u00b0F + 459.67) / 1.8\n    // K(R) = \u00b0R / 1.8\n    K: {\n      name: 'K',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1,\n      offset: 0\n    },\n    degC: {\n      name: 'degC',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1,\n      offset: 273.15\n    },\n    degF: {\n      name: 'degF',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1 / 1.8,\n      offset: 459.67\n    },\n    degR: {\n      name: 'degR',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1 / 1.8,\n      offset: 0\n    },\n    kelvin: {\n      name: 'kelvin',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1,\n      offset: 0\n    },\n    celsius: {\n      name: 'celsius',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1,\n      offset: 273.15\n    },\n    fahrenheit: {\n      name: 'fahrenheit',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1 / 1.8,\n      offset: 459.67\n    },\n    rankine: {\n      name: 'rankine',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1 / 1.8,\n      offset: 0\n    },\n    // amount of substance\n    mol: {\n      name: 'mol',\n      base: BASE_UNITS.AMOUNT_OF_SUBSTANCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    mole: {\n      name: 'mole',\n      base: BASE_UNITS.AMOUNT_OF_SUBSTANCE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    // luminous intensity\n    cd: {\n      name: 'cd',\n      base: BASE_UNITS.LUMINOUS_INTENSITY,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    candela: {\n      name: 'candela',\n      base: BASE_UNITS.LUMINOUS_INTENSITY,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    // TODO: units STERADIAN\n    // {name: 'sr', base: BASE_UNITS.STERADIAN, prefixes: PREFIXES.NONE, value: 1, offset: 0},\n    // {name: 'steradian', base: BASE_UNITS.STERADIAN, prefixes: PREFIXES.NONE, value: 1, offset: 0},\n    // Force\n    N: {\n      name: 'N',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    newton: {\n      name: 'newton',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    dyn: {\n      name: 'dyn',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.SHORT,\n      value: 0.00001,\n      offset: 0\n    },\n    dyne: {\n      name: 'dyne',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.LONG,\n      value: 0.00001,\n      offset: 0\n    },\n    lbf: {\n      name: 'lbf',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.NONE,\n      value: 4.4482216152605,\n      offset: 0\n    },\n    poundforce: {\n      name: 'poundforce',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.NONE,\n      value: 4.4482216152605,\n      offset: 0\n    },\n    kip: {\n      name: 'kip',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.LONG,\n      value: 4448.2216,\n      offset: 0\n    },\n    kilogramforce: {\n      name: 'kilogramforce',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.NONE,\n      value: 9.80665,\n      offset: 0\n    },\n    // Energy\n    J: {\n      name: 'J',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    joule: {\n      name: 'joule',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    erg: {\n      name: 'erg',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.NONE,\n      value: 1e-7,\n      offset: 0\n    },\n    Wh: {\n      name: 'Wh',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.SHORT,\n      value: 3600,\n      offset: 0\n    },\n    BTU: {\n      name: 'BTU',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.BTU,\n      value: 1055.05585262,\n      offset: 0\n    },\n    eV: {\n      name: 'eV',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.SHORT,\n      value: 1.602176565e-19,\n      offset: 0\n    },\n    electronvolt: {\n      name: 'electronvolt',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.LONG,\n      value: 1.602176565e-19,\n      offset: 0\n    },\n    // Power\n    W: {\n      name: 'W',\n      base: BASE_UNITS.POWER,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    watt: {\n      name: 'watt',\n      base: BASE_UNITS.POWER,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    hp: {\n      name: 'hp',\n      base: BASE_UNITS.POWER,\n      prefixes: PREFIXES.NONE,\n      value: 745.6998715386,\n      offset: 0\n    },\n    // Electrical power units\n    VAR: {\n      name: 'VAR',\n      base: BASE_UNITS.POWER,\n      prefixes: PREFIXES.SHORT,\n      value: Complex.I,\n      offset: 0\n    },\n    VA: {\n      name: 'VA',\n      base: BASE_UNITS.POWER,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Pressure\n    Pa: {\n      name: 'Pa',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    psi: {\n      name: 'psi',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 6894.75729276459,\n      offset: 0\n    },\n    atm: {\n      name: 'atm',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 101325,\n      offset: 0\n    },\n    bar: {\n      name: 'bar',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.SHORTLONG,\n      value: 100000,\n      offset: 0\n    },\n    torr: {\n      name: 'torr',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 133.322,\n      offset: 0\n    },\n    mmHg: {\n      name: 'mmHg',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 133.322,\n      offset: 0\n    },\n    mmH2O: {\n      name: 'mmH2O',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 9.80665,\n      offset: 0\n    },\n    cmH2O: {\n      name: 'cmH2O',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 98.0665,\n      offset: 0\n    },\n    // Electric charge\n    coulomb: {\n      name: 'coulomb',\n      base: BASE_UNITS.ELECTRIC_CHARGE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    C: {\n      name: 'C',\n      base: BASE_UNITS.ELECTRIC_CHARGE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Electric capacitance\n    farad: {\n      name: 'farad',\n      base: BASE_UNITS.ELECTRIC_CAPACITANCE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    F: {\n      name: 'F',\n      base: BASE_UNITS.ELECTRIC_CAPACITANCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Electric potential\n    volt: {\n      name: 'volt',\n      base: BASE_UNITS.ELECTRIC_POTENTIAL,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    V: {\n      name: 'V',\n      base: BASE_UNITS.ELECTRIC_POTENTIAL,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Electric resistance\n    ohm: {\n      name: 'ohm',\n      base: BASE_UNITS.ELECTRIC_RESISTANCE,\n      prefixes: PREFIXES.SHORTLONG,\n      // Both Mohm and megaohm are acceptable\n      value: 1,\n      offset: 0\n    },\n\n    /*\n     * Unicode breaks in browsers if charset is not specified\n    \u03a9: {\n      name: '\u03a9',\n      base: BASE_UNITS.ELECTRIC_RESISTANCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    */\n    // Electric inductance\n    henry: {\n      name: 'henry',\n      base: BASE_UNITS.ELECTRIC_INDUCTANCE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    H: {\n      name: 'H',\n      base: BASE_UNITS.ELECTRIC_INDUCTANCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Electric conductance\n    siemens: {\n      name: 'siemens',\n      base: BASE_UNITS.ELECTRIC_CONDUCTANCE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    S: {\n      name: 'S',\n      base: BASE_UNITS.ELECTRIC_CONDUCTANCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Magnetic flux\n    weber: {\n      name: 'weber',\n      base: BASE_UNITS.MAGNETIC_FLUX,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    Wb: {\n      name: 'Wb',\n      base: BASE_UNITS.MAGNETIC_FLUX,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Magnetic flux density\n    tesla: {\n      name: 'tesla',\n      base: BASE_UNITS.MAGNETIC_FLUX_DENSITY,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    T: {\n      name: 'T',\n      base: BASE_UNITS.MAGNETIC_FLUX_DENSITY,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Binary\n    b: {\n      name: 'b',\n      base: BASE_UNITS.BIT,\n      prefixes: PREFIXES.BINARY_SHORT,\n      value: 1,\n      offset: 0\n    },\n    bits: {\n      name: 'bits',\n      base: BASE_UNITS.BIT,\n      prefixes: PREFIXES.BINARY_LONG,\n      value: 1,\n      offset: 0\n    },\n    B: {\n      name: 'B',\n      base: BASE_UNITS.BIT,\n      prefixes: PREFIXES.BINARY_SHORT,\n      value: 8,\n      offset: 0\n    },\n    bytes: {\n      name: 'bytes',\n      base: BASE_UNITS.BIT,\n      prefixes: PREFIXES.BINARY_LONG,\n      value: 8,\n      offset: 0\n    }\n  }; // aliases (formerly plurals)\n\n  var ALIASES = {\n    meters: 'meter',\n    inches: 'inch',\n    feet: 'foot',\n    yards: 'yard',\n    miles: 'mile',\n    links: 'link',\n    rods: 'rod',\n    chains: 'chain',\n    angstroms: 'angstrom',\n    lt: 'l',\n    litres: 'litre',\n    liter: 'litre',\n    liters: 'litre',\n    teaspoons: 'teaspoon',\n    tablespoons: 'tablespoon',\n    minims: 'minim',\n    fluiddrams: 'fluiddram',\n    fluidounces: 'fluidounce',\n    gills: 'gill',\n    cups: 'cup',\n    pints: 'pint',\n    quarts: 'quart',\n    gallons: 'gallon',\n    beerbarrels: 'beerbarrel',\n    oilbarrels: 'oilbarrel',\n    hogsheads: 'hogshead',\n    gtts: 'gtt',\n    grams: 'gram',\n    tons: 'ton',\n    tonnes: 'tonne',\n    grains: 'grain',\n    drams: 'dram',\n    ounces: 'ounce',\n    poundmasses: 'poundmass',\n    hundredweights: 'hundredweight',\n    sticks: 'stick',\n    lb: 'lbm',\n    lbs: 'lbm',\n    kips: 'kip',\n    kgf: 'kilogramforce',\n    acres: 'acre',\n    hectares: 'hectare',\n    sqfeet: 'sqft',\n    sqyard: 'sqyd',\n    sqmile: 'sqmi',\n    sqmiles: 'sqmi',\n    mmhg: 'mmHg',\n    mmh2o: 'mmH2O',\n    cmh2o: 'cmH2O',\n    seconds: 'second',\n    secs: 'second',\n    minutes: 'minute',\n    mins: 'minute',\n    hours: 'hour',\n    hr: 'hour',\n    hrs: 'hour',\n    days: 'day',\n    weeks: 'week',\n    months: 'month',\n    years: 'year',\n    decades: 'decade',\n    centuries: 'century',\n    millennia: 'millennium',\n    hertz: 'hertz',\n    radians: 'radian',\n    degrees: 'degree',\n    gradians: 'gradian',\n    cycles: 'cycle',\n    arcsecond: 'arcsec',\n    arcseconds: 'arcsec',\n    arcminute: 'arcmin',\n    arcminutes: 'arcmin',\n    BTUs: 'BTU',\n    watts: 'watt',\n    joules: 'joule',\n    amperes: 'ampere',\n    coulombs: 'coulomb',\n    volts: 'volt',\n    ohms: 'ohm',\n    farads: 'farad',\n    webers: 'weber',\n    teslas: 'tesla',\n    electronvolts: 'electronvolt',\n    moles: 'mole',\n    bit: 'bits',\n    \"byte\": 'bytes'\n  };\n  /**\n   * Calculate the values for the angle units.\n   * Value is calculated as number or BigNumber depending on the configuration\n   * @param {{number: 'number' | 'BigNumber'}} config\n   */\n\n  function calculateAngleValues(config) {\n    if (config.number === 'BigNumber') {\n      var pi = (0, _constants.createBigNumberPi)(_BigNumber);\n      UNITS.rad.value = new _BigNumber(1);\n      UNITS.deg.value = pi.div(180); // 2 * pi / 360\n\n      UNITS.grad.value = pi.div(200); // 2 * pi / 400\n\n      UNITS.cycle.value = pi.times(2); // 2 * pi\n\n      UNITS.arcsec.value = pi.div(648000); // 2 * pi / 360 / 3600\n\n      UNITS.arcmin.value = pi.div(10800); // 2 * pi / 360 / 60\n    } else {\n      // number\n      UNITS.rad.value = 1;\n      UNITS.deg.value = Math.PI / 180; // 2 * pi / 360\n\n      UNITS.grad.value = Math.PI / 200; // 2 * pi / 400\n\n      UNITS.cycle.value = Math.PI * 2; // 2 * pi\n\n      UNITS.arcsec.value = Math.PI / 648000; // 2 * pi / 360 / 3600\n\n      UNITS.arcmin.value = Math.PI / 10800; // 2 * pi / 360 / 60\n    } // copy to the full names of the angles\n\n\n    UNITS.radian.value = UNITS.rad.value;\n    UNITS.degree.value = UNITS.deg.value;\n    UNITS.gradian.value = UNITS.grad.value;\n  } // apply the angle values now\n\n\n  calculateAngleValues(config);\n\n  if (on) {\n    // recalculate the values on change of configuration\n    on('config', function (curr, prev) {\n      if (curr.number !== prev.number) {\n        calculateAngleValues(curr);\n      }\n    });\n  }\n  /**\n   * A unit system is a set of dimensionally independent base units plus a set of derived units, formed by multiplication and division of the base units, that are by convention used with the unit system.\n   * A user perhaps could issue a command to select a preferred unit system, or use the default (see below).\n   * Auto unit system: The default unit system is updated on the fly anytime a unit is parsed. The corresponding unit in the default unit system is updated, so that answers are given in the same units the user supplies.\n   */\n\n\n  var UNIT_SYSTEMS = {\n    si: {\n      // Base units\n      NONE: {\n        unit: UNIT_NONE,\n        prefix: PREFIXES.NONE['']\n      },\n      LENGTH: {\n        unit: UNITS.m,\n        prefix: PREFIXES.SHORT['']\n      },\n      MASS: {\n        unit: UNITS.g,\n        prefix: PREFIXES.SHORT.k\n      },\n      TIME: {\n        unit: UNITS.s,\n        prefix: PREFIXES.SHORT['']\n      },\n      CURRENT: {\n        unit: UNITS.A,\n        prefix: PREFIXES.SHORT['']\n      },\n      TEMPERATURE: {\n        unit: UNITS.K,\n        prefix: PREFIXES.SHORT['']\n      },\n      LUMINOUS_INTENSITY: {\n        unit: UNITS.cd,\n        prefix: PREFIXES.SHORT['']\n      },\n      AMOUNT_OF_SUBSTANCE: {\n        unit: UNITS.mol,\n        prefix: PREFIXES.SHORT['']\n      },\n      ANGLE: {\n        unit: UNITS.rad,\n        prefix: PREFIXES.SHORT['']\n      },\n      BIT: {\n        unit: UNITS.bits,\n        prefix: PREFIXES.SHORT['']\n      },\n      // Derived units\n      FORCE: {\n        unit: UNITS.N,\n        prefix: PREFIXES.SHORT['']\n      },\n      ENERGY: {\n        unit: UNITS.J,\n        prefix: PREFIXES.SHORT['']\n      },\n      POWER: {\n        unit: UNITS.W,\n        prefix: PREFIXES.SHORT['']\n      },\n      PRESSURE: {\n        unit: UNITS.Pa,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_CHARGE: {\n        unit: UNITS.C,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_CAPACITANCE: {\n        unit: UNITS.F,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_POTENTIAL: {\n        unit: UNITS.V,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_RESISTANCE: {\n        unit: UNITS.ohm,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_INDUCTANCE: {\n        unit: UNITS.H,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_CONDUCTANCE: {\n        unit: UNITS.S,\n        prefix: PREFIXES.SHORT['']\n      },\n      MAGNETIC_FLUX: {\n        unit: UNITS.Wb,\n        prefix: PREFIXES.SHORT['']\n      },\n      MAGNETIC_FLUX_DENSITY: {\n        unit: UNITS.T,\n        prefix: PREFIXES.SHORT['']\n      },\n      FREQUENCY: {\n        unit: UNITS.Hz,\n        prefix: PREFIXES.SHORT['']\n      }\n    }\n  }; // Clone to create the other unit systems\n\n  UNIT_SYSTEMS.cgs = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si));\n  UNIT_SYSTEMS.cgs.LENGTH = {\n    unit: UNITS.m,\n    prefix: PREFIXES.SHORT.c\n  };\n  UNIT_SYSTEMS.cgs.MASS = {\n    unit: UNITS.g,\n    prefix: PREFIXES.SHORT['']\n  };\n  UNIT_SYSTEMS.cgs.FORCE = {\n    unit: UNITS.dyn,\n    prefix: PREFIXES.SHORT['']\n  };\n  UNIT_SYSTEMS.cgs.ENERGY = {\n    unit: UNITS.erg,\n    prefix: PREFIXES.NONE['']\n  }; // there are wholly 4 unique cgs systems for electricity and magnetism,\n  // so let's not worry about it unless somebody complains\n\n  UNIT_SYSTEMS.us = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si));\n  UNIT_SYSTEMS.us.LENGTH = {\n    unit: UNITS.ft,\n    prefix: PREFIXES.NONE['']\n  };\n  UNIT_SYSTEMS.us.MASS = {\n    unit: UNITS.lbm,\n    prefix: PREFIXES.NONE['']\n  };\n  UNIT_SYSTEMS.us.TEMPERATURE = {\n    unit: UNITS.degF,\n    prefix: PREFIXES.NONE['']\n  };\n  UNIT_SYSTEMS.us.FORCE = {\n    unit: UNITS.lbf,\n    prefix: PREFIXES.NONE['']\n  };\n  UNIT_SYSTEMS.us.ENERGY = {\n    unit: UNITS.BTU,\n    prefix: PREFIXES.BTU['']\n  };\n  UNIT_SYSTEMS.us.POWER = {\n    unit: UNITS.hp,\n    prefix: PREFIXES.NONE['']\n  };\n  UNIT_SYSTEMS.us.PRESSURE = {\n    unit: UNITS.psi,\n    prefix: PREFIXES.NONE['']\n  }; // Add additional unit systems here.\n  // Choose a unit system to seed the auto unit system.\n\n  UNIT_SYSTEMS.auto = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si)); // Set the current unit system\n\n  var currentUnitSystem = UNIT_SYSTEMS.auto;\n  /**\n   * Set a unit system for formatting derived units.\n   * @param {string} [name] The name of the unit system.\n   */\n\n  Unit.setUnitSystem = function (name) {\n    if ((0, _object.hasOwnProperty)(UNIT_SYSTEMS, name)) {\n      currentUnitSystem = UNIT_SYSTEMS[name];\n    } else {\n      throw new Error('Unit system ' + name + ' does not exist. Choices are: ' + Object.keys(UNIT_SYSTEMS).join(', '));\n    }\n  };\n  /**\n   * Return the current unit system.\n   * @return {string} The current unit system.\n   */\n\n\n  Unit.getUnitSystem = function () {\n    for (var _key in UNIT_SYSTEMS) {\n      if ((0, _object.hasOwnProperty)(UNIT_SYSTEMS, _key)) {\n        if (UNIT_SYSTEMS[_key] === currentUnitSystem) {\n          return _key;\n        }\n      }\n    }\n  };\n  /**\n   * Converters to convert from number to an other numeric type like BigNumber\n   * or Fraction\n   */\n\n\n  Unit.typeConverters = {\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(x + ''); // stringify to prevent constructor error\n    },\n    Fraction: function Fraction(x) {\n      return new _Fraction(x);\n    },\n    Complex: function Complex(x) {\n      return x;\n    },\n    number: function number(x) {\n      return x;\n    }\n  };\n  /**\n   * Retrieve the right convertor function corresponding with the type\n   * of provided exampleValue.\n   *\n   * @param {string} type   A string 'number', 'BigNumber', or 'Fraction'\n   *                        In case of an unknown type,\n   * @return {Function}\n   */\n\n  Unit._getNumberConverter = function (type) {\n    if (!Unit.typeConverters[type]) {\n      throw new TypeError('Unsupported type \"' + type + '\"');\n    }\n\n    return Unit.typeConverters[type];\n  }; // Add dimensions to each built-in unit\n\n\n  for (var _key2 in UNITS) {\n    if ((0, _object.hasOwnProperty)(UNITS, _key2)) {\n      var unit = UNITS[_key2];\n      unit.dimensions = unit.base.dimensions;\n    }\n  } // Create aliases\n\n\n  for (var _name2 in ALIASES) {\n    if ((0, _object.hasOwnProperty)(ALIASES, _name2)) {\n      var _unit2 = UNITS[ALIASES[_name2]];\n      var alias = {};\n\n      for (var _key3 in _unit2) {\n        if ((0, _object.hasOwnProperty)(_unit2, _key3)) {\n          alias[_key3] = _unit2[_key3];\n        }\n      }\n\n      alias.name = _name2;\n      UNITS[_name2] = alias;\n    }\n  }\n  /**\n   * Checks if a character is a valid latin letter (upper or lower case).\n   * Note that this function can be overridden, for example to allow support of other alphabets.\n   * @param {string} c Tested character\n   */\n\n\n  Unit.isValidAlpha = function isValidAlpha(c) {\n    return /^[a-zA-Z]$/.test(c);\n  };\n\n  function assertUnitNameIsValid(name) {\n    for (var i = 0; i < name.length; i++) {\n      c = name.charAt(i);\n\n      if (i === 0 && !Unit.isValidAlpha(c)) {\n        throw new Error('Invalid unit name (must begin with alpha character): \"' + name + '\"');\n      }\n\n      if (i > 0 && !(Unit.isValidAlpha(c) || isDigit(c))) {\n        throw new Error('Invalid unit name (only alphanumeric characters are allowed): \"' + name + '\"');\n      }\n    }\n  }\n  /**\n   * Wrapper around createUnitSingle.\n   * Example:\n   *  createUnit({\n   *    foo: { },\n   *    bar: {\n   *      definition: 'kg/foo',\n   *      aliases: ['ba', 'barr', 'bars'],\n   *      offset: 200\n   *    },\n   *    baz: '4 bar'\n   *  },\n   *  {\n   *    override: true\n   *  })\n   * @param {object} obj      Object map. Each key becomes a unit which is defined by its value.\n   * @param {object} options\n   */\n\n\n  Unit.createUnit = function (obj, options) {\n    if (_typeof(obj) !== 'object') {\n      throw new TypeError(\"createUnit expects first parameter to be of type 'Object'\");\n    } // Remove all units and aliases we are overriding\n\n\n    if (options && options.override) {\n      for (var _key4 in obj) {\n        if ((0, _object.hasOwnProperty)(obj, _key4)) {\n          Unit.deleteUnit(_key4);\n        }\n\n        if (obj[_key4].aliases) {\n          for (var i = 0; i < obj[_key4].aliases.length; i++) {\n            Unit.deleteUnit(obj[_key4].aliases[i]);\n          }\n        }\n      }\n    } // TODO: traverse multiple times until all units have been added\n\n\n    var lastUnit;\n\n    for (var _key5 in obj) {\n      if ((0, _object.hasOwnProperty)(obj, _key5)) {\n        lastUnit = Unit.createUnitSingle(_key5, obj[_key5]);\n      }\n    }\n\n    return lastUnit;\n  };\n  /**\n   * Create a user-defined unit and register it with the Unit type.\n   * Example:\n   *  createUnitSingle('knot', '0.514444444 m/s')\n   *  createUnitSingle('acre', new Unit(43560, 'ft^2'))\n   *\n   * @param {string} name      The name of the new unit. Must be unique. Example: 'knot'\n   * @param {string, Unit, Object} definition      Definition of the unit in terms\n   * of existing units. For example, '0.514444444 m / s'. Can be a Unit, a string,\n   * or an Object. If an Object, may have the following properties:\n   *   - definition {string|Unit} The definition of this unit.\n   *   - prefixes {string} \"none\", \"short\", \"long\", \"binary_short\", or \"binary_long\".\n   *     The default is \"none\".\n   *   - aliases {Array} Array of strings. Example: ['knots', 'kt', 'kts']\n   *   - offset {Numeric} An offset to apply when converting from the unit. For\n   *     example, the offset for celsius is 273.15 and the offset for farhenheit\n   *     is 459.67. Default is 0.\n   *   - baseName {string} If the unit's dimension does not match that of any other\n   *     base unit, the name of the newly create base unit. Otherwise, this property\n   *     has no effect.\n   *\n   * @param {Object} options   (optional) An object containing any of the following\n   * properties:\n   *   - override {boolean} Whether this unit should be allowed to override existing\n   *     units.\n   *\n   * @return {Unit}\n   */\n\n\n  Unit.createUnitSingle = function (name, obj, options) {\n    if (typeof obj === 'undefined' || obj === null) {\n      obj = {};\n    }\n\n    if (typeof name !== 'string') {\n      throw new TypeError(\"createUnitSingle expects first parameter to be of type 'string'\");\n    } // Check collisions with existing units\n\n\n    if ((0, _object.hasOwnProperty)(UNITS, name)) {\n      throw new Error('Cannot create unit \"' + name + '\": a unit with that name already exists');\n    } // TODO: Validate name for collisions with other built-in functions (like abs or cos, for example), and for acceptable variable names. For example, '42' is probably not a valid unit. Nor is '%', since it is also an operator.\n\n\n    assertUnitNameIsValid(name);\n    var defUnit = null; // The Unit from which the new unit will be created.\n\n    var aliases = [];\n    var offset = 0;\n    var definition;\n    var prefixes;\n    var baseName;\n\n    if (obj && obj.type === 'Unit') {\n      defUnit = obj.clone();\n    } else if (typeof obj === 'string') {\n      if (obj !== '') {\n        definition = obj;\n      }\n    } else if (_typeof(obj) === 'object') {\n      definition = obj.definition;\n      prefixes = obj.prefixes;\n      offset = obj.offset;\n      baseName = obj.baseName;\n\n      if (obj.aliases) {\n        aliases = obj.aliases.valueOf(); // aliases could be a Matrix, so convert to Array\n      }\n    } else {\n      throw new TypeError('Cannot create unit \"' + name + '\" from \"' + obj.toString() + '\": expecting \"string\" or \"Unit\" or \"Object\"');\n    }\n\n    if (aliases) {\n      for (var i = 0; i < aliases.length; i++) {\n        if ((0, _object.hasOwnProperty)(UNITS, aliases[i])) {\n          throw new Error('Cannot create alias \"' + aliases[i] + '\": a unit with that name already exists');\n        }\n      }\n    }\n\n    if (definition && typeof definition === 'string' && !defUnit) {\n      try {\n        defUnit = Unit.parse(definition, {\n          allowNoUnits: true\n        });\n      } catch (ex) {\n        ex.message = 'Could not create unit \"' + name + '\" from \"' + definition + '\": ' + ex.message;\n        throw ex;\n      }\n    } else if (definition && definition.type === 'Unit') {\n      defUnit = definition.clone();\n    }\n\n    aliases = aliases || [];\n    offset = offset || 0;\n\n    if (prefixes && prefixes.toUpperCase) {\n      prefixes = PREFIXES[prefixes.toUpperCase()] || PREFIXES.NONE;\n    } else {\n      prefixes = PREFIXES.NONE;\n    } // If defUnit is null, it is because the user did not\n    // specify a defintion. So create a new base dimension.\n\n\n    var newUnit = {};\n\n    if (!defUnit) {\n      // Add a new base dimension\n      baseName = baseName || name + '_STUFF'; // foo --\u003e foo_STUFF, or the essence of foo\n\n      if (BASE_DIMENSIONS.indexOf(baseName) >= 0) {\n        throw new Error('Cannot create new base unit \"' + name + '\": a base unit with that name already exists (and cannot be overridden)');\n      }\n\n      BASE_DIMENSIONS.push(baseName); // Push 0 onto existing base units\n\n      for (var b in BASE_UNITS) {\n        if ((0, _object.hasOwnProperty)(BASE_UNITS, b)) {\n          BASE_UNITS[b].dimensions[BASE_DIMENSIONS.length - 1] = 0;\n        }\n      } // Add the new base unit\n\n\n      var newBaseUnit = {\n        dimensions: []\n      };\n\n      for (var _i6 = 0; _i6 < BASE_DIMENSIONS.length; _i6++) {\n        newBaseUnit.dimensions[_i6] = 0;\n      }\n\n      newBaseUnit.dimensions[BASE_DIMENSIONS.length - 1] = 1;\n      newBaseUnit.key = baseName;\n      BASE_UNITS[baseName] = newBaseUnit;\n      newUnit = {\n        name: name,\n        value: 1,\n        dimensions: BASE_UNITS[baseName].dimensions.slice(0),\n        prefixes: prefixes,\n        offset: offset,\n        base: BASE_UNITS[baseName]\n      };\n      currentUnitSystem[baseName] = {\n        unit: newUnit,\n        prefix: PREFIXES.NONE['']\n      };\n    } else {\n      newUnit = {\n        name: name,\n        value: defUnit.value,\n        dimensions: defUnit.dimensions.slice(0),\n        prefixes: prefixes,\n        offset: offset\n      }; // Create a new base if no matching base exists\n\n      var anyMatch = false;\n\n      for (var _i7 in BASE_UNITS) {\n        if ((0, _object.hasOwnProperty)(BASE_UNITS, _i7)) {\n          var match = true;\n\n          for (var j = 0; j < BASE_DIMENSIONS.length; j++) {\n            if (Math.abs((newUnit.dimensions[j] || 0) - (BASE_UNITS[_i7].dimensions[j] || 0)) > 1e-12) {\n              match = false;\n              break;\n            }\n          }\n\n          if (match) {\n            anyMatch = true;\n            newUnit.base = BASE_UNITS[_i7];\n            break;\n          }\n        }\n      }\n\n      if (!anyMatch) {\n        baseName = baseName || name + '_STUFF'; // foo --\u003e foo_STUFF, or the essence of foo\n        // Add the new base unit\n\n        var _newBaseUnit = {\n          dimensions: defUnit.dimensions.slice(0)\n        };\n        _newBaseUnit.key = baseName;\n        BASE_UNITS[baseName] = _newBaseUnit;\n        currentUnitSystem[baseName] = {\n          unit: newUnit,\n          prefix: PREFIXES.NONE['']\n        };\n        newUnit.base = BASE_UNITS[baseName];\n      }\n    }\n\n    Unit.UNITS[name] = newUnit;\n\n    for (var _i8 = 0; _i8 < aliases.length; _i8++) {\n      var aliasName = aliases[_i8];\n      var _alias = {};\n\n      for (var _key6 in newUnit) {\n        if ((0, _object.hasOwnProperty)(newUnit, _key6)) {\n          _alias[_key6] = newUnit[_key6];\n        }\n      }\n\n      _alias.name = aliasName;\n      Unit.UNITS[aliasName] = _alias;\n    } // delete the memoization cache, since adding a new unit to the array\n    // invalidates all old results\n\n\n    delete _findUnit.cache;\n    return new Unit(null, name);\n  };\n\n  Unit.deleteUnit = function (name) {\n    delete Unit.UNITS[name];\n  }; // expose arrays with prefixes, dimensions, units, systems\n\n\n  Unit.PREFIXES = PREFIXES;\n  Unit.BASE_DIMENSIONS = BASE_DIMENSIONS;\n  Unit.BASE_UNITS = BASE_UNITS;\n  Unit.UNIT_SYSTEMS = UNIT_SYSTEMS;\n  Unit.UNITS = UNITS;\n  return Unit;\n}, {\n  isClass: true\n});\nexports.createUnitClass = createUnitClass;\n};"],
"names":["shadow$provide","global","require","module","exports","_typeof","obj","Symbol","iterator","constructor","prototype","_extends","Object","assign","target","i","arguments","length","source","key","hasOwnProperty","call","apply","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","defineProperty","value","configurable","writable","getOwnPropertyDescriptors","defineProperties","createUnitClass","_is","_factory","_function","_string","_object","_constants","factory","name","dependencies","_ref","Unit","Error","undefined","isNumeric","isComplex","TypeError","u","parse","units","dimensions","unit","UNIT_NONE","prefix","PREFIXES","NONE","power","BASE_DIMENSIONS","_normalize","fixPrefix","skipAutomaticSimplification","skipWhitespace","c","next","isDigit","index","text","charAt","revert","oldIndex","parseNumber","number","tentativeIndex","tentativeNumber","parseCharacter","toFind","getNumericIfUnitless","equalBase","BASE_UNITS","config","predictable","calculateAngleValues","pi","createBigNumberPi","_BigNumber","UNITS","rad","deg","div","grad","cycle","times","arcsec","arcmin","Math","PI","radian","degree","gradian","on","addScalar","subtract","multiplyScalar","divideScalar","pow","abs","fix","round","equal","format","Complex","BigNumber","_Fraction","Fraction","toNumber","type","isUnit","Unit.parse","str","options","powerMultiplierCurrent","expectingUnit","valueStr","err","parseFloat","powerMultiplierStack","powerMultiplierStackProduct","oldC","unitName","isValidAlpha","firstC","uStr","SyntaxError","toString","res","_findUnit","p","pop","base","UNIT_SYSTEMS","auto","allowNoUnits","clone","Unit.prototype.clone","slice","_isDerived","Unit.prototype._isDerived","Unit.prototype._normalize","convert","_getNumberConverter","typeOf","unitValue","unitPrefixValue","unitPower","unitOffset","offset","_denormalize","Unit.prototype._denormalize","prefixValue","memoize","prefixes","_name","endsWith","_unit","prefixName","substring","_prefix","hasher","args","limit","isValuelessUnit","Unit.isValuelessUnit","hasBase","Unit.prototype.hasBase","Unit.prototype.equalBase","other","equals","Unit.prototype.equals","multiply","Unit.prototype.multiply","_i","inverted","valThis","valOther","divide","Unit.prototype.divide","_i2","Unit.prototype.pow","_i3","Unit.prototype.abs","ret","W","to","Unit.prototype.to","valuelessUnit","concat","Unit.prototype.toNumber","toNumeric","Unit.prototype.toNumeric","Unit.prototype.toString","toJSON","Unit.prototype.toJSON","mathjs","formatUnits","fromJSON","Unit.fromJSON","json","valueOf","simplify","Unit.prototype.simplify","proposedUnitList","currentUnitSystem","matchingBase","matchingUnit","missingBaseDim","baseDim","toSI","Unit.prototype.toSI","si","Unit.prototype.formatUnits","strNum","strDen","nNum","nDen","_i4","substr","Unit.prototype.format","simp","isImaginary","re","VAR","VA","_bestPrefix","unitStr","Unit.prototype._bestPrefix","absValue","absUnitValue","bestPrefix","bestDiff","log","LN10","scientific","diff","splitUnit","Unit.prototype.splitUnit","parts","x","xNumeric","xRounded","xFixed","isNearlyEqual","y","_i5","testSum","SHORT","da","h","k","M","G","T","P","E","Z","Y","d","m","n","f","a","z","LONG","deca","hecto","kilo","mega","giga","tera","peta","exa","zetta","yotta","deci","centi","milli","micro","nano","pico","femto","atto","zepto","yocto","SQUARED","CUBIC","BINARY_SHORT_SI","BINARY_SHORT_IEC","Ki","Mi","Gi","Ti","Pi","Ei","Zi","Yi","BINARY_LONG_SI","BINARY_LONG_IEC","kibi","mebi","gibi","tebi","pebi","exi","zebi","yobi","BTU","MM","SHORTLONG","BINARY_SHORT","BINARY_LONG","MASS","LENGTH","TIME","CURRENT","TEMPERATURE","LUMINOUS_INTENSITY","AMOUNT_OF_SUBSTANCE","FORCE","SURFACE","VOLUME","ENERGY","POWER","PRESSURE","ELECTRIC_CHARGE","ELECTRIC_CAPACITANCE","ELECTRIC_POTENTIAL","ELECTRIC_RESISTANCE","ELECTRIC_INDUCTANCE","ELECTRIC_CONDUCTANCE","MAGNETIC_FLUX","MAGNETIC_FLUX_DENSITY","FREQUENCY","ANGLE","BIT","BASE_UNIT_NONE","map","meter","inch","foot","yard","mile","link","rod","chain","angstrom","ft","yd","mi","li","rd","ch","mil","m2","sqin","sqft","sqyd","sqmi","sqrd","sqch","sqmil","acre","hectare","m3","L","l","litre","cuin","cuft","cuyd","teaspoon","tablespoon","drop","gtt","minim","fluiddram","fluidounce","gill","cc","cup","pint","quart","gallon","beerbarrel","oilbarrel","hogshead","fldr","floz","gi","cp","pt","qt","gal","bbl","obl","g","gram","ton","t","tonne","grain","dram","ounce","poundmass","hundredweight","stick","stone","gr","dr","oz","lbm","cwt","s","min","second","sec","minute","hour","day","week","month","year","decade","century","millennium","hertz","reciprocal","Hz","A","ampere","K","degC","degF","degR","kelvin","celsius","fahrenheit","rankine","mol","mole","cd","candela","N","newton","dyn","dyne","lbf","poundforce","kip","kilogramforce","J","joule","erg","Wh","eV","electronvolt","watt","hp","I","Pa","psi","atm","bar","torr","mmHg","mmH2O","cmH2O","coulomb","C","farad","F","volt","V","ohm","henry","H","siemens","S","weber","Wb","tesla","b","bits","B","bytes","ALIASES","meters","inches","feet","yards","miles","links","rods","chains","angstroms","lt","litres","liter","liters","teaspoons","tablespoons","minims","fluiddrams","fluidounces","gills","cups","pints","quarts","gallons","beerbarrels","oilbarrels","hogsheads","gtts","grams","tons","tonnes","grains","drams","ounces","poundmasses","hundredweights","sticks","lb","lbs","kips","kgf","acres","hectares","sqfeet","sqyard","sqmile","sqmiles","mmhg","mmh2o","cmh2o","seconds","secs","minutes","mins","hours","hr","hrs","days","weeks","months","years","decades","centuries","millennia","radians","degrees","gradians","cycles","arcsecond","arcseconds","arcminute","arcminutes","BTUs","watts","joules","amperes","coulombs","volts","ohms","farads","webers","teslas","electronvolts","moles","bit","curr","prev","cgs","JSON","stringify","us","setUnitSystem","Unit.setUnitSystem","join","getUnitSystem","Unit.getUnitSystem","_key","typeConverters","Unit._getNumberConverter","_key2","_name2","_unit2","alias","_key3","Unit.isValidAlpha","test","createUnit","Unit.createUnit","override","_key4","aliases","deleteUnit","lastUnit","_key5","createUnitSingle","Unit.createUnitSingle","defUnit","definition","baseName","ex","message","toUpperCase","newUnit","anyMatch","_i7","match","j","_newBaseUnit","indexOf","newBaseUnit","_i6","_i8","aliasName","_alias","_key6","cache","Unit.deleteUnit","isClass"]
}
