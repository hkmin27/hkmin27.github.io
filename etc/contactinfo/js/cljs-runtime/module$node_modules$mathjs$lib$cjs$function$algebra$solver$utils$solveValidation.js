shadow$provide.module$node_modules$mathjs$lib$cjs$function$algebra$solver$utils$solveValidation=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createSolveValidation=function(_ref){var DenseMatrix=_ref.DenseMatrix;return function(m,b,copy){var mSize=m.size();if(2!==mSize.length)throw new RangeError("Matrix must be two dimensional (size: "+(0,_string.format)(mSize)+")");m=mSize[0];if(m!==mSize[1])throw new RangeError("Matrix must be square (size: "+
(0,_string.format)(mSize)+")");mSize=[];if((0,_is.isMatrix)(b)){var bSize=b.size(),bdata=b._data;if(1===bSize.length){if(bSize[0]!==m)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(copy=0;copy<m;copy++)mSize[copy]=[bdata[copy]];return new DenseMatrix({data:mSize,size:[m,1],datatype:b._datatype})}if(2===bSize.length){if(bSize[0]!==m||1!==bSize[1])throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");if((0,_is.isDenseMatrix)(b)){if(copy){mSize=
[];for(copy=0;copy<m;copy++)mSize[copy]=[bdata[copy][0]];return new DenseMatrix({data:mSize,size:[m,1],datatype:b._datatype})}return b}if((0,_is.isSparseMatrix)(b)){for(copy=0;copy<m;copy++)mSize[copy]=[0];copy=b._values;bdata=b._index;var ptr=b._ptr;bSize=ptr[1];for(ptr=ptr[0];ptr<bSize;ptr++)mSize[bdata[ptr]][0]=copy[ptr];return new DenseMatrix({data:mSize,size:[m,1],datatype:b._datatype})}}throw new RangeError("Dimension mismatch. The right side has to be either 1- or 2-dimensional vector.");}if((0,
_is.isArray)(b)){copy=(0,_array.arraySize)(b);if(1===copy.length){if(copy[0]!==m)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(copy=0;copy<m;copy++)mSize[copy]=[b[copy]];return new DenseMatrix({data:mSize,size:[m,1]})}if(2===copy.length){if(copy[0]!==m||1!==copy[1])throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(copy=0;copy<m;copy++)mSize[copy]=[b[copy][0]];return new DenseMatrix({data:mSize,size:[m,1]})}throw new RangeError("Dimension mismatch. The right side has to be either 1- or 2-dimensional vector.");
}}};var _is=require("module$node_modules$mathjs$lib$cjs$utils$is"),_array=require("module$node_modules$mathjs$lib$cjs$utils$array"),_string=require("module$node_modules$mathjs$lib$cjs$utils$string")}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$algebra$solver$utils$solveValidation.js.map
