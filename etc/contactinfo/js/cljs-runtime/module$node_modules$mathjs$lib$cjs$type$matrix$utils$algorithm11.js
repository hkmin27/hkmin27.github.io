shadow$provide.module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm11=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createAlgorithm11=void 0;global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("algorithm11",["typed","equalScalar"],function(_ref){var typed=_ref.typed,equalScalar=_ref.equalScalar;return function(s,b,callback,inverse){var avalues=s._values,aindex=s._index,aptr=s._ptr,asize=s._size,
adt=s._datatype;if(!avalues)throw Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var rows=asize[0];asize=asize[1];var eq=equalScalar,zero=0,cf=callback;if("string"===typeof adt){var dt=adt;eq=typed.find(equalScalar,[dt,dt]);zero=typed.convert(0,dt);b=typed.convert(b,dt);cf=typed.find(callback,[dt,dt])}callback=[];adt=[];for(var cptr=[],j=0;j<asize;j++){cptr[j]=adt.length;for(var k1=aptr[j+1],k=aptr[j];k<k1;k++){var i=aindex[k],v=inverse?cf(b,avalues[k]):cf(avalues[k],
b);eq(v,zero)||(adt.push(i),callback.push(v))}}cptr[asize]=adt.length;return s.createSparseMatrix({values:callback,index:adt,ptr:cptr,size:[rows,asize],datatype:dt})}});exports.createAlgorithm11=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm11.js.map
