shadow$provide.module$node_modules$mathjs$lib$cjs$expression$transform$concat_transform=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createConcatTransform=void 0;var _is=require("module$node_modules$mathjs$lib$cjs$utils$is"),_errorTransform=require("module$node_modules$mathjs$lib$cjs$expression$transform$utils$errorTransform");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");var _concat=require("module$node_modules$mathjs$lib$cjs$function$matrix$concat");
require=(0,global.factory)("concat",["typed","matrix","isInteger"],function(_ref){var typed=_ref.typed,matrix=_ref.matrix;_ref=_ref.isInteger;var concat=(0,_concat.createConcat)({typed:typed,matrix:matrix,isInteger:_ref});return typed("concat",{"...any":function(args){var lastIndex=args.length-1,last=args[lastIndex];(0,_is.isNumber)(last)?args[lastIndex]=last-1:(0,_is.isBigNumber)(last)&&(args[lastIndex]=last.minus(1));try{return concat.apply(null,args)}catch(err){throw(0,_errorTransform.errorTransform)(err);
}}})},{isTransformFunction:!0});exports.createConcatTransform=require}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$expression$transform$concat_transform.js.map
