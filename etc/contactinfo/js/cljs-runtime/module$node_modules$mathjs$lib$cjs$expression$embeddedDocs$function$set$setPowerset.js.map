{
"version":3,
"file":"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$set$setPowerset.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,mFAAA,CAAwG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhJC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,eAAR,CARsBA,CACpBC,KAAM,aADcD,CAEpBE,SAAU,KAFUF,CAGpBG,OAAQ,CAAC,kBAAD,CAHYH,CAIpBI,YAAa,+LAJOJ,CAKpBK,SAAU,CAAC,wBAAD,CALUL;AAMpBM,QAAS,CAAC,cAAD,CANWN,CAP0H;",
"sources":["node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/set/setPowerset.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$set$setPowerset\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setPowersetDocs = void 0;\nvar setPowersetDocs = {\n  name: 'setPowerset',\n  category: 'Set',\n  syntax: ['setPowerset(set)'],\n  description: 'Create the powerset of a (multi)set: the powerset contains very possible subsets of a (multi)set. A multi-dimension array will be converted to a single-dimension array before the operation.',\n  examples: ['setPowerset([1, 2, 3])'],\n  seealso: ['setCartesian']\n};\nexports.setPowersetDocs = setPowersetDocs;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","setPowersetDocs","name","category","syntax","description","examples","seealso"]
}
