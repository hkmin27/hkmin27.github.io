shadow$provide.module$node_modules$mathjs$lib$cjs$function$algebra$sparse$csSqr=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.createCsSqr=void 0;var _csPermute=require("module$node_modules$mathjs$lib$cjs$function$algebra$sparse$csPermute"),_csPost=require("module$node_modules$mathjs$lib$cjs$function$algebra$sparse$csPost"),_csEtree=require("module$node_modules$mathjs$lib$cjs$function$algebra$sparse$csEtree"),_csAmd=require("module$node_modules$mathjs$lib$cjs$function$algebra$sparse$csAmd"),
_csCounts=require("module$node_modules$mathjs$lib$cjs$function$algebra$sparse$csCounts");global=require("module$node_modules$mathjs$lib$cjs$utils$factory");global=(0,global.factory)("csSqr",["add","multiply","transpose"],function(_ref){var add=_ref.add,multiply=_ref.multiply;_ref=_ref.transpose;var csAmd=(0,_csAmd.createCsAmd)({add:add,multiply:multiply,transpose:_ref}),csCounts=(0,_csCounts.createCsCounts)({transpose:_ref});return function(order,a,qr){var aptr=a._ptr,n=a._size[1],s={};s.q=csAmd(order,
a);if(order&&!s.q)return null;if(qr){qr=order?(0,_csPermute.csPermute)(a,null,s.q,0):a;s.parent=(0,_csEtree.csEtree)(qr,1);order=(0,_csPost.csPost)(s.parent,n);s.cp=csCounts(qr,s.parent,order,1);if(order=qr&&s.parent&&s.cp){order=qr._ptr;a=qr._index;aptr=qr._size;qr=aptr[0];aptr=aptr[1];s.pinv=[];s.leftmost=[];var parent=s.parent,pinv=s.pinv,leftmost=s.leftmost,w=[],tail=qr+aptr,nque=qr+2*aptr,i,k;for(k=0;k<aptr;k++)w[qr+k]=-1,w[tail+k]=-1,w[nque+k]=0;for(i=0;i<qr;i++)leftmost[i]=-1;for(k=aptr-1;0<=
k;k--){var p=order[k];for(i=order[k+1];p<i;p++)leftmost[a[p]]=k}for(i=qr-1;0<=i;i--)pinv[i]=-1,k=leftmost[i],-1!==k&&(0===w[nque+k]++&&(w[tail+k]=i),w[0+i]=w[qr+k],w[qr+k]=i);s.lnz=0;s.m2=qr;for(k=0;k<aptr;k++)i=w[qr+k],s.lnz++,0>i&&(i=s.m2++),pinv[i]=k,0>=--nque[k]||(s.lnz+=w[nque+k],order=parent[k],-1!==order&&(0===w[nque+order]&&(w[tail+order]=w[tail+k]),w[0+w[tail+k]]=w[qr+order],w[qr+order]=w[0+i],w[nque+order]+=w[nque+k]));for(i=0;i<qr;i++)0>pinv[i]&&(pinv[i]=k++);order=!0}if(order)for(order=
s.unz=0;order<n;order++)s.unz+=s.cp[order]}else s.unz=4*aptr[n]+n,s.lnz=s.unz;return s}});exports.createCsSqr=global}
//# sourceMappingURL=module$node_modules$mathjs$lib$cjs$function$algebra$sparse$csSqr.js.map
